%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (User) ()
%%Title: (Water Rain Drops.eps)
%%CreationDate: 10/31/2009 3:45 AM
%%Canvassize: 16383
%%BoundingBox: 21 25 601 605
%%HiResBoundingBox: 21.5342 25.3906 600.5752 604.4312
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 0 0 0 1 (New Color Swatch)
%%+ 0.2 0 0 0 (New Color Swatch 1)
%%+ 0 0 0 0.2 (New Color Swatch 10)
%%+ 0 0.6 0.8 0 (New Color Swatch 11)
%%+ 0 0 0 0 (New Color Swatch 2)
%%+ 0 0 0.2 0 (New Color Swatch 3)
%%+ 0.2 0 0 0 (New Color Swatch 34)
%%+ 0 1 1 0.54 (New Color Swatch 35)
%%+ 0 0 1 0 (New Color Swatch 36)
%%+ 0 1 1 0.72 (New Color Swatch 37)
%%+ 0 0.14 0.34 0 (New Color Swatch 38)
%%+ 0 0 0 0 (New Color Swatch 39)
%%+ 0 1 1 0.53 (New Color Swatch 4)
%%+ 0 0 0.2 0 (New Color Swatch 40)
%%+ 0 0 0 1 (New Color Swatch 41)
%%+ 0 1 1 0.71 (New Color Swatch 5)
%%+ 0 0 0 0.35 (New Color Swatch 6)
%%+ 0 0 0 0.7 (New Color Swatch 7)
%%+ 0 0 0.6 0 (New Color Swatch 8)
%%+ 0 0 0 0.3 (New Color Swatch 9)
%%+ 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 315.5 313.79 315.5 313.79
%AI3_TileBox: 26.0449 -97.8555 603.2451 730.5049
%AI3_DocumentPreview: Header
%AI5_ArtSize: 629.29 629.29
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -361.3755 894.6704 0.6667 1227 871 18 0 0 44 114 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 22689 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0BFFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFFD11FFAFA9AF85
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF85AF85AFA9FD0CFFAFAFA9AFA9FD63
%FFAFFFFFFFAFFFFFFFAFAFA9AFA9FD0AFFA9AF84AFAFFFA9FFA8A884AFA8
%A9A8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FFA8A9A8FFA8A9A8AFA8A9A8
%AFA8A9A8AFA8A884A9A8FFA9FFA9AF84FD08FFAFAFA9FFFFFFA8A8A8A9A9
%FD5BFFAFFFFFFFAFFFFFFFA8FFA8A8A8FFFFFFAFAFA9FD06FFA9AF85FFAF
%FFA8A8A8FFFFFFAFFD53FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAF
%A97DA8AFFFA9AF85FD05FFAF85FFFFFF84A8FD6AFFAFFFFFFFA8A8FFFFA9
%AFAFFD04FF85AFA9FF7DA8A9FFAFFFA9FFFFFFA9FFFFFFAFFD27FFA9AFFD
%22FFAFFFFFFFA9FFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF84A8A9FF
%A8AFA9FFFFAFAFAFFFA8A8FD36FF85FD39FFAFFFA8A8AFFFAFAFFFA9AFA9
%FFA8A8FFFFAFFFFFFFAFFD2FFF858B85FD29FFAFFFFFFFAFFFFFFFAFFFAF
%FFA9FFAFFFA9FF7DAFA9AF85FFFF85FFFFA8A8FD36FFAF85AFAFFD35FFAF
%FFFFFFAFFFA8FFAFAFAFA9AFA9FF7DFFA9FFAFFFA9FFFFFFAFFD2CFFAF85
%AF84AFFD2AFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9A8A8FF84AFAFA9
%FFA8A9FD36FFAFAF85AF85FD23FFAFFFAFFD15FFA8FD04AF85AFAFA8A8FF
%AFFD33FFA9AF85AF85AFA9FD20FFAF85AF85AF85AFAFFFAFFFFFFFAFFFFF
%FFAFFFAFFFA9FFAFFFA9FFA8FFA9AFAFAFFFA8FD13FFAFFFAFFD20FFAFA9
%AFA9AFA9AFAFFD1DFFAFAFA9AFA9AFA9AF85AFAFFD0DFFAFFFFFFFA8A8FF
%AFA984AFAFA8A8FFFFFFA9FFFFFFAFFD06FFAF84AF858584AF85AF84FD1D
%FFA9AF84AFA9AF84AFFD1CFFAFAF84AFA9AFA8AFA9AF8485A9FFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA8FFA9AFAFAFFFA8FD0DFFAFAF85AFA9AFAF
%FFAFFFA9AFA9AFAFFD19FFAFAFA9AFAFAFA9AFAFFD1CFFAFA9FFAFAFAFFF
%AFAFA9AFA9AFA9FD0FFFAFFFFFAFA985AFFFAFA8FD0BFFA9AF85AFA9AFAF
%FD05FFA9FFA9AFA9FD17FFA9AFA9AFA9AFA9AFA9AFA9FD1AFFAFA9AFA9AF
%A9AFA9AFA9AFA9AF8585A9FFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA8FFA9AF
%AFA9FFA8FD0BFFAFAF85FFFFAFA9FD09FFAFAFA9FD16FFAFA9AFAFAFA9AF
%AFAFA9AFAFFD18FFAFA9FFAFAFA9AFAFAFA9AFAFAFA9AFA98BA9FD0BFFAF
%FFFD04AFA985AFA9FFA8FFA9FFFFFFAFFFFFFFA8AFA9FFA9FFA9AFA8AFA9
%AFA8FD05FFA9AFA8FD15FFA9AFA8AFA9AFA8AFA9AFA8AFFD18FF85FFA9AF
%A9AFA8AFA9AF84AFA9AFA8AF8585A8FFAFFFA9FFAFFFA9FFAFFFA9FFA8FF
%84AFAFA9FFA8FD09FFAFFFAFFD05FFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAF
%FD13FFAFAFA9FFAFAFAFFFAFAFAFFFAFFD17FFA9FFFFFFAFAFA9AFAFAFA9
%AFAFAFA9FFAFAF85AFFD0EFFAFAFAF85AFAFFFAFFD08FFAF85FD05FFA9AF
%A9FFA9AFA9FFA9AFA9FFFFFFA9AFA9FD11FFA9AFA9AFA9AFA9AFA9AFA9AF
%AFAFA9FD15FFA9AFFFFFFFAFA9AFA9AFA9AF85AF85AFA9FFA9AF85AFFFFF
%AFFFFFFFAFFFAFFFA9FFA8FFA9AFAFAFFFA8FD08FFAFAFFFAFAFFFFFA9FF
%AFFFA9FFAFFFAFFFAFFFA9FFFFFFAFFD12FFAFA9AFAFAFA9AFAFAFA9AFAF
%FFAFAFAFFD13FFAFAFFD04FFA9AFAFAFA9AFA9AFA9AFAFAFA9FFFFFF85FD
%0BFFA9FFFFAFA984AFAFA9A8FFFFFFAFFFFFFFA8FFFFFFA8FFA9AFA8AFA9
%AFA8AFA9AFA8FFA9AFA8FFFFAF84AFFD0FFFAFA9AFA8AFA9AFA8AFA9AFA8
%AFA9FFA8AFAFFD11FFA9AFA9AFAFFFA9AFA8AFA9AF84AFA9AFA8AFA9AFA8
%FFFFAF84FFFFFFA9FFAFFFA9FFAFFFA8FFA9AFAFAFFFA8FD07FFAFAFAFFF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9FD0FFFAFFFAFFF
%AFAFAFFFAFAFAFFFAFAFFFFFAFFD12FFAFAFFFA9FFAFAFA9AFAFAFA9FD04
%AFFFAFFFAFAFAFFFA9AFAFFD09FFAFFFFFAFA985AFFFAFA8FD06FFAFA9AF
%A9FFFFFFA9AFA9FFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA9AFAFFD0DFFA9FF
%AFAFA9AFA9AFA9AFA9AFA9AFA9FFFFFFA9FD11FF85FFFFFFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AF84AFFFFFAFFFFFFFAFFFAFFFA8FFA9AF
%AFA9FFA8FD07FFAFFF85AFAFFFA9FFAFFFA9FFAFFFA9FFAFAFA9FFAFAFA9
%FFA9AF85FD0DFFAFFFFFFFAFAFA9AFAFAFA9AFAFAFA9AFAFFFFFAFAFFD0F
%FFAFAFAFFFFFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AF85AFAF8B61FD0B
%FFAFAFA985AFA9FFA8FFAFFFFFFFA9FFA9AFA8AFA9AFA8AFA9AFA8AFA9AF
%A8AFA9AFA8AFA9AFA8AF8585A8FD0BFFA9AFAFFFA9AFA9AFA8AFA9AFA8AF
%A9AFA8AFAFFFA8AFA9FD0DFFA8AFA9AFA8AFA9AF84AFA9AF84AFA9AFA8AF
%A9AF84AFA9AF84AF858584FFAFFFA9FFAFFFA9FFA8FF84AFAFA9FFA8FD08
%FFAFA9FFAFAFAFFFAFFFAFFFAFFFAFFFAFAFAFFFAFAFA9FFA9AF85FD0DFF
%AFFFFFFFAFAFAFFFAFAFAFFFAFAFAFFFAFFFFFFFAFAFFD0DFFAFAFAFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF85AFAFAF61AFFD0BFFAFAF85
%AFAFFFAFFD05FFAFFFA9AFA9AFA9AFA9AFA9AFA9FFA9AFA9AFA9AFA9AFA9
%AFA9AF8585A9FD0BFFA9FFAFFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FFFF
%FFA9FD0DFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF85AFA9AF85AF85AF85
%AF858584FFFFFFAFFFFFFFAFFFA8FFA9AFAFAFFFA8FD07FFAFFFA9AFA9AF
%AFAFA9FFAFFFA9AFAFAFA9AFAFAFA9AFA9AF85AF85FD0BFFAFAFAFFFFFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFFFFFAFAFAFFD0CFFAF85FFAFAFA9AFAF
%AFA9AFA9AFA9AFA9AFA9AFA9AF85AF85AF85AF858BFD08FFAFFFFFAFA984
%AFFFAFA8FD07FFA9AF85AF84AFA9AFA8AFA9AFA8AFA9AF84AFA9AF84AF85
%AF8485FD0AFFA9AFA9AFA9FFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8FFFFFF
%A8AFAFFD09FFAFFFA9AFFFFFA9AF84AF85AF84AF85AF84AF85AF84AF85AF
%84AF85AF848585FFA9FFAFFFA9FFAFFFA8FFA9AFAFAFFFA8FD09FFAFAFA9
%AFAFAFA9FFAFAFA9AFAFAFA9AFAFAFA9AFA9AF858B85FD0BFFA9FFAFFFAF
%AFA9FFAFAFAFFFAFAFAFFFAFAFAFFFAFFFFFFFA9FD0DFFA9FFFFFFA9AFA9
%AF85AFA9AFA9AFA9AF85AFA9AF85AF85AFA9AF85AFFD08FFAFFFFFAFA985
%AFFFFFA8FD07FFA9FFA9AF85AFA9AFA9AFA9AFA9AFA9AF85AF85AF85AF85
%8560AFFD0AFF85AFAFFF85AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FFFFFF
%A9AFA9FD0BFFAFAFA9FFFFFFA9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF608585FFAFFFFFFFAFFFFFFFA8FFA9AFAFA9FFA8FD09FFAFFFAFAFA9
%AFAFAFA9AFAFAFA9AFA9AF85AF85AF85AF858BFD0BFFAFA9FFFFFFA9AFAF
%AFA9AFAFAFA9AFAFAFA9FFAFAFA9FFFFFF85AFFD0DFFAFA9FFFFFFAFAF85
%AF85AF85AF85AF85AF85AF85AF85AF858B61FD0BFFAFAFA985AFA9FFA8FD
%08FFAFA9AFA9AF84AF85AF84AF85AF84AF85AF84AF85AF6085A9FD0BFFA9
%AFA9FFAFAF84AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA9FFA9AF84FD0BFFA9
%FFAFAFA8FFAFFFFFFFA9AF848B858584AF8585848B85AF84856085FD04FF
%A9FFAFFFA9FFA8FF84AFAFA9FFA8FD0CFFAFA9AFAFAFA9AFA9AF85AF85AF
%85AFAFAF858BA9FD0BFFAFFFA9FFFFFFA9AFAFAFA9AFAFAFA9FFAFAFAFFF
%AFAFA9FFFFFF85AFFD0EFFAFFFAFFFAFFD05FFAFAFA9AF85AF85AFAFAF85
%8B858BFD0DFFAFAF85AFFD0CFFA9AFAFAF85AFA9AF85AF85AF85AF85AFA9
%AF616185FD0CFFAFA9AF85AFA9AF85AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%AFFFAF8585FD0FFFA9FFAFFFA9AFA9AFA9FFA9AFA9AFA9AFA9AF618560AF
%FD06FFAFFFFFFFAFFFA8FFA9AFAFAFFFA8FD0BFFAFAFAFFFA9AFAFAFA9AF
%AFAFA9FFAFAF618B85FD0DFFA9AFAFAF85AFA9AFA9AFA9AFA9AFAFAFA9FF
%AFAFA9AFA9FFFFFF85AFFD16FFAFFFA9FFAFAFA9AF858B618B85AFFD0CFF
%AFFFFFAFA984AFFFFFA8FD0BFFA9AF85AFA9FFA9AFA8AFA9AF8485608584
%FD0FFF84FF85AF84AF85AF84AF85AF84AFA9AFA8AFA9AF84AFFFFFA885A9
%FD15FFA9FFFFFFA9FF8585848B85AFA8FFFFFFAFFFFFFFA9FFFFFFA9FFAF
%FFA8FFA9AFAFAFFFA8FD0FFFA9AFAFAFA9AF858B618B85AFFD11FFAFFFAF
%85AFA9AFA9AFA9AFA9FFAFAFA9FD04AFFFAFFFFFAF85FD31FFAFFFFFAFA9
%85AFFFFFA8FD0FFFA9AF85AF85AF85AFA9FD13FF85AFAFAF85AF85AF85AF
%85AFA9AFA9AF85AF85AFA9FFFFFF85AFFD2AFFAFFFFFFFAFFFFFFFA8FFA9
%AFAFA9FFA8FD2DFF85FFAFAF85AF85AF85AFAFAFA9AFA9AF85AFA9AFA9FF
%FF8BA9FD33FFAFAFA985AFAFFFA8FD2CFF8584FF858584AF85AF84AFA9AF
%84AF85AF84AF85AFA8AF85FD29FFAFFFFFFFA9FFAFFFA9FFA8FF84AFAFA9
%FFA8FD2EFF8B85FFA9AFAFAFA9AFAFAFA9AFA9AFA9AF85AFA9AF85FD36FF
%AFAF85AFFD30FFA98585FFA9AF85AF85AF85AF85AF858585AF858560AFFD
%2EFFAFFFFFFFAFFFA8FFA9AFAFAFFFA8FD2FFFAF8B85FFAFFFA9AF85AF85
%AF85AFA9AF858B85AFFD34FFAFFFFFAFA984AFFFAFA8FD2FFFA9856085A8
%FFA9AFA8AFA9AF848B606184AFFD2EFFA9FFFFFFA9FFAFFFA8FFA9AFAFAF
%FFA8FD32FFAF618B85AF85AFA9AF858B618585FD37FFAFFFFFAFA985AFFF
%FFA8FD33FFA98B61616085618560AFA9FD35FFAFFFFFFFA8FFA9AFAFA9FF
%A8FD37FFAFAFA9FD3FFFAFAFA985AFAFFFA8FD13FFA9AFA8AFA9AFA8FD47
%FFAFFD0BFFAFFFFFFFA9FFAFFFA9FFA8FFA8AFAFA9FFA8FD11FFAFFFAFAF
%AFFFAFFFA9AFA9AFAFFD3FFFAFFFAFFFAFFFAFFFAFFFAFFFAFFD10FFAFAF
%85AFFD12FFA9AFA9FD07FFAFFFA9AF85AFFD38FFAFAF85AF85AFA9AFA9AF
%AFFD05FFAFAFA9AFA9FD05FFAFFFFFFFAFFFA8FFA9AFAFAFFFA8FD0EFFAF
%A9AFAFFFFFFFAFFFAFFD06FFAF85AFAFFD35FF85AF85AFAFFFAFFFAFFFAF
%FFAFFD09FFAFAFAFFD07FFAFFFFFAFA984AFFFFFA8FD0BFFA8AFA9FFA8AF
%A9AF84AF85AF84AF85AFA8FFFFFFA8AF85AFFD30FFA8AF85AFA8FFAFFFA9
%FFA9AFA8AFA9AFA8AFA9AFA8AFA9FFA9FFAFAF84FFFFFFA9FFAFFFA8FFA9
%AFAFAFFFA8FD0BFFAFFD05FFAFFFA9AFAFAFA9AFA9AF85AF85AFA9FFAFAF
%A9FD2FFFA9AFAFAFFD08FFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFFFFFFFA9
%FD05FFAFFFFFAFA985AFFFFFA8FD09FF85AFFD04FFA9AFA9AFA9AFA9AF85
%AF85AF85AF85AF85AFAFFFA9AFAFFD2BFF85AFAFFFA9AFA9FFFFFFA9FFA9
%AFA9FFA9AFA9FFA9AFA9AFA9AF85AF85AFA9AF85FFAFFFFFFFA8FFA9AFAF
%A9FFA8FD08FFAFA9FFAFFFFFFFAFAFA9AFAFAFA9AFA9AFA9AFAFAFA9AFAF
%AFA9FFFFFF858BAFFD29FF85AFA9FD05FFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9AFAFAFA9AF858BA9AFAFFD05FFAFAFA985AFAFFFA8FD05FFA9AF
%A9FFAFFFA9AFA8AFA9AF84AFA9AF84AFA9AFA8AFA9AFA8AFA9AF84AFA9AF
%8485A9FD27FFA98584AFA9AFA8FFAFAFA8AFA9AFA8AFA9AFA8AFA9AFA8AF
%A9AF84AF85AF84AF858584AFFFFFA9FFA8FFA8AFAFA9FFA8FD05FFAFAFA9
%FFAFFFFFFFAFFFAFAFA9AFAFAFA9FD04AFFFAFAFA9AFAFAF85AFA9AF85AF
%858BAFFD26FFAFA98B85AFA9AFAFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAF
%AFA9AFAFAF85AF85AF858BAFFD07FFAFA9AFFD06FFAFAF85AFA9AFA9AFA9
%AFA9FFA9AFA9AFA9AFA9AFA9AFA9AFA9AF85AF85AFA9AFA9AF84AF6185FD
%16FF85FD0FFFA9AF85AF85AFA9AFA9AFA9AFA9AFA9FFA9AFA9FFA9AFA9AF
%A9AF85AF85AF858B858584FFFFFFAFFFA8FFA9AFAFAFFFA8FD05FFA9AFA9
%AFAFAFA9FFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AF85AFA9AF85AFA9
%8B858B61FD15FFA98BFD10FF85FF85AF85AFA9AFAFAFA9FFAFFFA9FFAFFF
%A9FFAFAFA9AFAFAFA9AF85AF85AF85AFFD04FFAFFFFFAFA984AFFFAFA8FF
%FFFFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF84AFA9AF84AFA9AF84AF85AF
%84AF858584AF8585606185FD14FF8584FD0FFFA885A9FF84AFA9AF84AFA9
%AFA8AFA9AFA8AFA9AFA8AFA9AF84AF85AF84AF858584613CFFA9FFAFFFA8
%FFA9AFAFAFFFA8FD07FFAFFFAFFFA9AFA9AFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFAFAF85AF85AF85AF858B858B61AFFD13FFAF85AFFD0FFFAF8561A9FF
%AFAFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFAFA9AFAFAFA9AF85AF858B3D3D
%A9FFFFFFAFFFFFAFA985AFFFFFA8FFFFFFA9AFAFFFA9FFA9AFA9AF85AF85
%AF85AF85AFA9AF85AFA9AF85AF85AF85AF8585848B85856061AFFD13FF85
%AF85FD0FFFA93D1A3D84FFAFFFA9AFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AF858B616136613DAFFFFFAFFFA8FFA9AFAFA9FFA8FD05FFAFAFA9AF
%AFFFFFFFAFFFAFAFA9AFAFAFA9AFA9AF85AFA9AF85AF85AF85AF858B858B
%6161A9FD13FFAFAFA9AFFD10FF3D3D3D8585AFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFA9FFA9AF85AF858561613D3D8585AFFD05FFAFAFA985AFA9FFA8FF
%AFFFFFFFAFAF858584AF85AFA8AFA9AFA9FFA9AFA8AFA9AF84AFA9AF84AF
%85A9848561616085A9FD14FFAFA8AFA9FD10FFAF143D3C85606161AFA8AF
%A9AFA9FFA9AF84AF85A984AF858560613C3D3661858560FFAFFFA9FFA8FF
%A8AFAFA9FFA8FD0BFFAFAFA9AF85AF85AF85AF85AFA9AFA9AFA9AF85AF85
%8B618B618B85FD17FFAFFFAFAFFD11FFAF61613D6185AF85AFA9AF85AF85
%AF85AF85AF85AF858B6167616161AFAFAF61FD09FFAF85AFAFFFAFFD11FF
%A9FFA9AF85AF8585848B8585848B85AF85FD19FFAFFFA9AFA9FD13FF8561
%366185AF85AF8585608B8585848B858560856185608B85AF858585FD05FF
%AFFFA8FFA9AFAFAFFFA8FD3EFFAFA9FD15FFAF8B3D3D6185858B858B858B
%85AF85AF85AF85AFAFAFA9AF858BA9FD07FFAFFFFFAFA984AFAFA9A8FFFF
%FFAFFD37FFA8FFA9AFA8FD17FF84613C3D36616085608585AF84AF858584
%85618584AFAFFFA9FFAFFFA9FFAFFFA8FFA9AFAFAFFFA8FD33FFA9FD07FF
%AFFFAFAFA9FD1BFFA9AF858B618B6185618B618B85AFA9AFFD0CFFAFFFFF
%AFA985AFFFAFA8FD32FFAF84FD06FFAFA9FFA9AFA9FD1FFFAFFFFFFFAFFD
%07FFAFFFFFFFAFFFFFFFAFFFAFFFA8FFA9AFAFA9FFA8FD33FFAF85A9FD05
%FFAFFFA9FD04AFFD33FFAFFFAFFFAFAFA985AFA9FFA8FFA9FFFFFFAFFD2D
%FF8585A9FFFFFFA9AFAFAFA8AFA9FFA9FD23FFAFFFFFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFA8FFA8AFAFA9FFA8FD34FFAF85AFFD04FFA9FFAFFFAFAF
%AFFD35FFAFFFAFAFAF85AFAFFFAFFFAFFD31FF858585FFFFFFA9AFFFAFA9
%AFA9AFA9FD27FFAFFFFFFFAFFFFFFFAFFFAFFFA9FFA8FFA9AFAFAFFFA8FD
%34FFAF85AFA9FFFFFF85FFAFAFA9AFAFFD31FFAFFFFFFFA9FFFFAFA984AF
%AFA9A8FFFFFFA9FFFFFFAFFD0DFFA9AFA8FFAFFD19FF84AF85AFA9FFA985
%A9AFA9AFA8AFA9FD21FFAFFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A8FFA9AFAFAFFFA8FD13FFAFAF858B85AFA9AF85AFFD17FFAFA9AF85AFFF
%FF85FFAFAFA9AFAFFD35FFAFFFFFAFA985AFFFAFA8FFFFFFAFFD0DFF8585
%84AF85FFA9AF85AF85FD17FF85AF85AF85FFFF85A9AFA9AF85AFAFFD25FF
%AFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA8FFA9AFAFA9FFA8FD11FF858B85
%AFAFFFAFAFAFFD1AFFAFA9AFA9AFAFFF85AFA9AFA9AFA9FD2FFFAFFFFFFF
%AFFFFD04AFA985AFA9AFA8FFA9FFFFFFA9FFFFFFAFFD05FF85AF84AFAFFF
%A8FD1DFF85AF84AFA9AFFFAF61AF84AFA9AFA9FD1FFFA9FFFFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFA8FF84AFAFA9FFA8FD0FFFA9AFA9FFFF
%FFAFFD1DFFAFAFA9AFAFFFAFFFFF8B85AFAFFFAFFD33FFAFFFAFFFAFAFAF
%85AFAFFFA9FFAFFFFFFFAFFD07FFA9AFA9AFA9FD21FFA9AFA9AFA9FFA9FF
%A98585FFA9AFFD20FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFA9FFAFFFA9
%FFA8FFA9AFAFAFFFA8FD0EFFAFA9FFAFAFAFFD1FFFFD04AFA9FD05FFAF8B
%85AFAFFD15FFAFFFFFFFAFFD13FFAFFFFFFFAFFFFFFFA9FFAFAFA984AFAF
%A9A8FFAFFFA9FFAFFFA9FD05FF85AF84AFA9AFA9FD1EFFAFA8AFA9AFA8FF
%A9FFFFFFAFAFA9FD0FFFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8FFA9FF
%A9FFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AFA8FFA9AFAFAFFFA8FD0D
%FFFD05AFFFAFFD1FFFAFFFAFFFAFFD15FFAFAFA9FFAFAFAFFFAFFD09FFAF
%FFAFFFAFFD0FFFAFFFFFFFAFFFAFAFA985AFAFA9A8FFFFFFAFFFFFFFAFFD
%04FFAFA9AFA9AFA9FD21FFA9AFA9AFA9FD11FFAFAF85AFA9FFAFFFAFAFA9
%FFAFFFA9FFAFFFA9FD07FFA9AF85AFAFFFAFFFAFFFAFFFA9FFAFFFA9FFAF
%FFA8FFA9AFAFA9FFA8FD0DFF85AFAFAFA9FD22FFAFA9AFAFFFAFFFAFFD0D
%FFA9AF85AFAFFFFFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFFFFA9
%AFA9AFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFD04AFA985AFA9AFA8FFA9FFAF
%FFA9FFAFFFA9FFAFA9A8AF85AFA8FD1FFFA9FFA9AFA8FFA9AFFFFFAFFD0B
%FF858584AF85AFA8FFAFAFA8AFA9AFA8AFA9AFA8AFA9AFA8AFA9AFA8FFAF
%FF84AF8585A8FFAFFFA9FFAFFFA9FFA9FFA9FFA8FF84AFAFA9FFA8FD0DFF
%85FFAFAFA9FD22FFAFAFFFAFAFAFFFAFFD0BFF858B85FD05FFAFAFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFFD04AFA9FF858B858BFD06FFAFFFFFFFAF
%FFFD05AF85AFA9AFA9FFAFFFAFFFAFFFFFFFAFFFFFAFA9AF85AFA9FD1FFF
%AFFFA9AFA9AFA9AFFFFFA9FD09FFA985858584AFA9FFA9AFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9AFA9AFA9AF85AF85AF858560AFFFFFA9FFAFFFA9FF
%AFFFA9FFA8FFA9AFAFAFFFA8FFFFFFAFFD09FFA9AFA9AFA9FD21FFFD04AF
%A9FFAFFFAFFD0AFFAFA98B858B85AFA9AFA9AFAFFFA9FFAFFFA9FFAFFFA9
%FFAFAFA9AFA9AFA9AF85AF85AF858585FFFFFFAFFFFFFFAFFFAFFFA9AFAF
%AFA984AFAFA9A8FFAFFFA9FFAFFFA9FFAFFFFFAF85AF84AFA9FFA9FFFFFF
%AFFD19FFAFAFA8AFA9AFA8AFAFFFA8FD09FFA9AF848B858584AF85AFA8AF
%A9AFA8AFA9AFA8AFA9AFA8AFA9AF84AFA9AF84AF8585848B6085A9FFAFFF
%A9FFA9FFA9FFA9AFA8FFA9AFAFAFFFA8FD0EFFAFA9AF85AFFD1EFFAFFFAF
%FFAFAFAFFFAFFFFFAFFD0AFFAFFF85AF85AFA9AFA9AFAFFFAFFFAFFFAFFF
%AFFFFD04AFA9FFAFFFAFFFAFAFA9AFA9AFA9FD07FFAFFFAFFFAFFFAFAFA9
%85AFAFA9A8FFAFFFA9FFAFFFAFFFFFFFAFFF8585858BA9FFAFFD1BFFAFFF
%AFAFA9AFA9AFA9FFFFFFA9FD0AFFAFA9AF85AF85AF85AFA9AFA9AFA9FFA9
%AFA9FFA9AF85AFA9AFA9FD07FFAFFFAFAFA9FFAFFFA9FFAFFFA9FFAFAFA8
%FFA9AFAFA9FFA8FFAFFFFFFFAFFD09FF858B85AFFD1EFFAFFFAFAFA9FD04
%AFFFFFAFAFFD0AFFAFAFFFA9AFA9AFAFAFA9FFAFFFA9FFAFAFA9AFAFFFFF
%FFAFFFAFFFAFFFAFFD07FFA9AFA9FFAFFFAFFFAFFFFD04AFA985AFA9AFA8
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FF858584FFFFFFA9FFFFFFA9FFFFFFAF
%FFFFFFAFFD0DFFA9FFA9AFA9AFA8AFA9AFA9FFA9FD09FFAFFFFFFFA8FFA9
%AF84AFA9AFA8AFA9AF84AF85AFA8FFFFFFA8AFA9AFA8AFA9AFA8AFA9AFA8
%FFFFFFA8AF85FFA9FFA9FFA9FFA8AF84AFAFA9FFA8FFAFFD0FFFAFFD1FFF
%AFFFAFAFAFFFAFAFAFFFFFAFAFFD0FFFAFFFAFFFAFFFAFFFA98B85AFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA98B85FFAFFFAFFFFD05
%AF85AFA9AFA9FFA9FFAFFFA9FFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFD11FFAFFFA9AFA9AFA9AFA9AFAFFF85AFFD10FFA9FFAFFF
%A9AFAFAF84AF85AFA9FFA9AFA9FFA9AFA9FFA9AFA9AFA9AFA9AFA9AF858B
%8561A9FFAFFFA9FFA8AFA9AFAFAFFFA8FFFFFFAFFFFFFFAFFFFFFFAFFD25
%FFAFAFA9AFAFAFA9FFAFFFFFAFAFFD11FFAFFFAFFFAFFFAFAF85AF85AFA9
%AFAFAFA9FFAFFFA9FFAFAFA9FFAFAFA9AFA9AF858B61AFAFFFAFFFA9AFAF
%AFA984AFA9A9A8FFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFAFFFFFFFA8AFA9AFA8AF
%A9AFA8AFAFFF84FFFFFFAFFFFFFFA9FFFFFFA9FFFFFFAFFFAFAFA8AFA9AF
%A8FFA9AF848B85AF84AFA9AFA8AFA9AFA8AFA9AFA8AFA9AF84AF85856061
%A9FFA8FFA9AFA8FFA9AFAFAFFFA8FFFFFFAFFFFFFFAFFD29FFAFAFA9AFAF
%AFA9AFAFFFAFAFFD10FFAFFFAFFFAFAFA9AFAFAFA9AF85AFA9FD04AFFFAF
%FFAFFFAFAFA9AFAFAFA9AF85AF858B85FFAFFFAFFFA9AFAFAFA985AFAFA9
%A8FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFD07FFA9AFA9AF85AFA9AFA9AFFFAF84FFFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFA9FFAFFFA9AFA9AFA9AF85AF858BA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AF85AF856160FFAFFFA9FFAFAFA8FFA9AF
%AFA9FFA8FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD1FFFA9AFA9AFA9
%AFA9AFA9FFA9AFFD0EFFA9FFA9FFAFAFA9AFAFAFA9AF85AF85FFAFAFA9FF
%AFAFA9FFAFAFA9AFAFAFA9AFA98B618B85FFAFFFAFFFAFFFFD04AFA985AF
%A9AFA8FFA9FFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFFFFFA9FFFFFFA9FFA9AFA8AF85AF84AF85AF
%A88B85FFA9FFFFFFA9FFAFFFA9FFAFFFA9AFA9FFA9AFA9AF84AFA9AF84AF
%858584FFA9AFA8FFA9AFA8AFA9AFA8AF858560856185A8FFA9FFA8FFA9AF
%A8AFA8AF84AFAFA9FFA8FFAFFFFFFFAFFFFFFFAFFD27FFAFFFAFAFA9AFA9
%AFA9AF85FD0FFFAFAFA9AFAFAFA9AFA9AF858B858B61AFFFFFAFFFAFFFAF
%FFAFAF85AF858B85AFAFFFFFFFAFFFAFFFAFFFAFFFFD05AFA9AFA9AFA9FF
%A9FFAFFFA9FFAFFFAFFFAFFFA9AFA9AFA9FFAFFFA9FFAFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFA9FFA9AFA9AF85AF85AF858BFFFF
%AFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFA9FFA9AF85AF858585AFA9FFAFFF
%AFFFA9FFAFFFA9FFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AFA9AFA8AF
%A9AFAFAFFFA8FFAFFFAFFFAFFFAFFFFFFFA9FFAFFFAFFFFFFFAFFFFFFFA9
%FFAFAF85AFFD14FFAFFFA9FFAFAFA9FFA98BA9FD1FFFAFFFFFFFAFFFFFFF
%AFFFFFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9AFAFAFA984AFA9A9A8
%FFA9FFA9FFA9FFA9AF8585A8FFFFFFA8AFA9AFA8AFA9AF84AF85856085A9
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9AFA9AFA8AFA9AF848B85FFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFA9FFA9FFA9FFA9FFA9FFA8FFA9AFA8FFA9AFA8FFA9AFA8
%AFA9AFAFAFFFA8FFAFFFAFFFAFFFAFFF85AFAFFFAFFFAFFFAFFFAFFFAFAF
%A9AFA9AF858B6185AFFD11FFAFAFFFFFAFAFA9AFA9FD21FFAFFFFFFFAFFF
%FFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9AFAFAFA985AFA9
%A8A8FFAFFFA9FFAFFF858BA9FFA9FFA9AFA9FFA9AFA9AFA9AF85AF858584
%8B61AFFFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFA9AFA9FFA9AF85AFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AFA9FFA9
%AF7EAFA9AFAFA9FFA8AFAFFFAFFFAFFFFFAF61AFAFFFAFFFAFFFA9FFAFFF
%A9AFAFAF85AF85AF8585AFFFAFFFFFFFAFFD0DFFAFAF85AF85FD0DFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9A8A9AFA985AFA8A984AFA8
%FFA9FFA9FFA96160AFA9AFA8AFA9AFA8AFA9AF84AF85AFA8AF856184FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFA9FFA9FFA9AFA8FFA9AFA8FFA9AFA8AFA9AFA8A884AF84
%AFAFA9FFAFA8AFFFAFFFAFFFAFFFAFAF618B85FFAFFFAFFFAFFFAFFFAFFF
%A9AF858BA9FD33FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF84FD04AFA9AFA9FF84A9A9FFAFFF
%A9FFAFFFA9AF858560856185848B85856085618584AFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFA9AFA9FFA9AFA9FFA9AF84A8A9AF85AFFFA9
%AFAFFF7EFFAFFFAFFFAFFFAFFFAFFFFFFFA9AFA9AFA9AFA9AFA9FD07FFAF
%FFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA9FFAFA8A8FFFD
%05AF85AFA8A884AFA8FFA9AFA8FFA9FFA9FFA9FFA9FFAFFFA9FFAFFFA9FF
%A9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9AFA8FFA9AFA8FFA9AFA8FFA9AFA8AFA9AF
%A8A884AFA8AFA9FFFFAFAFA9FFAFA8A8FFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFD07FFAF
%FD0BFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFAF84FFAF
%AFA9FD04FFA9AFA9FFA9A884FFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AFA9FFA9AFA9FFA9AFA9
%AFA9A87DAFA9AF85AFFD05FFA9AFA9FFAFA87DAFAFFFAFFFAFFFAFFFAFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFF
%FFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFF
%AFFFA9FFAFFFA8A884AFA9AFA9AFAFFD06FF85AFA8FFA9A97DA884AFA8AF
%A8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AFA8FF
%A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AFA8AFA8AFA8AFA8AFA8AF
%A8AFA8AFA8AFA8A9A8A87DA884AFA9AF84AFA9FD08FFA9AFAFFFAFFFAFAF
%A8A9A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8AF
%A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8AF
%A8AFA8AFA8AFA8AFA8AF84A9A8AFAFFFAFAFA9AFAFFD0AFFA9AF85AFA9FF
%A9AFA9FFA9AFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9AFA9AFA9AFA9AFA9AF85AFA9FD0CFFAFAFA9AFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AF
%AFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAFA9AFAFAF
%A9AFAFAFA9AFAFAFA9AFAFAFA9AFA9AFA9FD10FFAFFFA9AF84AF85AF84AF
%85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF
%84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF
%85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF84AF85AF
%84AF85AF84AF85AF84AFA9FD08FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS4) (FILTERiT4 Live Trail ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS4) (FILTERiT4 Live Tiling ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS4) (FILTERiT4 Live Shadow ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS4) (FILTERiT4 Live Reflections ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS4) (FILTERiT4 Live Neon ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS4) (FILTERiT4 Live Generation ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS4) (FILTERiT4 Live Galaxy ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS4) (FILTERiT4 Live Frame ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS4) (FILTERiT4 Live Explosion ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS4) (FILTERiT4 Live Emboss ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS4) (FILTERiT4 Live Cutout ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS4) (FILTERiT4 Live Circle ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS4) (FILTERiT4 Live Border ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
15 Bn
%AI5_BeginGradient: (GradientFill 1)
(GradientFill 1) 1 4 Bd
[
0.12
0
0
0
1 %_Br
<
1F202122232425262728292A2B2C2D2E2F303132333536
>
0
0
0
1 %_Br
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F60616263
>
0
0
0
1 %_Br
[
0.12 0 0 0 1 50 0 %_BS
%_0.12 0 0 0 1 50 0 Bs
0.12 0 0 0 1 50 35 %_BS
%_0.12 0 0 0 1 50 35 Bs
0.21 0 0 0 1 50 67 %_BS
%_0.21 0 0 0 1 50 67 Bs
0.39 0 0 0 1 50 100 %_BS
%_0.39 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 15)
(GradientFill 15) 0 2 Bd
[
<
7A7A797878777675757473727170706F6E6D6C6B6A6A69686766656463626161605F5E5D5C5B5A59
585756555554535251504F4E4D4C4B4A494847464544434241403F3E3D3D3C3B3A39383736353433
3231302F2E2D2C2B2A292827262524232221201F
>
0
0
0
1 %_Br
[
0.12 0 0 0 1 50 100 %_BS
%_0.12 0 0 0 1 50 100 Bs
0.48 0 0 0 1 53 0 %_BS
%_0.48 0 0 0 1 53 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 16)
(GradientFill 16) 1 4 Bd
[
0.12
0
0
0
1 %_Br
<
1F202122232425262728292A2B2C2D2E2F303132333536
>
0
0
0
1 %_Br
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7C7D7E7F80818283848586
8788898A
>
0
0
0
1 %_Br
[
0.12 0 0 0 1 50 0 %_BS
%_0.12 0 0 0 1 50 0 Bs
0.12 0 0 0 1 50 35 %_BS
%_0.12 0 0 0 1 50 35 Bs
0.21 0 0 0 1 50 67 %_BS
%_0.21 0 0 0 1 50 67 Bs
0.54 0 0 0 1 50 100 %_BS
%_0.54 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 17)
(GradientFill 17) 1 4 Bd
[
0.5
0
0
0
1 %_Br
<
808182838485868788898A8C8D8E8F
>
0
0
0
1 %_Br
<
8F909192939495969798999A9B9C9E9FA0A1
>
0
0
0
1 %_Br
[
0.5 0 0 0 1 50 0 %_BS
%_0.5 0 0 0 1 50 0 Bs
0.5 0 0 0 1 50 35 %_BS
%_0.5 0 0 0 1 50 35 Bs
0.56 0 0 0 1 50 67 %_BS
%_0.56 0 0 0 1 50 67 Bs
0.63 0 0 0 1 50 100 %_BS
%_0.63 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 18)
(GradientFill 18) 0 2 Bd
[
<
ADADACABAAAAA9A8A7A6A5A4A4A3A2A1A09F9E9D9C9B9A99989796959494939291908F8E8D8C8B8A
89888786858483828180
>
0
0
0
1 %_Br
[
0.5 0 0 0 1 50 100 %_BS
%_0.5 0 0 0 1 50 100 Bs
0.68 0 0 0 1 53 0 %_BS
%_0.68 0 0 0 1 53 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 19)
(GradientFill 19) 1 4 Bd
[
0.5
0
0
0
1 %_Br
<
808182838485868788898A8C8D8E8F
>
0
0
0
1 %_Br
<
8F909192939495969798999A9B9C9D9E9FA0A1A2A3A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5
>
0
0
0
1 %_Br
[
0.5 0 0 0 1 50 0 %_BS
%_0.5 0 0 0 1 50 0 Bs
0.5 0 0 0 1 50 35 %_BS
%_0.5 0 0 0 1 50 35 Bs
0.56 0 0 0 1 50 67 %_BS
%_0.56 0 0 0 1 50 67 Bs
0.71 0 0 0 1 50 100 %_BS
%_0.71 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 20)
(GradientFill 20) 1 5 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E30313233
>
0
0
0
1 %_Br
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
>
0
0
0
1 %_Br
<
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 23 %_BS
%_0.16 0 0 0 1 50 23 Bs
0.2 0 0 0 1 50 43 %_BS
%_0.2 0 0 0 1 50 43 Bs
0.32 0 0 0 1 50 88 %_BS
%_0.32 0 0 0 1 50 88 Bs
0.48 0 0 0 1 50 100 %_BS
%_0.48 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 21)
(GradientFill 21) 1 5 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E30313233
>
0
0
0
1 %_Br
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
>
0
0
0
1 %_Br
<
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394969798999A9B9C9D9E9FA0A1
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 23 %_BS
%_0.16 0 0 0 1 50 23 Bs
0.2 0 0 0 1 50 43 %_BS
%_0.2 0 0 0 1 50 43 Bs
0.32 0 0 0 1 50 88 %_BS
%_0.32 0 0 0 1 50 88 Bs
0.63 0 0 0 1 50 100 %_BS
%_0.63 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 22)
(GradientFill 22) 1 5 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E30313233
>
0
0
0
1 %_Br
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
>
0
0
0
1 %_Br
<
52535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576777879
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394969798999A9B9C9D9E9FA0A1
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 40 %_BS
%_0.16 0 0 0 1 50 40 Bs
0.2 0 0 0 1 50 53 %_BS
%_0.2 0 0 0 1 50 53 Bs
0.32 0 0 0 1 50 88 %_BS
%_0.32 0 0 0 1 50 88 Bs
0.63 0 0 0 1 50 100 %_BS
%_0.63 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 23)
(GradientFill 23) 1 4 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E2F303132333435363738393B3C3D3E3F40
>
0
0
0
1 %_Br
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768
69
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 35 %_BS
%_0.16 0 0 0 1 50 35 Bs
0.25 0 0 0 1 50 67 %_BS
%_0.25 0 0 0 1 50 67 Bs
0.41 0 0 0 1 50 100 %_BS
%_0.41 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 24)
(GradientFill 24) 1 4 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E2F303132333435363738393B3C3D3E3F40
>
0
0
0
1 %_Br
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667
68696A6B
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 36 %_BS
%_0.16 0 0 0 1 50 36 Bs
0.25 0 0 0 1 50 68 %_BS
%_0.25 0 0 0 1 50 68 Bs
0.42 0 0 0 1 50 100 %_BS
%_0.42 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 25)
(GradientFill 25) 1 4 Bd
[
0.12
0
0
0
1 %_Br
<
1F202122232425262728292A2B2C2D2E2F303132333536
>
0
0
0
1 %_Br
<
363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182
>
0
0
0
1 %_Br
[
0.12 0 0 0 1 50 0 %_BS
%_0.12 0 0 0 1 50 0 Bs
0.12 0 0 0 1 50 36 %_BS
%_0.12 0 0 0 1 50 36 Bs
0.21 0 0 0 1 50 68 %_BS
%_0.21 0 0 0 1 50 68 Bs
0.51 0 0 0 1 50 100 %_BS
%_0.51 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 26)
(GradientFill 26) 1 4 Bd
[
0.16
0
0
0
1 %_Br
<
292A2B2C2D2E2F303132333435363738393B3C3D3E3F40
>
0
0
0
1 %_Br
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667
68696A6B6C6D6E6F707172737475767778797B7C7D7E7F808182838485868788898A
>
0
0
0
1 %_Br
[
0.16 0 0 0 1 50 0 %_BS
%_0.16 0 0 0 1 50 0 Bs
0.16 0 0 0 1 50 35 %_BS
%_0.16 0 0 0 1 50 35 Bs
0.25 0 0 0 1 50 67 %_BS
%_0.25 0 0 0 1 50 67 Bs
0.54 0 0 0 1 50 100 %_BS
%_0.54 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 413)
(Unnamed gradient 413) 1 3 Bd
[
<
000102030405060708090A0B0C0D0E0F1011121314151617181A1B1C1D1E1F
>
0
0
0
1 %_Br
<
1F202122232425262728292A2B2C2D2E2F303132333536
>
0
0
0
1 %_Br
[
0 0 0 0 1 50 47.8788 %_BS
%_0 0 0 0 1 50 47.8788 Bs
0.12 0 0 0 1 50 84.8485 %_BS
%_0.12 0 0 0 1 50 84.8485 Bs
0.21 0 0 0 1 50 100 %_BS
%_0.21 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 425)
(Unnamed gradient 425) 1 4 Bd
[
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B
5C5D5E5F6061
>
0
0
0
1 %_Br
<
6162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E80818283848586878889
8A8B8C8D8E8F
>
0
0
0
1 %_Br
<
8F909192939495969798999A9B9C9E9FA0A1
>
0
0
0
1 %_Br
[
0.2 0 0 0 1 50 0 %_BS
%_0.2 0 0 0 1 50 0 Bs
0.38 0 0 0 1 50 35 %_BS
%_0.38 0 0 0 1 50 35 Bs
0.56 0 0 0 1 50 67 %_BS
%_0.56 0 0 0 1 50 67 Bs
0.63 0 0 0 1 50 100 %_BS
%_0.63 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4003.5 4632.7251 m
-3789.8999 4632.7251 L
-3789.8999 4624.9243 L
-4003.5 4624.9243 L
-4003.5 4632.7251 L
n
0 O
0 0 0 1 k
-4003.5 4628.8252 m
-3993.4856 4631.3169 -3986.6863 4632.665 -3974.7007 4632.7251 c
-3961.7185 4632.79 -3896.6997 4632.7251 y
-3831.6816 4632.79 -3818.6997 4632.7251 v
-3806.7124 4632.665 -3799.9136 4631.3169 -3789.8999 4628.8252 C
-3799.9136 4626.3335 -3806.7124 4624.9854 -3818.6997 4624.9243 c
-3831.6816 4624.8589 -3896.6997 4624.9243 y
-3961.7185 4624.8589 -3974.7007 4624.9243 v
-3986.6863 4624.9854 -3993.4856 4626.3335 -4003.5 4628.8252 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7876 8505.29 m
-7778.2451 8505.29 L
-7778.2451 8484.5742 L
-7876 8484.5742 L
-7876 8505.29 L
n
0 O
0 g
1 XR
-7778.5586 8500.6084 m
-7793.8247 8486.8203 -7811.5537 8507.7393 -7826.9277 8495.4561 C
-7825.4199 8489.8037 -7819.7598 8496.7578 -7817.5176 8492.1113 C
-7817.4341 8490.5107 -7820.6313 8492.0107 -7820.5127 8489.8906 C
-7818.6245 8486.4814 -7813.8955 8486.9785 -7812.5664 8491.0273 C
-7806.3115 8489.0576 -7799.7734 8483.1143 -7793.7847 8484.9072 C
-7792.2671 8486.2578 -7793.0708 8487.4414 -7792.6211 8488.7178 C
-7785.2871 8484.2822 -7776.4644 8493.418 -7778.5586 8500.6084 C
f
-7822.2842 8502.2227 m
-7822.8247 8502.5986 -7821.9277 8503.71 -7822.2529 8504.1982 C
-7824.3237 8503.4463 -7826.6919 8499.3682 -7828.4731 8496.6006 C
-7828.2632 8498.1299 -7829.6641 8499.4541 -7831.0781 8497.2227 C
-7831.2383 8496.4053 -7830.3667 8496.1182 -7830.6729 8495.2266 C
-7831.8306 8493.6582 -7832.8472 8495.1436 -7833.7798 8494.915 C
-7834.3184 8494.1514 -7834.6143 8493.5088 -7834.6816 8492.9844 C
-7828.5537 8490.1641 -7821.9263 8501.9668 -7815.7456 8502.3926 C
-7815.9048 8505.4053 -7819.8555 8507.0908 -7822.2842 8502.2227 C
f
u
u
0 XR
-7819.1602 8496.9502 m
-7834.0142 8490.4102 -7855.4731 8494.6318 -7871.3687 8494.6094 c
-7877.2988 8494.6025 -7866.8965 8494.6113 -7872.8267 8494.6162 c
N
0 O
0 g
-7816.8052 8495.7295 m
-7834.1475 8488.5537 -7853.9341 8493.3457 -7872.0532 8493.2764 C
-7872.8608 8494.1631 -7873.6685 8495.0518 -7874.4751 8495.9375 C
-7873.6973 8495.9375 -7872.9194 8495.9365 -7872.1421 8495.9434 C
-7871.3345 8495.0557 -7870.5273 8494.1689 -7869.7202 8493.2822 C
-7870.3516 8493.292 -7870.9844 8493.2852 -7871.6157 8493.2852 c
-7873.3735 8493.2881 -7877.9165 8495.9521 -7874.0376 8495.9473 c
-7873.4063 8495.9473 -7872.7734 8495.9541 -7872.1421 8495.9434 c
-7870.4155 8495.916 -7865.8184 8493.3135 -7869.7202 8493.2822 c
-7870.4976 8493.2734 -7871.2759 8493.2764 -7872.0532 8493.2764 c
-7873.8081 8493.2754 -7878.3574 8495.9229 -7874.4751 8495.9375 c
-7857.1177 8496.0049 -7838.1025 8491.3037 -7821.5151 8498.1689 c
-7820.1035 8498.7539 -7814.8081 8496.5566 -7816.8052 8495.7295 c
-7816.8052 8495.7295 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7857.9658 8497.7275 m
-7876 8497.7275 L
-7876 8494.8525 L
-7857.9658 8494.8525 L
-7857.9658 8497.7275 L
-7857.9658 8497.7275 L
f
U
u
0.15 1 0.9 0.1 k
-7857.9658 8496.9902 m
-7874.5 8496.9902 L
-7874.5 8495.5908 L
-7857.9658 8495.5908 L
-7857.9658 8496.9902 L
-7857.9658 8496.9902 L
f
U
u
0 1 1 0 k
-7857.9658 8496.6025 m
-7873.5 8496.6025 L
-7873.5 8495.9766 L
-7857.9658 8495.9766 L
-7857.9658 8496.6025 L
-7857.9658 8496.6025 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7858 8497.7275 m
-7876 8497.7275 L
-7876 8494.8525 L
-7858 8494.8525 L
-7858 8497.7275 L
-7858 8497.7275 L
f
U
u
0.15 1 0.9 0.1 k
-7858 8496.9902 m
-7876 8496.9902 L
-7876 8495.5908 L
-7858 8495.5908 L
-7858 8496.9902 L
-7858 8496.9902 L
f
U
u
0 1 1 0 k
-7858 8496.6025 m
-7876 8496.6025 L
-7876 8495.9766 L
-7858 8495.9766 L
-7858 8496.6025 L
-7858 8496.6025 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7875.8833 8505.2451 m
-7784.0479 8505.2451 L
-7784.0479 8500.9658 L
-7875.8833 8500.9658 L
-7875.8833 8505.2451 L
n
0 O
0 0 0 1 k
-7875.6631 8502.5654 m
-7876 8502.6318 -7875.4814 8502.8213 -7875.8833 8502.6787 C
-7875.8379 8502.5605 -7875.7725 8502.4717 -7875.6631 8502.5654 C
f
-7785.1675 8502.7314 m
-7786.2524 8503.4941 -7787.6816 8502.7236 -7788.8701 8503.21 C
-7789.0098 8503.2422 -7788.8345 8502.792 -7789.1484 8502.8926 C
-7790.3008 8503.4854 -7792.1162 8503.1318 -7793.5195 8502.6748 C
-7793.4346 8502.5566 L
-7793.7017 8502.4717 -7794.0283 8502.8623 -7794.3115 8502.8076 C
-7794.3135 8502.7295 -7794.2207 8502.6963 -7794.2861 8502.5889 C
-7794.3574 8502.8252 -7794.7983 8502.6982 -7794.9185 8502.874 C
-7795.0303 8502.7822 -7795.0195 8502.5947 -7795.1641 8502.4912 C
-7795.3262 8502.7598 L
-7795.7769 8503.3994 -7796.4209 8502.7158 -7797.0361 8503.0459 C
-7797.0063 8502.9834 -7796.9453 8502.9346 -7796.9941 8502.874 C
-7797.9814 8503.2627 -7799.2168 8503.1904 -7800.3208 8503.333 C
-7800.2769 8503.2383 -7800.2363 8503.0654 -7800.3008 8502.958 C
-7800.3555 8503.2412 -7800.6963 8503.3125 -7800.9922 8503.3682 C
-7801.1255 8503.0771 -7801.4995 8503.6338 -7801.8467 8503.4736 C
-7801.8169 8503.4092 L
-7802.0732 8503.7139 -7802.1973 8503.2334 -7802.4053 8503.5986 C
-7802.5684 8503.3701 L
-7802.6807 8503.7803 -7802.9395 8503.1572 -7803.1514 8503.3662 C
-7803.1445 8503.4502 L
-7803.3442 8503.5498 -7803.4482 8503.3438 -7803.6338 8503.4131 C
-7803.6514 8503.3662 L
-7804.0854 8503.4736 -7804.3379 8503.2451 -7804.3271 8503.5654 C
-7804.4795 8503.3086 -7803.9063 8503.4482 -7804.1455 8503.0752 C
-7805.5732 8503.4053 -7807.0459 8503.3408 -7808.4834 8503.3467 C
-7808.6465 8503.2178 -7808.7505 8503.1787 -7808.7871 8503.0576 C
-7808.9307 8503.1221 -7809.3281 8503.1162 -7809.4585 8503.2803 C
-7809.4102 8503.2734 -7809.5513 8503.1162 -7809.6274 8503.1006 C
-7809.8887 8502.9795 -7809.9131 8503.4521 -7810.2002 8503.3086 C
-7810.0859 8503.2236 -7810.0469 8503.1201 -7810.0854 8503.001 C
-7810.3301 8503.251 -7810.6577 8503.2109 -7810.9473 8503.292 C
-7810.9023 8503.2383 -7810.8325 8503.2061 -7810.8433 8503.1055 C
-7811.1602 8503.3887 -7811.4209 8503.0459 -7811.6982 8503.2246 C
-7811.5947 8503.04 L
-7812.0415 8502.8154 -7811.7266 8503.4268 -7812.1128 8503.2939 C
-7812.02 8503.2354 -7812.0527 8503.1631 -7812.0361 8503.0879 C
-7812.3965 8503.4238 -7812.9795 8503.3125 -7813.3389 8503.4268 C
-7813.3174 8503.4014 -7813.3232 8503.3506 Y
-7813.7148 8503.3926 -7814.1245 8503.2881 -7814.5552 8503.4346 C
-7814.7119 8503.3525 -7814.5039 8502.9834 -7814.9185 8503.0518 C
-7814.9033 8503.4229 -7815.6221 8503.2041 -7815.3779 8503.624 C
-7815.7319 8503.5635 -7816.2925 8503.4238 -7816.5283 8503.5498 C
-7816.3691 8503.4092 -7816.7007 8503.0967 -7816.4063 8503.0654 C
-7816.6289 8502.8398 L
-7816.5957 8502.6885 -7816.3999 8502.8916 -7816.4707 8502.7002 C
-7816.6182 8502.7158 -7817.0479 8502.8623 -7817.1797 8502.8018 C
-7817.4531 8503.0293 -7817.7041 8503.4541 -7818.1465 8503.501 C
-7817.9385 8503.3564 -7818.2646 8503.0918 -7818.1235 8503.0283 C
-7818.7407 8503.7393 L
-7818.8877 8503.7568 -7818.7725 8503.4463 -7818.9854 8503.543 C
-7818.9746 8503.6416 -7819.0674 8503.7021 -7819.1318 8503.7822 C
-7819.1875 8503.7393 -7819.7441 8503.874 -7819.8081 8503.5088 C
-7819.8735 8503.3662 -7819.5684 8503.4326 -7819.7314 8503.3018 C
-7820.0029 8503.3057 -7820.0151 8503.4307 -7820.2871 8503.4365 C
-7820.2925 8503.3877 L
-7820.4717 8503.333 -7820.8213 8503.543 -7820.6265 8503.7451 C
-7820.5015 8503.7568 -7820.6738 8503.5254 -7820.4888 8503.6318 C
-7820.6152 8503.8438 -7820.9312 8503.9033 -7821.2031 8503.9072 C
-7821.1104 8503.8486 -7821.1216 8503.751 -7821.0845 8503.6475 C
-7821.4497 8503.9346 -7821.8369 8504.0254 -7822.2451 8504.1455 C
-7822.2515 8504.3193 -7822.0928 8503.8291 -7822.0327 8503.9209 C
-7822.5557 8503.6797 -7823.1128 8504.2627 -7823.5479 8503.9102 C
-7823.4766 8503.8799 -7823.5098 8504.1572 -7823.5146 8504.1084 C
-7823.7666 8504.0869 -7823.7549 8503.835 -7823.9189 8503.9277 C
-7823.9355 8503.7803 -7824.1255 8503.9756 -7824.2944 8504.0205 C
-7824.3818 8504.127 -7824.3384 8503.9482 -7824.1914 8503.9326 C
-7824.4268 8504.0576 -7825.3691 8504.2842 -7825.9131 8504.0693 C
-7825.9023 8504.167 -7826.2471 8504.4277 -7826.3721 8504.417 C
-7826.3232 8504.1885 L
-7826.4375 8504.0518 -7826.7422 8504.208 -7826.7632 8504.0127 C
-7827.0303 8504.29 -7825.7344 8503.7764 -7826.0957 8503.9902 C
-7826.1895 8503.7998 -7826.5991 8504.3545 -7826.5215 8504.043 C
-7826.7725 8504.0518 -7827.0161 8504.3086 -7827.2559 8504.0947 C
-7827.1865 8504.1318 -7827.0522 8503.7773 -7827.2549 8503.7939 C
-7827.6123 8503.835 -7827.3564 8503.9033 -7827.6465 8503.9795 C
-7827.8281 8504.0732 L
-7827.8398 8504.2959 -7828.1475 8504.043 -7828.0146 8504.292 C
-7828.0586 8504.1084 -7828.5337 8504.4053 -7828.4971 8504.0361 C
-7828.4473 8503.7451 L
-7828.6016 8503.7666 -7828.7002 8504.0518 -7828.8213 8504.1797 C
-7828.8418 8504.1533 -7828.8823 8504.0947 -7828.8745 8504.0479 C
-7828.8994 8504.4932 -7829.2432 8504.0107 -7829.4268 8504.3545 C
-7829.7505 8504.2002 -7830.2495 8504.3408 -7830.4023 8504.0635 C
-7830.6514 8504.1982 -7830.8784 8504.3584 -7831.1621 8504.2627 C
-7831.1055 8504.2207 -7831.0283 8504.208 -7831.0122 8504.1123 C
-7831.1904 8503.9814 -7831.2344 8504.0986 -7831.3975 8504.1709 C
-7831.3608 8504.1045 -7831.7539 8503.9102 -7831.9521 8503.7529 C
-7832.1992 8503.8857 -7832.1143 8504.126 -7832.1392 8504.2725 C
-7832.3652 8503.833 -7832.8379 8504.5557 -7833.1211 8504.1572 C
-7833.0352 8504.0967 -7832.7598 8503.9414 -7832.9658 8503.8311 C
-7833.1919 8503.3926 -7833.4219 8504.1553 -7833.7861 8503.9443 C
-7833.6968 8504.3086 L
-7833.8594 8504.083 -7834.2334 8504.5205 -7834.1963 8504.1494 C
-7834.3184 8504.2803 -7834.6265 8504.0283 -7834.5859 8504.3838 C
-7835.1846 8504.083 -7836.0425 8504.5654 -7836.4102 8503.9277 C
-7836.4961 8503.9873 -7836.7104 8503.9268 -7836.6665 8504.1094 C
-7836.5239 8504.3076 -7836.4673 8503.9678 -7836.4141 8504.1025 C
-7836.4912 8504.1133 -7836.5078 8504.2109 -7836.5161 8504.2598 C
-7836.7021 8504.1787 -7836.8486 8504.1533 -7836.6729 8503.8574 C
-7837.0869 8503.6377 -7837.1001 8504.4619 -7837.6274 8504.3232 C
-7837.6035 8504.1758 -7837.6436 8504.1201 -7837.7979 8504.1436 C
-7838.0903 8504.3955 L
-7838.4312 8504.3369 -7838.2842 8504.0605 -7838.2925 8503.8115 C
-7838.4746 8503.8545 -7838.6973 8503.8428 -7838.7803 8504.0283 C
-7839.0015 8503.7158 L
-7838.8398 8503.9414 -7839.1514 8503.8662 -7839.2368 8503.9268 C
-7839.1514 8503.8662 L
-7839.1846 8503.7598 -7839.3955 8503.8252 -7839.5024 8503.8564 C
-7839.4766 8504.0107 -7839.2617 8504.0732 -7839.1445 8504.1182 C
-7839.2373 8504.2275 -7839.3823 8504.2021 -7839.5059 8504.3311 C
-7839.4648 8504.0869 -7839.8027 8504.1572 -7839.9473 8504.1318 C
-7840.1133 8504.0791 -7840.1348 8504.3506 -7840.1831 8504.3428 C
-7840.1875 8504.2158 -7840.4541 8504.3213 -7840.3247 8504.1436 C
-7840.2681 8504.1025 -7840.1953 8504.2666 -7840.1016 8504.1553 C
-7840.2109 8504.0605 -7840.1982 8503.8398 -7840.4258 8504.001 C
-7840.5967 8504.1221 -7840.3818 8504.4834 -7840.7061 8504.3291 C
-7840.6211 8504.2686 -7840.6055 8504.1709 -7840.5391 8504.083 C
-7840.8433 8503.9561 L
-7840.8564 8504.1787 L
-7840.8975 8504.1221 -7840.8691 8504.1025 -7840.8877 8504.0732 C
-7840.9785 8504.3076 -7841.3521 8504.1455 -7841.4209 8504.4092 C
-7841.5742 8504.4326 -7841.7441 8504.2549 -7841.8906 8504.2295 C
-7841.8623 8504.21 L
-7842.0415 8504.0791 -7842.2793 8504.165 -7842.4297 8504.3154 C
-7842.4219 8504.2666 L
-7842.5195 8504.249 -7842.7505 8504.2842 -7842.8735 8504.415 C
-7843.1201 8504.2471 -7842.9561 8503.5742 -7843.2295 8503.8545 C
-7843.48 8503.8623 -7843.6221 8504.2627 -7843.5215 8504.4053 C
-7843.9717 8504.2549 -7844.4834 8504.6182 -7844.9009 8504.2725 C
-7844.9658 8504.3623 -7844.9248 8504.4189 -7845.0586 8504.4717 C
-7845.7197 8504.3838 -7846.4551 8504.7354 -7846.9814 8504.2979 C
-7846.79 8504.2041 -7846.9688 8504.0752 -7846.9727 8503.9482 C
-7847.1309 8504.1475 -7847.1631 8503.7412 -7847.2197 8504.083 C
-7847.2041 8504.2842 -7847.2197 8504.3818 -7847.0337 8504.4629 C
-7847.4282 8504.5713 -7848.0283 8504.5713 -7848.2471 8504.3838 C
-7848.1377 8504.4766 -7848.2227 8504.5381 -7848.3086 8504.5986 C
-7848.2803 8504.2773 -7848.5713 8504.2295 -7848.7915 8504.3428 C
-7848.8223 8504.5381 L
-7848.9658 8504.3369 L
-7849.0503 8504.3994 -7849.0591 8504.7471 -7849.2773 8504.5596 C
-7849.2891 8504.4834 -7849.3018 8504.4063 -7849.3418 8504.3506 C
-7849.5693 8504.5107 -7849.8906 8504.7822 -7850.1377 8504.6162 C
-7850.3398 8504.3311 L
-7850.4453 8504.3623 -7850.6235 8504.5342 -7850.4375 8504.6162 C
-7850.8594 8504.4443 -7851.1309 8504.4229 -7851.2646 8504.1758 C
-7851.9912 8504.7773 -7853.0459 8504.8018 -7853.8906 8504.7588 C
-7853.8652 8504.6123 L
-7854.0923 8504.4756 -7853.9834 8504.8682 -7854.1416 8504.7666 C
-7854.0684 8504.627 -7854.3145 8504.4629 -7854.1362 8504.292 C
-7854.4609 8504.1377 -7854.5547 8504.5459 -7854.7656 8504.6123 C
-7854.7979 8504.8047 -7854.5957 8504.4893 -7854.6367 8504.7334 C
-7854.6729 8504.8018 -7855.0859 8504.583 -7855.1362 8504.874 C
-7855.2178 8504.7598 -7855.1543 8504.5459 -7855.1104 8504.4277 C
-7855.3086 8504.5693 L
-7855.5513 8504.2295 -7854.7559 8503.9619 -7855.0107 8503.543 C
-7855.1934 8503.5889 L
-7855.3682 8503.2842 -7854.71 8503.2451 -7855.1689 8503.1406 C
-7855.3682 8503.2842 -7855.5381 8503.7061 -7855.3608 8503.835 C
-7855.7754 8503.915 -7855.5527 8504.5283 -7855.9985 8504.5039 C
-7856.1201 8504.333 -7855.6416 8504.4629 -7855.7275 8504.2236 C
-7855.9375 8503.9893 -7856.1484 8504.3545 -7856.3354 8504.2725 C
-7856.1279 8504.3818 -7856.3032 8504.6758 -7856.4375 8504.7295 C
-7856.6641 8504.5918 -7856.29 8504.4541 -7856.6113 8504.4238 C
-7856.6641 8504.5918 -7856.9595 8504.7178 -7856.7041 8504.835 C
-7856.8203 8505.2158 -7857.0381 8504.7295 -7857.2129 8505.0244 C
-7857.3174 8504.7568 -7856.8823 8504.4053 -7857.2354 8504.2715 C
-7857.1792 8504.5293 -7857.6704 8504.6221 -7857.4839 8505.0049 C
-7857.6221 8504.9307 -7857.6367 8504.7275 -7857.5361 8504.5693 C
-7857.7334 8504.4102 -7858.0151 8505.04 -7858.0801 8504.5283 C
-7858.1479 8504.792 L
-7858.21 8504.7061 -7858.2983 8504.6416 -7858.3994 8504.499 C
-7858.5732 8504.4941 -7858.96 8504.8564 -7858.9443 8504.458 C
-7859 8504.499 -7859.3975 8504.4814 -7859.2441 8504.7568 C
-7858.9971 8504.9248 -7858.96 8504.5557 -7858.8223 8504.9277 C
-7858.9971 8504.624 -7859.1787 8504.9678 -7859.3213 8505.0693 C
-7859.3447 8504.915 L
-7859.4297 8504.9756 -7859.6255 8504.9414 -7859.6787 8505.1084 C
-7859.6133 8505.0205 -7859.6475 8504.915 -7859.7148 8504.8779 C
-7859.8042 8505.1123 L
-7860.1494 8505.2295 -7859.8857 8504.7002 -7860.2217 8504.7686 C
-7859.9663 8504.5869 L
-7860.0225 8504.626 -7860.1367 8504.4063 -7860.2979 8504.4795 C
-7860.3604 8504.6934 -7860.4775 8504.9502 -7860.5313 8505.1162 C
-7860.7207 8505.21 -7860.6162 8504.875 -7860.8027 8505.0947 C
-7860.5586 8504.8369 L
-7860.5215 8504.7666 -7860.7231 8504.4834 -7860.9761 8504.4893 C
-7861.1377 8504.5635 -7861.3887 8504.8721 -7861.1338 8504.9893 C
-7861.2607 8504.9932 -7861.4385 8504.8623 -7861.3379 8504.7061 C
-7861.6255 8504.7803 -7861.2998 8504.9365 -7861.5479 8505.0693 C
-7861.6494 8504.9268 -7861.9658 8504.7236 -7862.1563 8504.5166 C
-7861.8975 8504.1582 L
-7862.0693 8504.1553 L
-7861.8467 8503.8682 -7862.1826 8503.9365 -7862.0566 8503.6338 C
-7862.1743 8503.5869 -7862.3169 8503.6895 -7862.4307 8503.7686 C
-7862.0864 8504.2529 -7862.8159 8504.4307 -7862.7158 8504.8721 C
-7863.1875 8504.9932 -7863.0107 8503.7979 -7863.5024 8504.4893 C
-7863.4219 8504.6045 -7863.6533 8504.9404 -7863.3564 8504.8125 C
-7863.6494 8504.7646 -7863.5557 8505.2559 -7863.9014 8505.0732 C
-7863.6455 8504.8916 -7864.1763 8504.626 -7863.8066 8504.3623 C
-7863.8311 8504.5088 -7863.6001 8504.4736 -7863.5435 8504.4326 C
-7863.6641 8504.2627 -7863.5186 8503.9873 -7863.8184 8503.9873 C
-7864.0015 8504.0293 -7864.2524 8504.0381 -7864.2158 8504.2686 C
-7864.2085 8504.5215 -7863.9365 8504.2412 -7864.0537 8504.4971 C
-7864.4185 8504.585 -7864.4795 8504.2002 -7864.6304 8504.6494 C
-7864.3999 8504.6133 -7864.3423 8504.874 -7864.3467 8505.0479 C
-7864.6143 8505.1533 L
-7864.5625 8504.9854 L
-7864.9922 8504.8643 -7864.6895 8505.29 -7865.1055 8505.2451 C
-7865.3008 8504.9131 L
-7865.2017 8504.627 -7864.6953 8505.04 -7864.7695 8504.5742 C
-7865.04 8504.5557 -7865.1299 8504.792 -7865.3848 8504.6719 C
-7865.3281 8504.6318 -7865.2505 8504.6201 -7865.1943 8504.5791 C
-7865.2915 8504.5635 -7865.3877 8503.9463 -7865.7734 8504.3076 C
-7865.9727 8504.4482 -7865.8262 8504.4736 -7865.8311 8504.6475 C
-7866.2656 8504.7002 -7866.3955 8504.8779 -7866.6753 8504.9053 C
-7866.6177 8504.5654 -7867.1699 8504.8721 -7866.8608 8504.5244 C
-7866.7188 8504.7236 -7866.0903 8504.7041 -7865.9365 8504.3799 C
-7866.0947 8503.9766 -7865.5952 8504.4365 -7865.5024 8504.0283 C
-7865.8506 8504.0186 -7865.8335 8503.6221 -7865.8896 8503.3623 C
-7865.9863 8503.3438 -7866.0801 8503.4541 -7866.1377 8503.4941 C
-7866.1787 8503.7393 -7866.0522 8503.7354 -7866.0449 8503.9873 C
-7866.4336 8503.9209 -7866.8081 8504.0576 -7867.0225 8504.2959 C
-7867.1523 8504.1748 -7867.1113 8503.9307 -7866.9575 8503.9072 C
-7867.4199 8503.9795 -7867.9141 8503.9463 -7868.3535 8503.8721 C
-7868.0693 8504.2715 -7868.8433 8503.9658 -7868.6494 8504.2979 C
-7868.4141 8504.3877 -7868.2119 8504.6719 -7868.3418 8504.8506 C
-7868.4888 8504.8252 -7868.3369 8504.6758 -7868.3984 8504.5908 C
-7868.5859 8504.8086 -7868.6895 8504.2412 -7868.8735 8504.585 C
-7868.4512 8504.4561 -7868.7915 8504.0986 -7868.7139 8503.7861 C
-7869.0186 8503.9619 -7868.7007 8503.5635 -7869.0024 8503.5635 C
-7869.3057 8503.7373 -7869.6787 8503.874 -7870.0161 8503.9414 C
-7870.4399 8503.6455 -7871.0898 8503.9365 -7871.4683 8503.9482 C
-7871.6665 8503.79 -7871.5322 8503.4365 -7871.7471 8503.375 C
-7871.9995 8503.3818 -7871.5601 8503.7568 -7871.9336 8503.5947 C
-7871.8975 8503.5244 L
-7872.0107 8503.6064 -7872.5825 8503.2842 -7872.6929 8503.792 C
-7872.5776 8503.4092 L
-7872.6475 8503.374 -7872.7119 8503.4619 -7872.7695 8503.5029 C
-7872.7725 8503.3779 -7872.8535 8503.2646 -7872.7402 8503.1826 C
-7872.9707 8502.9189 -7873.2241 8503.2246 -7873.4746 8503.2354 C
-7873.3135 8503.4619 L
-7873.7422 8503.6396 -7874.0293 8503.415 -7874.4443 8503.4941 C
-7874.4316 8503.2725 L
-7874.6787 8503.4053 L
-7874.6182 8503.1904 -7874.8447 8503.0518 -7874.9751 8503.2314 C
-7874.3335 8502.6885 L
-7874.1553 8502.8193 -7874.5283 8502.9561 -7874.4165 8503.1748 C
-7874.3213 8503.3662 -7873.9375 8503.3057 -7873.8755 8503.0918 C
-7874.0225 8503.0674 -7874.0293 8503.1162 -7874.1436 8503.1963 C
-7874.1919 8502.8877 -7873.9688 8502.8994 -7873.8584 8502.6934 C
-7873.9355 8502.7061 -7874.0449 8502.6123 -7874.0615 8502.71 C
-7873.9102 8502.5596 -7873.7578 8502.5361 -7873.5059 8502.5283 C
-7873.6763 8502.6494 -7873.4131 8502.7197 -7873.4775 8502.8076 C
-7873.4575 8502.5361 -7873.2168 8502.4521 -7872.9053 8502.5283 C
-7872.6831 8502.8428 -7872.3208 8502.3262 -7871.96 8502.4131 C
-7872.1064 8502.6885 -7872.2935 8502.9092 -7872.5127 8503.0205 C
-7872.2861 8503.1582 -7872.2607 8503.0127 -7872.0337 8503.1514 C
-7871.9238 8502.9463 -7871.8457 8502.6318 -7871.5503 8502.5068 C
-7871.5342 8502.71 L
-7871.2666 8502.6064 -7871.2666 8502.3057 -7870.9258 8502.3623 C
-7870.3418 8502.4619 -7869.7407 8502.4619 -7869.2949 8502.4873 C
-7869.2783 8502.6895 L
-7869.0303 8502.2559 -7868.4521 8502.5293 -7868.1182 8502.3369 C
-7867.5503 8502.5322 -7866.8848 8502.1436 -7866.5938 8502.4932 C
-7865.5913 8502.3369 -7864.7148 8502.1846 -7863.6768 8502.2588 C
-7863.8516 8502.5537 L
-7863.6655 8502.3369 -7863.7305 8502.7236 -7863.5479 8502.6797 C
-7863.7578 8502.4443 -7863.2949 8502.374 -7863.1665 8502.1934 C
-7862.7041 8502.4229 -7862.1104 8502.1729 -7861.7007 8501.9658 C
-7861.6846 8502.1689 L
-7861.2705 8501.7881 -7860.7759 8502.1221 -7860.2598 8502.1846 C
-7860.2007 8502.2686 -7860.1074 8502.459 -7859.9536 8502.4365 C
-7859.6738 8502.1084 -7859.5273 8502.1318 -7859.1167 8501.9268 C
-7858.8169 8501.9268 -7858.3301 8502.0078 -7858.0254 8502.1357 C
-7856.8975 8501.6748 -7855.7456 8501.9697 -7854.5732 8501.6924 C
-7854.4888 8501.9307 L
-7853.3521 8501.4209 -7851.9541 8501.8838 -7850.9839 8501.6221 C
-7851.0776 8502.0293 L
-7850.7734 8502.1553 -7850.3843 8501.9229 -7850.4619 8501.6338 C
-7850.1567 8501.7588 -7849.7007 8501.4365 -7849.5068 8501.7715 C
-7849.1953 8501.8467 -7849.1255 8501.583 -7848.8662 8501.5283 C
-7848.2422 8501.6826 -7848.0107 8501.6475 -7847.4224 8501.5713 C
-7847.5684 8501.5459 L
-7847.6328 8501.6357 -7847.6387 8501.8086 -7847.4922 8501.835 C
-7847.2725 8501.7217 -7846.6846 8501.9443 -7846.9033 8501.458 C
-7846.2754 8501.7393 -7845.4385 8501.2295 -7844.8271 8501.6084 C
-7844.8789 8501.4756 -7844.7246 8501.4502 -7844.6602 8501.3604 C
-7844.1089 8501.3545 -7843.5293 8501.626 -7843.0898 8501.3994 C
-7843.0024 8501.4658 -7843.2295 8501.626 -7843.0049 8501.6396 C
-7842.8721 8501.5889 -7843.0024 8501.4658 -7842.8384 8501.3916 C
-7841.9453 8501.1436 -7841.0303 8501.6475 -7840.2188 8501.583 C
-7838.7754 8501.3262 -7837.2695 8501.4561 -7835.8867 8501.4131 C
-7835.9023 8501.5107 L
-7835.4395 8501.1377 -7834.8159 8501.8926 -7834.4463 8501.3311 C
-7834.3369 8501.4238 -7834.0283 8501.375 -7834.1094 8501.5635 C
-7833.7407 8501.2998 -7833.0771 8501.8115 -7832.5439 8501.4766 C
-7832.5928 8501.4678 -7832.6211 8501.4873 -7832.6777 8501.5293 C
-7832.1392 8501.7451 -7831.6641 8501.4502 -7831.0957 8501.6455 C
-7831.1533 8501.6875 -7831.2583 8501.7178 -7831.2754 8501.8154 C
-7831.0557 8502.0029 -7830.7549 8501.4033 -7830.6348 8501.874 C
-7830.5088 8501.8701 -7830.5449 8501.6377 -7830.6221 8501.6514 C
-7829.3779 8501.835 -7828.0498 8501.5342 -7826.7549 8501.4268 C
-7825.8271 8501.708 -7826.6982 8502.2197 -7825.9663 8501.8682 C
-7825.9063 8501.959 -7825.9229 8501.6885 -7825.9131 8501.7861 C
-7825.6299 8501.6543 -7825.4717 8502.3115 -7825.2754 8502.0654 C
-7825.3564 8501.7764 -7825.1445 8501.9033 -7825.1387 8501.7275 C
-7824.5713 8501.915 -7824.4575 8502.1758 -7824.0098 8501.9561 C
-7824.0435 8502.1084 L
-7823.5186 8501.6787 -7822.9102 8501.9092 -7822.4673 8501.4131 C
-7819.5728 8501.3232 -7816.7983 8501.0479 -7813.9761 8500.9902 C
-7811.1865 8501.085 -7808.4551 8500.8623 -7805.6221 8501.126 C
-7804.9585 8501.5254 -7804.9087 8501.5146 -7804.1797 8501.3525 C
-7804.2095 8501.417 -7804.2549 8501.4326 -7804.2061 8501.4932 C
-7804.1699 8501.165 -7803.6929 8501.4619 -7803.6235 8501.1494 C
-7802.5762 8501.21 -7801.6113 8501.1201 -7800.5337 8501.1182 C
-7800.7041 8501.1533 -7800.7896 8501.4209 -7800.5869 8501.3994 C
-7800.3755 8501.1904 L
-7800.3408 8501.2822 L
-7800.2021 8501.2334 -7800.0513 8501.0713 -7800.1943 8500.9658 C
-7797.4873 8500.6826 -7794.8242 8501.3408 -7792.1729 8501.2598 C
-7791.5435 8501.3965 -7790.6475 8501.2715 -7789.9629 8501.2041 C
-7787.9355 8501.6416 -7786.1079 8501.9941 -7784.0479 8501.6885 C
-7784.3169 8502.5361 -7785.1675 8502.7314 V
f
-7875.2578 8502.5322 m
-7875.1855 8502.6963 -7874.9497 8502.7861 -7875.1377 8503.0049 C
-7875.1611 8502.8506 -7875.2822 8502.6787 -7875.2578 8502.5322 C
f
-7868.9619 8504.2197 m
-7868.9536 8504.1709 -7868.8721 8504.2861 -7868.8521 8504.3125 C
-7868.9297 8504.3252 -7869.0024 8504.4629 -7869.0645 8504.3779 C
-7868.9854 8504.3662 -7868.9976 8504.2881 -7868.9619 8504.2197 C
f
-7867.3521 8504.3174 m
-7867.3765 8504.4629 -7867.7207 8504.5791 -7867.9238 8504.5967 C
-7867.3521 8504.3174 L
f
-7865.8521 8504.9189 m
-7865.7227 8505.042 -7865.7583 8505.1094 -7865.9326 8505.1055 C
-7865.9453 8505.0283 -7865.8877 8504.9893 -7865.8521 8504.9189 C
f
-7865.7456 8504.5869 m
-7865.6211 8504.583 -7865.5591 8504.6689 -7865.4985 8504.7529 C
-7865.5029 8504.627 -7865.7871 8504.8311 -7865.7456 8504.5869 C
f
-7862.4893 8505.0107 m
-7862.4111 8504.999 -7862.2417 8504.8779 -7862.1689 8505.04 C
-7862.2505 8504.9268 -7862.5498 8505.2246 -7862.4893 8505.0107 C
f
-7860.9761 8504.79 m
-7860.9272 8504.7998 -7860.9072 8504.8262 -7860.8506 8504.7861 C
-7860.7607 8504.8525 -7860.8555 8504.959 -7860.9312 8504.9727 C
-7860.9761 8504.79 L
f
-7833.4287 8504.2041 m
-7833.5923 8504.2764 L
-7833.5684 8504.1318 L
-7833.4287 8504.2041 L
f
-7821.3574 8504.1963 m
-7821.1943 8504.1045 -7821.2441 8504.333 -7821.2168 8504.3545 C
-7821.3643 8504.3701 -7821.1621 8504.1748 -7821.3574 8504.1963 C
f
-7814.8486 8503.4678 m
-7814.8984 8503.4717 L
-7814.8818 8503.1729 L
-7814.8486 8503.4678 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7865.5625 8505.29 m
-7868.4375 8505.29 L
-7868.4375 8496.79 L
-7868.4375 8495.7217 -7867.5684 8494.8525 -7866.5 8494.8525 C
-7857.9165 8494.8525 L
-7857.9165 8497.7275 L
-7865.5625 8497.7275 L
-7865.5625 8505.29 L
-7865.5625 8505.29 L
f
U
u
0.15 1 0.9 0.1 k
-7866.2998 8505.29 m
-7867.7002 8505.29 L
-7867.7002 8496.79 L
-7867.7002 8496.1289 -7867.1621 8495.5908 -7866.5 8495.5908 C
-7857.9165 8495.5908 L
-7857.9165 8496.9902 L
-7866.2998 8496.9902 L
-7866.2998 8505.29 L
-7866.2998 8505.29 L
f
U
u
0 1 1 0 k
-7866.6875 8505.29 m
-7867.3125 8505.29 L
-7867.3125 8496.79 L
-7867.3125 8496.3428 -7866.9482 8495.9766 -7866.5 8495.9766 C
-7857.9165 8495.9766 L
-7857.9165 8496.6025 L
-7866.5 8496.6025 L
-7866.6035 8496.6025 -7866.6875 8496.6875 -7866.6875 8496.79 C
-7866.6875 8505.29 L
-7866.6875 8505.29 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9727 8505.29 m
-7849.9727 8479.2617 L
-7876 8479.2617 L
-7876 8505.29 L
-7849.9727 8505.29 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7876 8487.9365 m
-7849.9727 8487.9365 l
S
0.64 0.650477 0.701045 0.510735 K
-7876 8496.6143 m
-7849.9727 8496.6143 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7876 8492.2754 m
-7849.9727 8492.2754 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7854.5742 8492.3018 m
-7854.3442 8492.0303 -7854.6914 8491.7441 -7855 8491.5332 c
-7855.1118 8491.4561 -7855.5215 8491.6689 -7855.7466 8491.5029 c
-7856.0439 8491.2852 -7856.1826 8491.1982 -7856.4824 8491.2041 c
-7856.6455 8491.208 -7857.0435 8491.3379 -7857.1895 8491.3682 c
-7857.5679 8491.4443 -7857.8022 8491.6416 -7858.3672 8491.5449 c
-7858.7344 8491.4814 -7858.8286 8491.3906 -7858.9233 8491.4385 c
-7859.1118 8491.5801 -7859.2202 8491.8037 -7859.4258 8491.8525 c
-7859.9575 8491.9795 -7860.3535 8492.0234 -7860.8818 8492.0127 c
-7861.3047 8492.0029 -7862.4185 8492.0713 -7863.2866 8491.9717 c
-7863.6226 8491.9316 -7863.6025 8491.5068 -7863.7695 8491.5029 c
-7863.8618 8491.501 -7863.7646 8491.8164 -7863.8306 8491.8369 c
-7864.1694 8491.9434 -7864.4702 8490.793 -7864.6943 8490.8623 c
-7864.8047 8490.8975 -7864.5562 8491.4434 -7864.6729 8491.4717 c
-7864.8975 8491.5273 -7865.2178 8490.5088 -7865.4321 8490.5713 c
-7865.5635 8490.6084 -7865.2886 8491.0283 -7865.4375 8491.0967 c
-7865.6655 8491.2012 -7865.9087 8490.3252 -7866.1064 8490.4238 C
-7866.1543 8490.4717 -7865.7295 8491.2275 -7866.1685 8491.1689 c
-7866.2871 8491.1514 -7866.5054 8490.6035 -7866.5801 8490.6299 c
-7866.6919 8490.6699 -7866.3535 8491.0918 -7866.4897 8491.2178 C
-7866.7681 8491.4443 -7867.3711 8490.4531 -7867.4575 8490.5244 c
-7867.5791 8490.626 -7867.1279 8491.3877 -7867.2695 8491.4561 C
-7867.4497 8491.7197 -7868.0142 8490.8428 -7868.0889 8490.8916 c
-7868.1777 8490.9502 -7867.9058 8491.3281 -7867.8799 8491.5234 c
-7867.8545 8491.7178 -7867.9966 8491.8516 -7868.2144 8491.7998 c
-7868.4736 8491.7373 -7868.8696 8490.9316 -7868.9727 8491.0254 C
-7869.0791 8491.0811 -7868.8682 8491.3682 -7868.7954 8491.6025 c
-7868.7583 8491.7178 -7868.8882 8491.8916 -7869.0298 8491.8916 c
-7869.3135 8491.9395 -7869.6255 8491.2881 -7869.7065 8491.3926 c
-7869.7524 8491.4521 -7869.5898 8491.7803 -7869.7295 8491.8779 c
-7869.8994 8491.9961 -7870.3115 8491.5283 -7870.4521 8491.583 C
-7870.5361 8491.6318 -7870.4126 8491.8867 -7870.4927 8491.9434 c
-7870.7295 8492.1094 -7871.0039 8491.7109 -7871.0513 8491.7588 C
-7871.1167 8491.7813 -7871.1201 8491.8262 -7871.2793 8491.9307 c
-7871.4736 8492.0576 -7871.5254 8492.1387 -7871.5425 8492.2549 c
-7871.5654 8492.373 -7871.3135 8492.665 -7871.1655 8492.6396 c
-7870.8223 8492.5801 -7870.8662 8493.1396 -7870.6328 8493.0059 c
-7870.5679 8492.9697 -7870.6592 8492.5488 -7870.4199 8492.5557 c
-7870.0488 8492.5684 -7869.9858 8493.1113 -7869.7817 8493.1006 c
-7869.6406 8493.0938 -7869.8521 8492.4736 -7869.6328 8492.5508 c
-7869.4751 8492.6064 -7869.0063 8493.5918 -7868.9795 8493.5 c
-7868.8975 8493.2324 -7869.0703 8492.6885 -7868.9409 8492.6982 c
-7868.7568 8492.7129 -7868.5078 8493.6074 -7868.2544 8493.7275 c
-7868.1826 8493.7627 -7868.3774 8492.8906 -7868.1958 8492.8867 C
-7868.0898 8492.9365 -7867.7578 8493.7393 -7867.6274 8493.7881 C
-7867.5591 8493.7725 -7867.5879 8493.415 -7867.5176 8493.3945 c
-7867.4688 8493.3799 -7867.2817 8493.8555 -7867.21 8493.8135 c
-7867.1055 8493.7529 -7867.2471 8493.2822 -7867.0889 8493.2129 c
-7866.9175 8493.1387 -7866.4878 8494.1826 -7866.3486 8494.0879 c
-7866.2769 8494.04 -7866.3574 8493.5 -7866.21 8493.5361 c
-7866.0718 8493.5684 -7865.9414 8493.9043 -7865.8081 8493.9326 c
-7865.7295 8493.9482 -7865.7935 8493.4814 -7865.7495 8493.4639 c
-7865.5889 8493.4053 -7865.2329 8493.9619 -7865.0688 8493.8135 c
-7864.8584 8493.625 -7864.9395 8493.2598 -7864.8345 8493.2725 c
-7864.6274 8493.2959 -7864.4912 8493.5332 -7864.4146 8493.4736 c
-7864.2642 8493.3584 -7864.3281 8493.0693 -7864.0527 8492.9824 c
-7863.8975 8492.9326 -7863.7935 8493.2246 -7863.7495 8493.2207 c
-7863.6738 8493.2178 -7863.6782 8493.1201 -7863.6665 8493.0146 c
-7863.6328 8492.751 -7863.6064 8492.6895 -7863.4878 8492.667 c
-7863.0854 8492.6436 -7862.5625 8492.5742 -7862.1807 8492.5654 c
-7861.6274 8492.5508 -7860.2607 8492.5273 -7860.1182 8492.5273 c
-7860 8492.5029 -7859.7432 8492.6846 -7859.6689 8492.751 c
-7859.4678 8492.9355 -7859.2998 8493.1494 -7858.9858 8493.4102 c
-7858.8906 8493.4912 -7858.8081 8493.4707 -7858.7378 8493.4463 c
-7858.5249 8493.375 -7858.4585 8493.3232 -7858.2202 8493.292 c
-7857.9175 8493.249 -7857.4272 8493.3389 -7857.1245 8493.4326 c
-7856.6035 8493.5918 -7856.5264 8493.6143 -7856.0977 8493.5654 c
-7855.6992 8493.5195 -7855.0586 8493.4482 -7855.0479 8493.1006 c
-7855.0415 8492.8857 -7854.9414 8492.7334 -7854.5742 8492.3018 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9722 8505.29 m
-7849.9722 8479.2627 L
-7876 8479.2627 L
-7876 8505.29 L
-7849.9722 8505.29 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7858.6455 8492.2793 m
-7849.9736 8492.2793 l
S
-7862.9839 8505.29 m
-7862.9839 8496.6143 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7858.7202 8487.9404 m
-7849.9727 8487.9404 l
S
-7867.3232 8505.2891 m
-7867.3232 8495.9355 l
S
0.64 0.650477 0.701045 0.510735 K
-7858.6504 8505.2891 m
-7858.6504 8502.877 l
-7855.9937 8502.6533 -7854.3096 8500.9502 v
-7852.6064 8499.2236 -7852.3774 8496.6182 y
-7849.9727 8496.6182 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7866.8418 8489.4756 m
-7866.8418 8489.54 -7866.8218 8489.5811 -7866.7783 8489.5811 c
-7866.6943 8489.5811 -7866.4634 8489.2441 -7866.3994 8489.2441 c
-7866.3154 8489.2441 -7866.2729 8489.2861 -7866.2729 8489.3916 c
-7866.2729 8489.4756 -7866.5264 8490.3828 y
-7866.5264 8490.4238 -7866.5264 8490.4238 -7866.5049 8490.4238 c
-7866.4414 8490.4238 -7866.0615 8489.877 -7865.9351 8489.877 c
-7865.9146 8489.877 -7865.8936 8489.8975 -7865.8936 8489.9189 c
-7866.1675 8490.8252 -7866.1675 8491.0156 v
-7866.1675 8491.0791 -7866.1675 8491.1006 -7866.1465 8491.1006 c
-7866.1055 8491.1006 -7865.6826 8490.5303 -7865.5562 8490.5303 c
-7865.5352 8490.5303 -7865.5137 8490.5508 -7865.5137 8490.5723 c
-7865.5137 8490.6357 -7865.7666 8491.374 -7865.7666 8491.542 c
-7865.7666 8491.585 -7865.7666 8491.585 -7865.7446 8491.585 c
-7865.6826 8491.585 -7865.4722 8491.374 -7865.4297 8491.374 c
-7865.4082 8491.374 -7865.3882 8491.3955 -7865.3882 8491.416 c
-7865.3882 8491.4365 -7865.4927 8491.7959 -7865.4927 8491.8799 c
-7865.4927 8491.9014 -7865.4927 8491.9014 -7865.4722 8491.9014 c
-7865.4297 8491.9014 -7865.0918 8491.542 -7865.0078 8491.542 c
-7864.9658 8491.542 -7864.9233 8491.585 -7864.9233 8491.6689 c
-7864.9233 8491.8174 -7865.1138 8492.5342 -7865.1138 8492.5762 c
-7865.1138 8492.6602 -7865.0918 8492.7021 -7865.0498 8492.7021 c
-7864.9658 8492.7021 -7864.7119 8492.3857 -7864.6494 8492.3857 c
-7864.5854 8492.3857 -7864.5439 8492.4063 -7864.5439 8492.4707 c
-7864.5854 8492.8916 L
-7864.5854 8492.9561 -7864.5854 8492.9756 -7864.5654 8492.9756 c
-7864.5225 8492.9756 -7864.2915 8492.6816 -7864.2065 8492.6816 c
-7864.1006 8492.6816 -7864.1006 8493.167 -7864.1006 8493.2295 c
-7864.1006 8493.335 -7864.0166 8493.4189 -7863.8896 8493.4189 c
-7863.8057 8493.4189 -7863.4678 8493.1875 -7863.4473 8493.1875 c
-7863.3623 8493.1875 -7863.3198 8493.6299 -7863.2568 8493.6299 c
-7863.1943 8493.6299 -7862.9199 8493.5029 -7862.8564 8493.5029 c
-7862.6455 8493.5029 -7862.6035 8493.5889 -7862.6035 8493.7568 c
-7862.6255 8493.9043 L
-7862.6255 8493.9463 -7862.6035 8493.9463 -7862.5835 8493.9463 c
-7862.4985 8493.9463 -7862.2241 8493.6719 -7862.1392 8493.6719 c
-7861.9287 8493.6719 -7859.8198 8495.7393 -7859.5454 8496.0127 c
-7859.3984 8496.1807 -7859.3984 8496.4766 -7859.3984 8496.6035 c
-7859.3984 8497.4678 -7859.3984 8497.5518 -7859.2295 8497.6357 c
-7858.5977 8497.8896 -7858.5127 8498.0371 -7857.7334 8499.3232 c
-7857.6479 8499.4707 -7856.7407 8500.083 -7856.5942 8500.083 c
-7856.4878 8500.083 -7856.1094 8499.8291 -7856.0239 8499.8291 c
-7855.9194 8499.8291 -7855.8135 8499.8926 -7855.8135 8500.0605 c
-7855.8135 8500.5039 -7856.3408 8501.0107 -7856.9312 8501.0107 c
-7857.7534 8501.0107 -7858.0913 8500.3135 -7858.1338 8499.915 c
-7858.1543 8499.7666 -7858.2393 8499.6816 -7858.3447 8499.6816 c
-7858.3862 8499.6816 -7858.4287 8499.7021 -7858.4702 8499.7666 c
-7858.9561 8500.5674 -7859.9473 8501.0107 -7860.7065 8501.0107 c
-7861.7393 8501.0107 -7862.8774 8500.3779 -7863.3418 8500.1045 c
-7863.7842 8499.8516 -7864.4814 8499.6816 -7864.8809 8499.6816 c
-7865.3242 8499.6816 -7865.3662 8499.8291 -7865.3662 8500.083 c
-7865.3662 8500.2305 -7864.9023 8500.6719 -7864.9023 8500.7998 c
-7864.9023 8500.9258 -7865.0498 8501.0107 -7865.4082 8501.0107 c
-7865.8936 8501.0107 -7866.5679 8500.293 -7866.5679 8499.5137 c
-7866.5679 8498.9014 -7865.7666 8498.375 -7865.3022 8498.375 c
-7864.3755 8498.375 -7864.0942 8498.7334 -7863.5264 8499.1973 c
-7863.4414 8499.2598 -7863.3774 8499.2822 -7863.3359 8499.2822 c
-7863.1895 8499.2822 -7863.1895 8498.1846 -7863.1895 8498.0596 c
-7863.1895 8497.9102 -7863.2729 8497.8477 -7863.3774 8497.8477 c
-7865.7822 8497.8477 -7870.6592 8496.624 -7872.3672 8490.4678 c
-7872.4297 8490.2559 -7872.5361 8490.1514 -7872.6406 8490.1514 c
-7872.7881 8490.1514 -7873.7793 8490.9941 -7873.7793 8492.5762 c
-7873.7793 8494.4102 -7872.5767 8495.3799 -7871.9873 8495.3799 c
-7871.8398 8495.3799 -7871.6494 8495.3594 -7871.6494 8495.2109 c
-7871.6494 8495.1484 -7871.6929 8495.085 -7871.7759 8494.9795 c
-7872.1143 8494.6436 -7872.3672 8494.0098 -7872.3672 8493.6934 c
-7872.3672 8493.4814 -7872.2607 8493.3135 -7872.1143 8493.3135 c
-7871.9033 8493.3135 -7871.5654 8494.2627 -7871.46 8494.4102 c
-7871.3335 8494.6211 -7870.9546 8495.001 -7870.2378 8495.5283 c
-7869.4995 8496.0537 -7868.0654 8497.3623 -7868.0654 8498.627 c
-7868.0654 8499.999 -7869.1191 8500.9053 -7869.9209 8500.9053 c
-7870.7007 8500.9053 -7871.6714 8500.3779 -7872.0713 8499.8926 c
-7872.7041 8499.1553 -7873.3154 8498.585 -7873.8218 8498.585 c
-7874.1592 8498.585 -7874.3066 8498.7959 -7874.3066 8499.0068 c
-7874.3066 8499.3438 -7874.0537 8499.5762 -7873.5479 8499.6182 c
-7872.9575 8499.6611 -7872.8936 8500.083 -7872.8936 8500.4189 c
-7872.8936 8500.6934 -7873.4209 8501.0107 -7873.8433 8501.0107 c
-7874.4751 8501.0107 -7875.2974 8500.3135 -7875.2974 8498.4805 c
-7875.2974 8496.9824 -7874.0537 8496.5195 -7873.5679 8496.5195 c
-7873.1265 8496.5195 -7872.4722 8496.6035 -7872.0928 8496.9404 c
-7870.8066 8498.1436 -7870.1318 8498.3525 -7869.5835 8498.3525 c
-7869.3721 8498.3525 -7869.2881 8498.3525 -7869.2881 8498.501 c
-7869.2881 8498.8174 -7870.0474 8499.0068 -7870.1318 8499.0283 c
-7870.3423 8499.0908 -7870.5103 8499.3232 -7870.5103 8499.5342 c
-7870.5103 8500.0195 -7870.2378 8500.04 -7869.8774 8500.04 c
-7869.5215 8500.04 -7868.8042 8499.6816 -7868.8042 8498.4805 c
-7868.8042 8497.4893 -7869.9424 8496.3291 -7870.4058 8496.0977 c
-7870.7007 8495.9277 -7871.5874 8495.9502 -7871.9458 8495.9072 c
-7872.6406 8495.8223 -7874.4121 8494.875 -7874.4121 8492.3857 c
-7874.4336 8490.9727 -7873.1265 8489.6455 -7872.8511 8489.4561 c
-7872.6826 8489.3486 -7872.5986 8489.2227 -7872.5986 8489.0537 c
-7872.5986 8488.8428 -7872.6626 8485.9121 -7872.9995 8485.9121 c
-7873.4424 8485.9121 -7873.5054 8485.9121 -7873.5054 8486.1035 c
-7873.21 8487.1982 -7873.21 8487.4307 v
-7873.21 8487.7471 -7873.4424 8489.2227 -7874.3066 8489.2227 c
-7874.5806 8489.2227 -7875.0449 8488.9902 -7875.0449 8488.6748 c
-7875.0449 8488.3799 -7874.3486 8487.1777 -7874.3486 8486.9033 c
-7874.3486 8486.418 -7874.3921 8486.3975 -7875.0654 8485.7861 c
-7875.2559 8485.6387 -7875.3193 8485.5127 -7875.3193 8485.3213 c
-7875.3193 8485.1533 -7875.2134 8485.0254 -7875.0449 8485.0254 c
-7874.8975 8485.0254 -7874.3281 8485.3018 -7874.2017 8485.3213 c
-7874.0752 8485.3213 -7873.8433 8485.3428 -7873.6538 8485.3428 c
-7873.2734 8485.3428 -7873.0845 8485.2158 -7873.0845 8485.0898 c
-7873.0845 8484.8574 -7873.0845 8484.1836 -7873.9263 8482.7275 c
-7874.1167 8482.3906 -7875.2974 8481.0625 -7875.2974 8480.7246 c
-7875.2974 8480.5557 -7875.2134 8480.5361 -7875.1089 8480.5361 c
-7874.9185 8480.5361 -7874.4966 8480.957 -7874.3706 8481.1045 c
-7873.1265 8482.4326 -7872.3042 8483.8662 -7871.9238 8485.1318 c
-7871.8398 8485.4482 -7871.7344 8485.3643 -7871.5654 8485.3857 c
-7869.4155 8485.8916 -7867.3271 8488.4004 -7867.3271 8488.4219 c
-7867.4326 8488.6953 -7867.4326 8488.7588 v
-7867.4326 8488.8857 -7867.3271 8488.9072 -7867.3057 8488.9072 c
-7867.2432 8488.9072 -7867.0527 8488.6953 -7867.0103 8488.6953 c
-7866.9058 8488.6953 -7866.7783 8488.7803 -7866.7783 8488.9277 C
-7866.8418 8489.4756 l
f
0 D
-7870.1104 8487.9795 m
-7869.5215 8487.9795 -7869.0986 8488.085 -7868.6982 8488.3584 c
-7868.6553 8488.3799 -7868.6138 8488.4004 -7868.5928 8488.4004 c
-7868.5498 8488.4004 -7868.5498 8488.3799 -7868.5498 8488.3369 c
-7868.5498 8487.916 -7870.4272 8485.9561 -7871.5654 8485.9561 c
-7871.6289 8485.9561 -7871.6714 8485.9971 -7871.6714 8486.0596 c
-7871.6714 8486.25 -7871.5874 8488.2529 -7871.2495 8488.2529 c
-7871.1865 8488.2529 -7871.1016 8488.2314 -7871.0386 8488.1904 c
-7870.7007 8488.042 -7870.4902 8487.9795 -7870.1104 8487.9795 c
f
-7869.5835 8490.7412 m
-7869.5835 8490.3193 -7869.5625 8489.8555 -7868.8662 8489.8555 c
-7868.2334 8489.8555 -7867.6431 8490.5098 -7867.4961 8490.6572 c
-7867.4326 8490.6992 -7867.3906 8490.7197 -7867.3486 8490.7197 c
-7867.3271 8490.7197 -7867.2847 8490.6777 -7867.2847 8490.6357 c
-7867.2847 8490.1924 -7868.6553 8488.5273 -7870.0049 8488.5273 c
-7870.2578 8488.5273 -7871.2705 8488.6953 -7871.2705 8489.2441 c
-7871.2705 8489.4971 -7870.8906 8490.8682 -7870.2793 8491.9434 c
-7868.9087 8494.4316 -7864.7119 8495.9902 -7862.8145 8495.9902 c
-7861.9072 8496.0127 -7861.6118 8495.6963 -7861.4863 8495.6748 c
-7861.4648 8495.6748 -7861.4438 8495.6543 -7861.4233 8495.6543 c
-7861.3174 8495.6543 -7861.1904 8495.7178 -7861.1904 8495.8652 c
-7861.1904 8495.8867 -7861.2119 8495.8867 v
-7861.3594 8497.0244 -7861.4014 8497.4258 -7861.4014 8498.6895 c
-7861.4014 8500.083 -7861.4014 8500.209 -7860.4321 8500.209 c
-7859.1455 8500.209 -7858.8506 8499.1338 -7858.8506 8498.9014 c
-7858.8506 8498.4805 -7859.4399 8498.1846 -7859.5889 8498.1846 c
-7859.7358 8498.1846 -7859.9058 8498.292 -7859.9058 8498.4805 c
-7859.9058 8498.7754 -7859.9473 8498.9229 -7860.2207 8498.9229 c
-7860.4951 8498.9229 -7860.4951 8498.5645 -7860.4951 8498.458 c
-7860.4951 8498.2061 -7860.3896 8497.9531 -7860.1782 8497.8262 c
-7859.7998 8497.5732 -7859.7998 8497.1729 -7859.7998 8496.9619 c
-7859.7998 8496.8564 -7859.7998 8496.7295 -7859.8198 8496.624 c
-7859.8418 8496.4561 -7861.7817 8494.4102 -7862.0977 8494.4102 c
-7862.2446 8494.4102 -7862.5615 8494.5566 -7863.4258 8494.5566 c
-7865.5767 8494.5566 -7866.5474 8492.8291 -7866.7378 8492.3018 c
-7866.9897 8491.585 -7867.7915 8491.2891 -7868.0225 8491.2891 c
-7868.2129 8491.2891 -7868.2129 8491.332 -7868.2129 8491.7324 c
-7868.2129 8491.8174 -7868.4238 8492.1533 y
-7868.4238 8492.3438 -7867.3906 8492.5967 -7867.3906 8492.7861 c
-7867.3906 8492.9561 -7867.5801 8492.9756 -7867.7271 8492.9756 c
-7867.8115 8492.9756 -7868.8882 8492.9756 -7869.3306 8492.1533 c
-7869.5415 8491.7529 -7869.5835 8491.1846 -7869.5835 8490.7412 c
f
1 D
-7865.4927 8488.4854 m
-7865.4927 8488.4414 -7865.5137 8488.4219 -7865.5352 8488.4219 c
-7865.5986 8488.4219 -7865.7666 8488.7588 -7865.8506 8488.7588 c
-7865.9146 8488.7588 -7865.9995 8488.6748 -7866.0415 8488.5684 c
-7866.0615 8488.4854 -7866.1255 8488.0205 -7866.21 8488.0205 c
-7866.2524 8488.0205 -7866.4209 8488.2529 -7866.4634 8488.2529 c
-7866.6104 8488.2529 -7866.7158 8488.0205 -7866.7158 8487.8115 c
-7866.7158 8487.7051 -7866.7783 8487.7051 -7866.9263 8487.7051 c
-7867.5166 8487.7051 -7869.1406 8485.5332 -7869.5625 8483.7822 c
-7869.6055 8483.6143 -7869.5835 8483.4668 -7869.8994 8483.3604 c
-7872.0713 8482.624 -7874.5176 8480.4717 -7874.5176 8480.3457 c
-7874.5176 8480.1982 -7874.4336 8480.1143 -7874.3066 8480.1143 c
-7874.2432 8480.1143 -7874.1592 8480.1143 -7873.6538 8480.4502 c
-7872.7681 8481.041 -7870.7217 8482.3281 -7869.8994 8482.3281 c
-7869.6265 8482.3281 -7869.6055 8481.9697 -7869.6055 8481.7158 c
-7869.6055 8481.5254 -7869.6265 8481.2939 -7869.6265 8481.1475 c
-7869.6465 8480.873 -7869.9634 8480.5557 -7869.9634 8480.3877 c
-7869.9634 8480.2402 -7869.8154 8480.1348 -7869.6465 8480.1348 c
-7869.4575 8480.1348 -7869.3306 8480.1563 -7869.1606 8480.3457 c
-7868.8662 8480.6826 -7868.7402 8480.8311 -7868.4238 8480.8311 c
-7868.1914 8480.8311 -7867.1377 8480.1143 -7866.8838 8480.1143 c
-7866.5679 8480.1143 -7866.1895 8480.5986 -7866.1895 8480.8945 c
-7866.1895 8481.6318 -7867.0942 8482.2227 -7867.6431 8482.2227 c
-7868.0225 8482.2227 -7868.4438 8482.0967 -7868.6353 8481.8643 c
-7868.6982 8481.7998 -7868.7607 8481.7588 -7868.8242 8481.7588 c
-7868.9937 8481.7588 -7869.1191 8482.2227 -7869.1191 8482.2646 c
-7869.1191 8482.6875 -7866.2729 8482.749 -7865.9146 8482.749 c
-7865.7666 8482.749 -7865.6401 8482.665 -7865.5352 8482.4961 c
-7865.3447 8482.2021 -7864.1855 8480.9795 -7862.6255 8480.9795 c
-7860.79 8480.9795 -7859.0825 8482.2422 -7859.0825 8484.1406 c
-7859.0825 8484.2471 -7859.1245 8484.7939 -7859.1245 8484.8164 c
-7859.1245 8484.8799 -7858.0063 8486.6289 -7856.6782 8486.6289 c
-7855.6245 8486.6289 -7855.2656 8486.04 -7855.2656 8485.5537 c
-7855.2656 8485.3213 -7855.3711 8484.6689 -7855.8984 8484.6689 c
-7856.1094 8484.6689 -7856.2144 8484.8799 -7856.2144 8485.2588 c
-7856.2144 8485.3428 -7856.0039 8485.7227 -7856.0039 8485.8281 c
-7856.0039 8485.8701 -7856.0239 8485.8916 -7856.0879 8485.8916 c
-7856.4258 8485.8916 -7856.9521 8485.5332 -7857.1846 8484.8799 c
-7857.4595 8484.1631 -7857.8594 8483.4668 -7858.1958 8483.0654 c
-7858.5127 8482.708 -7858.6182 8482.1162 -7858.6182 8481.7793 c
-7858.6182 8481.2939 -7858.1338 8480.1348 -7856.4878 8480.1348 c
-7855.2871 8480.1348 -7854.4434 8480.873 -7854.4434 8481.4844 c
-7854.4434 8482.0967 -7854.7598 8482.4756 -7855.2026 8482.4756 c
-7855.6455 8482.4756 -7855.9824 8482.1377 -7855.9824 8481.7998 c
-7855.9824 8481.126 -7856.1514 8480.9795 -7856.4878 8480.9795 c
-7856.6992 8480.9795 -7856.8896 8481.1045 -7856.8896 8481.4209 c
-7856.8896 8481.6533 -7856.8896 8482.0322 -7855.3711 8483.2979 c
-7854.8857 8483.6982 -7854.4214 8484.3955 -7854.4214 8485.1748 c
-7854.4214 8485.9346 -7855.4561 8487.1348 -7856.6362 8487.1348 c
-7857.8594 8487.1348 -7858.6401 8486.3555 -7859.2515 8485.6387 c
-7859.5454 8485.3018 -7860.9814 8483.6143 -7861.0439 8483.5918 c
-7861.2334 8483.4443 -7861.3174 8483.3193 -7861.3174 8483.1924 c
-7861.3174 8483.0869 -7861.2119 8482.9814 -7861.0854 8482.9814 c
-7860.8535 8482.9814 -7859.9058 8483.9307 -7859.8198 8483.9307 c
-7859.7568 8483.9307 -7859.7153 8483.8662 -7859.7153 8483.7822 c
-7859.7153 8483.0234 -7860.8535 8481.5479 -7862.6255 8481.5479 c
-7864.1006 8481.5479 -7864.9863 8482.665 -7864.9863 8482.708 c
-7864.9863 8482.834 -7864.8394 8482.959 -7864.5225 8483.0234 c
-7860.6426 8483.7617 -7857.3955 8487.3115 -7857.3955 8491.9277 c
-7857.3955 8492.0342 -7857.2256 8492.0605 -7857.0786 8492.0605 c
-7856.7202 8492.0605 -7856.0879 8492.1396 -7856.0879 8491.8662 c
-7856.0879 8491.7598 -7856.1294 8491.6338 -7856.1934 8491.5068 c
-7856.5518 8490.9365 -7856.8682 8490.7627 -7856.8682 8489.8115 c
-7856.8682 8489.3486 -7856.4878 8488.8223 -7855.8984 8488.8223 c
-7854.8657 8488.8223 -7854.4214 8489.8555 -7854.4214 8490.0869 c
-7854.4214 8490.2559 -7854.5073 8490.3193 -7854.5903 8490.3193 c
-7854.7178 8490.3193 -7855.2241 8489.792 -7855.3711 8489.792 c
-7855.5615 8489.792 -7855.7085 8489.834 -7855.7085 8490.3193 c
-7855.7085 8490.6572 -7854.4214 8494.3682 -7854.4214 8495.1689 c
-7854.4214 8495.7393 -7854.7598 8496.4355 -7855.6455 8496.9404 c
-7855.6875 8496.9619 -7855.7085 8496.9824 -7855.7085 8497.0244 c
-7855.7085 8497.1084 -7855.5615 8497.2148 -7855.4126 8497.2559 c
-7854.8018 8497.4258 -7854.4214 8497.5313 -7854.4214 8498.4805 c
-7854.4214 8498.8389 -7854.7598 8499.5137 -7855.0127 8499.5137 c
-7855.2026 8499.5137 -7855.2026 8499.4707 -7855.2026 8499.1123 c
-7855.2026 8498.9648 -7855.2446 8498.8594 -7855.3926 8498.7539 c
-7855.7085 8498.543 -7855.7295 8498.501 -7855.8135 8498.0166 c
-7855.8774 8497.7002 -7856.0039 8497.6143 -7857.1426 8496.9824 c
-7857.5854 8496.709 -7857.6904 8496.4766 -7857.7744 8496.2451 c
-7857.8594 8496.0537 -7857.9233 8496.0537 -7858.4287 8496.0537 c
-7858.9561 8496.0537 -7861.5073 8493.335 -7861.5073 8493.208 c
-7861.5073 8493.1455 -7861.3809 8492.8496 -7861.3809 8492.7861 c
-7861.3809 8492.7236 -7861.4014 8492.6816 -7861.4438 8492.6816 c
-7861.4863 8492.6816 -7861.6338 8492.8916 -7861.6758 8492.8916 c
-7861.7817 8492.8916 -7861.7817 8492.7021 -7861.7817 8492.5537 c
-7861.7817 8492.4502 -7861.5703 8491.8799 -7861.5703 8491.7324 c
-7861.5703 8491.6484 -7861.5918 8491.585 -7861.6338 8491.585 c
-7861.7178 8491.585 -7861.9072 8492.0479 -7861.9922 8492.0479 c
-7862.0342 8492.0479 -7862.0762 8492.0068 -7862.0762 8491.8799 c
-7862.0762 8491.7324 -7861.8862 8491.0156 y
-7861.8862 8490.9521 -7861.9072 8490.8467 -7861.9502 8490.8467 c
-7862.0342 8490.8467 -7862.1826 8491.2471 -7862.2666 8491.2471 c
-7862.3286 8491.2471 -7862.3926 8491.1631 -7862.3926 8491.0156 c
-7862.3926 8490.9307 -7862.2446 8490.5098 -7862.2446 8490.4043 c
-7862.2446 8490.3408 -7862.2666 8490.2764 -7862.3086 8490.2764 c
-7862.3506 8490.2764 -7862.5835 8490.8896 -7862.7095 8490.8896 c
-7862.7935 8490.8896 -7862.8994 8490.7822 -7862.8994 8490.6777 c
-7862.8994 8490.5938 -7862.7729 8490.2354 -7862.7729 8490.1514 c
-7862.7729 8490.1084 -7862.7729 8490.0869 -7862.7935 8490.0869 c
-7862.8774 8490.0869 -7863.0254 8490.5723 -7863.1104 8490.5723 c
-7863.3418 8490.5723 -7863.3623 8490.1514 -7863.3623 8489.9609 c
-7863.3623 8489.877 -7863.2998 8489.54 -7863.2998 8489.4756 c
-7863.2998 8489.4131 -7863.3198 8489.3916 -7863.3418 8489.3916 c
-7863.4897 8489.3916 -7863.6782 8490.1924 -7863.8271 8490.1924 c
-7864.0386 8490.1924 -7864.0386 8490.0029 -7864.0386 8489.7715 c
-7864.0166 8489.2441 L
-7864.0166 8489.2227 -7864.0386 8489.2021 y
-7864.0586 8489.2021 -7864.1006 8489.2227 -7864.1226 8489.2861 c
-7864.1855 8489.4971 -7864.3115 8489.9189 -7864.5225 8489.9189 c
-7864.6694 8489.9189 -7864.8174 8489.75 -7864.8174 8489.6035 c
-7864.8174 8489.3701 -7864.7119 8488.9902 -7864.7119 8488.7588 c
-7864.7119 8488.6953 -7864.7334 8488.6748 -7864.7754 8488.6748 c
-7864.8608 8488.6748 -7864.9863 8489.1162 -7865.0278 8489.2021 c
-7865.0918 8489.2861 -7865.1553 8489.3076 -7865.2192 8489.3076 c
-7865.5352 8489.3076 -7865.5352 8488.9902 -7865.5352 8488.8428 C
-7865.4927 8488.4854 l
f
0 D
-7866.8633 8484.1201 m
-7866.8633 8483.8877 -7868.8042 8483.6982 -7868.8662 8483.6982 c
-7868.9722 8483.6982 -7869.0352 8483.7617 -7869.0352 8483.8662 c
-7869.0352 8484.7314 -7867.2847 8486.9668 -7866.8633 8486.9668 c
-7866.7998 8486.9668 -7866.7783 8486.9463 -7866.7783 8486.8828 c
-7867.2002 8485.6387 -7867.2002 8485.3857 v
-7867.2002 8485.0059 -7867.0942 8484.7529 -7866.9058 8484.3311 c
-7866.8838 8484.2471 -7866.8633 8484.1836 -7866.8633 8484.1201 c
f
-7858.1338 8495.5693 m
-7857.9858 8495.5693 -7857.4795 8495.0645 -7857.3325 8495.0645 c
-7857.2065 8495.0645 -7857.0791 8495.1484 -7857.0791 8495.2959 c
-7857.0791 8495.3799 -7857.2695 8495.8223 -7857.2695 8495.9277 c
-7857.2695 8496.2861 -7856.8896 8496.583 -7856.5098 8496.583 c
-7856.1094 8496.583 -7854.9702 8496.2656 -7854.9702 8495.042 c
-7854.9702 8493.9463 -7855.3926 8493.9463 -7857.0366 8493.9463 c
-7857.3955 8493.9463 -7859.0615 8494.1357 -7859.3145 8494.1357 c
-7859.4399 8494.1357 -7859.4834 8493.9668 -7859.4834 8493.8398 c
-7859.4834 8493.7988 -7859.4834 8493.7568 -7859.4614 8493.7354 c
-7859.3984 8493.3564 -7859.1675 8492.8076 -7859.1675 8492.4277 c
-7859.1675 8487.9795 -7863.2998 8484.1201 -7865.7666 8484.1201 c
-7866.4209 8484.1201 -7866.6519 8484.9219 -7866.6519 8485.3428 c
-7866.6519 8487.0723 -7864.6694 8488.1045 -7864.4175 8488.1045 c
-7864.3545 8488.1045 -7864.3335 8488.085 -7864.3335 8488.042 c
-7864.3335 8488 -7864.3545 8487.958 -7864.3975 8487.916 c
-7864.5225 8487.7471 -7865.0498 8487.1348 -7865.0498 8486.5029 c
-7865.0498 8486.165 -7864.7554 8485.7227 -7863.9951 8485.7227 c
-7862.7305 8485.7227 -7862.1826 8487.0723 -7862.1826 8487.4307 c
-7862.1826 8487.5791 -7862.2446 8487.7891 -7862.4561 8487.7891 c
-7862.6035 8487.7891 -7863.0049 8487.1348 -7863.1519 8487.1348 c
-7863.2158 8487.1348 -7863.4473 8487.2617 -7863.5103 8487.2617 c
-7863.5942 8487.2617 -7863.6582 8487.2412 -7863.7422 8487.2412 c
-7863.8057 8487.2412 -7863.8481 8487.3037 -7863.8481 8487.4092 c
-7863.8481 8487.7686 -7863.3623 8488.3369 -7862.8774 8488.5908 c
-7861.9722 8489.0537 -7860.6226 8490.3828 -7860.6226 8491.8379 c
-7860.6226 8492.2588 -7860.6846 8492.6602 -7860.6846 8492.9971 c
-7860.6846 8493.5459 -7859.7568 8494.4102 -7858.8081 8495.2959 c
-7858.6401 8495.4434 -7858.3862 8495.5693 -7858.1338 8495.5693 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9722 8505.29 m
-7849.9722 8479.2627 L
-7876 8479.2627 L
-7876 8505.29 L
-7849.9722 8505.29 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7858.6455 8492.2793 m
-7849.9736 8492.2793 l
S
-7862.9839 8505.29 m
-7862.9839 8496.6143 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7858.7202 8487.9404 m
-7849.9727 8487.9404 l
S
-7867.3232 8505.29 m
-7867.3232 8495.9355 l
S
0.7084 0.636438 0.515526 0.381872 K
-7858.6504 8505.29 m
-7858.6504 8502.877 l
-7855.9937 8502.6533 -7854.3096 8500.9502 v
-7852.6064 8499.2236 -7852.3774 8496.6182 y
-7849.9727 8496.6182 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7866.7783 8488.9277 m
-7866.7783 8488.7803 -7866.9058 8488.6953 -7867.0103 8488.6953 c
-7867.0527 8488.6953 -7867.2432 8488.9072 -7867.3057 8488.9072 c
-7867.3271 8488.9072 -7867.4326 8488.8857 -7867.4326 8488.7588 c
-7867.4326 8488.6953 -7867.3271 8488.4219 y
-7867.3271 8488.4004 -7869.4155 8485.8916 -7871.5654 8485.3857 c
-7871.7344 8485.3643 -7871.8398 8485.4482 -7871.9238 8485.1318 c
-7872.3042 8483.8662 -7873.1265 8482.4326 -7874.3706 8481.1045 c
-7874.4966 8480.958 -7874.9185 8480.5361 -7875.1089 8480.5361 c
-7875.2134 8480.5361 -7875.2974 8480.5557 -7875.2974 8480.7246 c
-7875.2974 8481.0625 -7874.1167 8482.3906 -7873.9263 8482.7275 c
-7873.0845 8484.1836 -7873.0845 8484.8574 -7873.0845 8485.0898 c
-7873.0845 8485.2158 -7873.2734 8485.3428 -7873.6538 8485.3428 c
-7873.8433 8485.3428 -7874.0752 8485.3213 -7874.2017 8485.3213 c
-7874.3281 8485.3018 -7874.8975 8485.0254 -7875.0449 8485.0254 c
-7875.2134 8485.0254 -7875.3193 8485.1533 -7875.3193 8485.3213 c
-7875.3193 8485.5127 -7875.2559 8485.6387 -7875.0654 8485.7861 c
-7874.3921 8486.3975 -7874.3486 8486.418 -7874.3486 8486.9033 c
-7874.3486 8487.1777 -7875.0449 8488.3799 -7875.0449 8488.6748 c
-7875.0449 8488.9902 -7874.5806 8489.2227 -7874.3066 8489.2227 c
-7873.4424 8489.2227 -7873.21 8487.7471 -7873.21 8487.4307 c
-7873.21 8487.1982 -7873.5054 8486.1035 y
-7873.5054 8485.9121 -7873.4424 8485.9121 -7872.9995 8485.9121 c
-7872.6626 8485.9121 -7872.5986 8488.8428 -7872.5986 8489.0537 c
-7872.5986 8489.2227 -7872.6826 8489.3486 -7872.8511 8489.4561 c
-7873.1265 8489.6455 -7874.4336 8490.9727 -7874.4121 8492.3857 c
-7874.4121 8494.875 -7872.6406 8495.8223 -7871.9458 8495.9072 c
-7871.5874 8495.9502 -7870.7007 8495.9277 -7870.4058 8496.0977 c
-7869.9424 8496.3291 -7868.8042 8497.4893 -7868.8042 8498.4805 c
-7868.8042 8499.6816 -7869.5215 8500.04 -7869.8774 8500.04 c
-7870.2378 8500.04 -7870.5103 8500.0195 -7870.5103 8499.5342 c
-7870.5103 8499.3232 -7870.3423 8499.0908 -7870.1318 8499.0283 c
-7870.0474 8499.0068 -7869.2881 8498.8174 -7869.2881 8498.501 c
-7869.2881 8498.3525 -7869.3721 8498.3525 -7869.5835 8498.3525 c
-7870.1318 8498.3525 -7870.8066 8498.1436 -7872.0928 8496.9404 c
-7872.4722 8496.6035 -7873.1265 8496.5195 -7873.5679 8496.5195 c
-7874.0537 8496.5195 -7875.2974 8496.9824 -7875.2974 8498.4805 c
-7875.2974 8500.3135 -7874.4751 8501.0107 -7873.8433 8501.0107 c
-7873.4209 8501.0107 -7872.8936 8500.6934 -7872.8936 8500.4189 c
-7872.8936 8500.083 -7872.9575 8499.6611 -7873.5479 8499.6182 c
-7874.0537 8499.5762 -7874.3066 8499.3438 -7874.3066 8499.0068 c
-7874.3066 8498.7959 -7874.1592 8498.585 -7873.8218 8498.585 c
-7873.3154 8498.585 -7872.7041 8499.1553 -7872.0713 8499.8926 c
-7871.6714 8500.3779 -7870.7007 8500.9053 -7869.9209 8500.9053 c
-7869.1191 8500.9053 -7868.0654 8499.999 -7868.0654 8498.627 c
-7868.0654 8497.3623 -7869.4995 8496.0537 -7870.2378 8495.5283 c
-7870.9546 8495.001 -7871.3335 8494.6211 -7871.46 8494.4102 c
-7871.5654 8494.2627 -7871.9033 8493.3135 -7872.1143 8493.3135 c
-7872.2607 8493.3135 -7872.3672 8493.4814 -7872.3672 8493.6934 c
-7872.3672 8494.0098 -7872.1143 8494.6436 -7871.7759 8494.9795 c
-7871.6929 8495.085 -7871.6494 8495.1484 -7871.6494 8495.2109 c
-7871.6494 8495.3594 -7871.8398 8495.3799 -7871.9873 8495.3799 c
-7872.5767 8495.3799 -7873.7793 8494.4102 -7873.7793 8492.5762 c
-7873.7793 8490.9941 -7872.7881 8490.1514 -7872.6406 8490.1514 c
-7872.5361 8490.1514 -7872.4297 8490.2559 -7872.3672 8490.4678 c
-7870.6592 8496.624 -7865.7822 8497.8477 -7863.3774 8497.8477 c
-7863.2729 8497.8477 -7863.1895 8497.9102 -7863.1895 8498.0596 c
-7863.1895 8498.1846 -7863.1895 8499.2822 -7863.3359 8499.2822 c
-7863.3774 8499.2822 -7863.4414 8499.2598 -7863.5264 8499.1973 c
-7864.0942 8498.7334 -7864.3755 8498.375 -7865.3022 8498.375 c
-7865.7666 8498.375 -7866.5679 8498.9014 -7866.5679 8499.5137 c
-7866.5679 8500.293 -7865.8936 8501.0107 -7865.4082 8501.0107 c
-7865.0498 8501.0107 -7864.9023 8500.9258 -7864.9023 8500.7998 c
-7864.9023 8500.6719 -7865.3662 8500.2305 -7865.3662 8500.083 c
-7865.3662 8499.8291 -7865.3242 8499.6816 -7864.8809 8499.6816 c
-7864.4814 8499.6816 -7863.7842 8499.8516 -7863.3418 8500.1045 c
-7862.8774 8500.3779 -7861.7393 8501.0107 -7860.7065 8501.0107 c
-7859.9473 8501.0107 -7858.9561 8500.5674 -7858.4702 8499.7666 c
-7858.4287 8499.7021 -7858.3862 8499.6816 -7858.3447 8499.6816 c
-7858.2393 8499.6816 -7858.1543 8499.7666 -7858.1338 8499.915 c
-7858.0913 8500.3135 -7857.7534 8501.0107 -7856.9312 8501.0107 c
-7856.3408 8501.0107 -7855.8135 8500.5039 -7855.8135 8500.0605 c
-7855.8135 8499.8926 -7855.9194 8499.8291 -7856.0239 8499.8291 c
-7856.1094 8499.8291 -7856.4878 8500.083 -7856.5942 8500.083 c
-7856.7407 8500.083 -7857.6479 8499.4707 -7857.7334 8499.3232 c
-7858.5127 8498.0371 -7858.5977 8497.8896 -7859.2295 8497.6357 c
-7859.3984 8497.5518 -7859.3984 8497.4678 -7859.3984 8496.6035 c
-7859.3984 8496.4766 -7859.3984 8496.1807 -7859.5454 8496.0127 c
-7859.8198 8495.7393 -7861.9287 8493.6719 -7862.1392 8493.6719 c
-7862.2241 8493.6719 -7862.4985 8493.9463 -7862.5835 8493.9463 c
-7862.6035 8493.9463 -7862.6255 8493.9463 -7862.6255 8493.9043 C
-7862.6035 8493.7568 l
-7862.6035 8493.5889 -7862.6455 8493.5029 -7862.8564 8493.5029 c
-7862.9199 8493.5029 -7863.1943 8493.6299 -7863.2568 8493.6299 c
-7863.3198 8493.6299 -7863.3623 8493.1875 -7863.4473 8493.1875 c
-7863.4678 8493.1875 -7863.8057 8493.4189 -7863.8896 8493.4189 c
-7864.0166 8493.4189 -7864.1006 8493.335 -7864.1006 8493.2295 c
-7864.1006 8493.167 -7864.1006 8492.6816 -7864.2065 8492.6816 c
-7864.2915 8492.6816 -7864.5225 8492.9756 -7864.5654 8492.9756 c
-7864.5854 8492.9756 -7864.5854 8492.9561 -7864.5854 8492.8916 C
-7864.5439 8492.4707 l
-7864.5439 8492.4063 -7864.5854 8492.3857 -7864.6494 8492.3857 c
-7864.7119 8492.3857 -7864.9658 8492.7021 -7865.0498 8492.7021 c
-7865.0918 8492.7021 -7865.1138 8492.6602 -7865.1138 8492.5762 c
-7865.1138 8492.5342 -7864.9233 8491.8174 -7864.9233 8491.6689 c
-7864.9233 8491.585 -7864.9658 8491.542 -7865.0078 8491.542 c
-7865.0918 8491.542 -7865.4297 8491.9014 -7865.4722 8491.9014 c
-7865.4927 8491.9014 -7865.4927 8491.9014 -7865.4927 8491.8799 c
-7865.4927 8491.7959 -7865.3882 8491.4365 -7865.3882 8491.417 c
-7865.3882 8491.3955 -7865.4082 8491.374 -7865.4297 8491.374 c
-7865.4722 8491.374 -7865.6826 8491.585 -7865.7446 8491.585 c
-7865.7666 8491.585 -7865.7666 8491.585 -7865.7666 8491.542 c
-7865.7666 8491.374 -7865.5137 8490.6357 -7865.5137 8490.5723 c
-7865.5137 8490.5508 -7865.5352 8490.5303 -7865.5562 8490.5303 c
-7865.6826 8490.5303 -7866.1055 8491.1006 -7866.1465 8491.1006 c
-7866.1675 8491.1006 -7866.1675 8491.0791 -7866.1675 8491.0156 c
-7866.1675 8490.8252 -7865.8936 8489.9189 y
-7865.8936 8489.8975 -7865.9146 8489.877 -7865.9351 8489.877 c
-7866.0615 8489.877 -7866.4414 8490.4238 -7866.5049 8490.4238 c
-7866.5264 8490.4238 -7866.5264 8490.4238 -7866.5264 8490.3828 c
-7866.2729 8489.4756 -7866.2729 8489.3916 v
-7866.2729 8489.2861 -7866.3154 8489.2441 -7866.3994 8489.2441 c
-7866.4634 8489.2441 -7866.6943 8489.5811 -7866.7783 8489.5811 c
-7866.8218 8489.5811 -7866.8418 8489.54 -7866.8418 8489.4756 c
-7866.7783 8488.9277 L
f
1 D
-7871.0386 8488.1904 m
-7871.1016 8488.2314 -7871.1865 8488.2529 -7871.2495 8488.2529 c
-7871.5874 8488.2529 -7871.6714 8486.25 -7871.6714 8486.0596 c
-7871.6714 8485.9971 -7871.6289 8485.9561 -7871.5654 8485.9561 c
-7870.4272 8485.9561 -7868.5498 8487.917 -7868.5498 8488.3369 c
-7868.5498 8488.3799 -7868.5498 8488.4004 -7868.5928 8488.4004 c
-7868.6138 8488.4004 -7868.6553 8488.3799 -7868.6982 8488.3584 c
-7869.0986 8488.085 -7869.5215 8487.9795 -7870.1104 8487.9795 c
-7870.4902 8487.9795 -7870.7007 8488.042 -7871.0386 8488.1904 c
f
-7869.3306 8492.1533 m
-7868.8882 8492.9756 -7867.8115 8492.9756 -7867.7271 8492.9756 c
-7867.5801 8492.9756 -7867.3906 8492.9561 -7867.3906 8492.7861 c
-7867.3906 8492.5967 -7868.4238 8492.3438 -7868.4238 8492.1533 c
-7868.2129 8491.8174 -7868.2129 8491.7324 v
-7868.2129 8491.333 -7868.2129 8491.29 -7868.0225 8491.29 c
-7867.7915 8491.29 -7866.9897 8491.585 -7866.7378 8492.3018 c
-7866.5474 8492.8291 -7865.5767 8494.5566 -7863.4258 8494.5566 c
-7862.5615 8494.5566 -7862.2446 8494.4102 -7862.0977 8494.4102 c
-7861.7817 8494.4102 -7859.8418 8496.4561 -7859.8198 8496.624 c
-7859.7998 8496.7295 -7859.7998 8496.8564 -7859.7998 8496.9619 c
-7859.7998 8497.1729 -7859.7998 8497.5732 -7860.1782 8497.8262 c
-7860.3896 8497.9531 -7860.4951 8498.2061 -7860.4951 8498.458 c
-7860.4951 8498.5645 -7860.4951 8498.9229 -7860.2207 8498.9229 c
-7859.9473 8498.9229 -7859.9058 8498.7754 -7859.9058 8498.4805 c
-7859.9058 8498.292 -7859.7358 8498.1846 -7859.5889 8498.1846 c
-7859.4399 8498.1846 -7858.8506 8498.4805 -7858.8506 8498.9014 c
-7858.8506 8499.1338 -7859.1455 8500.209 -7860.4321 8500.209 c
-7861.4014 8500.209 -7861.4014 8500.083 -7861.4014 8498.6895 c
-7861.4014 8497.4258 -7861.3594 8497.0244 -7861.2119 8495.8867 c
-7861.1904 8495.8867 -7861.1904 8495.8652 y
-7861.1904 8495.7178 -7861.3174 8495.6543 -7861.4233 8495.6543 c
-7861.4438 8495.6543 -7861.4648 8495.6748 -7861.4863 8495.6748 c
-7861.6118 8495.6963 -7861.9072 8496.0127 -7862.8145 8495.9902 c
-7864.7119 8495.9902 -7868.9087 8494.4316 -7870.2793 8491.9434 c
-7870.8906 8490.8682 -7871.2705 8489.4971 -7871.2705 8489.2441 c
-7871.2705 8488.6953 -7870.2578 8488.5273 -7870.0049 8488.5273 c
-7868.6553 8488.5273 -7867.2847 8490.1924 -7867.2847 8490.6357 c
-7867.2847 8490.6777 -7867.3271 8490.7197 -7867.3486 8490.7197 c
-7867.3906 8490.7197 -7867.4326 8490.6992 -7867.4961 8490.6572 c
-7867.6431 8490.5098 -7868.2334 8489.8555 -7868.8662 8489.8555 c
-7869.5625 8489.8555 -7869.5835 8490.3193 -7869.5835 8490.7412 c
-7869.5835 8491.1846 -7869.5415 8491.7529 -7869.3306 8492.1533 c
f
0 D
-7865.5352 8488.8428 m
-7865.5352 8488.9902 -7865.5352 8489.3076 -7865.2192 8489.3076 c
-7865.1553 8489.3076 -7865.0918 8489.2861 -7865.0278 8489.2021 c
-7864.9863 8489.1162 -7864.8608 8488.6748 -7864.7754 8488.6748 c
-7864.7334 8488.6748 -7864.7119 8488.6953 -7864.7119 8488.7588 c
-7864.7119 8488.9902 -7864.8174 8489.3701 -7864.8174 8489.6035 c
-7864.8174 8489.75 -7864.6694 8489.9189 -7864.5225 8489.9189 c
-7864.3115 8489.9189 -7864.1855 8489.4971 -7864.1226 8489.2861 c
-7864.1006 8489.2227 -7864.0586 8489.2021 -7864.0386 8489.2021 c
-7864.0166 8489.2227 -7864.0166 8489.2441 V
-7864.0386 8489.7715 l
-7864.0386 8490.0029 -7864.0386 8490.1924 -7863.8271 8490.1924 c
-7863.6782 8490.1924 -7863.4897 8489.3916 -7863.3418 8489.3916 c
-7863.3198 8489.3916 -7863.2998 8489.4131 -7863.2998 8489.4756 c
-7863.2998 8489.54 -7863.3623 8489.877 -7863.3623 8489.9609 c
-7863.3623 8490.1514 -7863.3418 8490.5723 -7863.1104 8490.5723 c
-7863.0254 8490.5723 -7862.8774 8490.0869 -7862.7935 8490.0869 c
-7862.7729 8490.0869 -7862.7729 8490.1084 -7862.7729 8490.1514 c
-7862.7729 8490.2354 -7862.8994 8490.5938 -7862.8994 8490.6777 c
-7862.8994 8490.7822 -7862.7935 8490.8896 -7862.7095 8490.8896 c
-7862.5835 8490.8896 -7862.3506 8490.2764 -7862.3086 8490.2764 c
-7862.2666 8490.2764 -7862.2446 8490.3408 -7862.2446 8490.4043 c
-7862.2446 8490.5098 -7862.3926 8490.9307 -7862.3926 8491.0156 c
-7862.3926 8491.1631 -7862.3286 8491.2471 -7862.2666 8491.2471 c
-7862.1826 8491.2471 -7862.0342 8490.8467 -7861.9502 8490.8467 c
-7861.9072 8490.8467 -7861.8862 8490.9521 -7861.8862 8491.0156 c
-7862.0762 8491.7324 -7862.0762 8491.8799 v
-7862.0762 8492.0068 -7862.0342 8492.0479 -7861.9922 8492.0479 c
-7861.9072 8492.0479 -7861.7178 8491.585 -7861.6338 8491.585 c
-7861.5918 8491.585 -7861.5703 8491.6484 -7861.5703 8491.7324 c
-7861.5703 8491.8799 -7861.7817 8492.4502 -7861.7817 8492.5537 c
-7861.7817 8492.7021 -7861.7817 8492.8916 -7861.6758 8492.8916 c
-7861.6338 8492.8916 -7861.4863 8492.6816 -7861.4438 8492.6816 c
-7861.4014 8492.6816 -7861.3809 8492.7236 -7861.3809 8492.7861 c
-7861.3809 8492.8496 -7861.5073 8493.1455 -7861.5073 8493.208 c
-7861.5073 8493.335 -7858.9561 8496.0537 -7858.4287 8496.0537 c
-7857.9233 8496.0537 -7857.8594 8496.0537 -7857.7744 8496.2451 c
-7857.6904 8496.4766 -7857.5854 8496.709 -7857.1426 8496.9824 c
-7856.0039 8497.6143 -7855.8774 8497.7002 -7855.8135 8498.0166 c
-7855.7295 8498.501 -7855.7085 8498.543 -7855.3926 8498.7539 c
-7855.2446 8498.8594 -7855.2026 8498.9648 -7855.2026 8499.1123 c
-7855.2026 8499.4707 -7855.2026 8499.5137 -7855.0127 8499.5137 c
-7854.7598 8499.5137 -7854.4214 8498.8389 -7854.4214 8498.4805 c
-7854.4214 8497.5313 -7854.8018 8497.4258 -7855.4126 8497.2559 c
-7855.5615 8497.2148 -7855.7085 8497.1084 -7855.7085 8497.0244 c
-7855.7085 8496.9824 -7855.6875 8496.9619 -7855.6455 8496.9404 c
-7854.7598 8496.4355 -7854.4214 8495.7393 -7854.4214 8495.1689 c
-7854.4214 8494.3682 -7855.7085 8490.6572 -7855.7085 8490.3193 c
-7855.7085 8489.834 -7855.5615 8489.792 -7855.3711 8489.792 c
-7855.2241 8489.792 -7854.7178 8490.3193 -7854.5903 8490.3193 c
-7854.5073 8490.3193 -7854.4214 8490.2559 -7854.4214 8490.0869 c
-7854.4214 8489.8555 -7854.8657 8488.8223 -7855.8984 8488.8223 c
-7856.4878 8488.8223 -7856.8682 8489.3486 -7856.8682 8489.8115 c
-7856.8682 8490.7627 -7856.5518 8490.9365 -7856.1934 8491.5068 c
-7856.1294 8491.6338 -7856.0879 8491.7598 -7856.0879 8491.8662 c
-7856.0879 8492.1396 -7856.7202 8492.0605 -7857.0786 8492.0605 c
-7857.2256 8492.0605 -7857.3955 8492.0342 -7857.3955 8491.9277 c
-7857.3955 8487.3115 -7860.6426 8483.7617 -7864.5225 8483.0234 c
-7864.8394 8482.959 -7864.9863 8482.834 -7864.9863 8482.708 c
-7864.9863 8482.665 -7864.1006 8481.5479 -7862.6255 8481.5479 c
-7860.8535 8481.5479 -7859.7153 8483.0234 -7859.7153 8483.7822 c
-7859.7153 8483.8662 -7859.7568 8483.9307 -7859.8198 8483.9307 c
-7859.9058 8483.9307 -7860.8535 8482.9814 -7861.0854 8482.9814 c
-7861.2119 8482.9814 -7861.3174 8483.0869 -7861.3174 8483.1924 c
-7861.3174 8483.3193 -7861.2334 8483.4443 -7861.0439 8483.5918 c
-7860.9814 8483.6143 -7859.5454 8485.3018 -7859.2515 8485.6387 c
-7858.6401 8486.3555 -7857.8594 8487.1348 -7856.6362 8487.1348 c
-7855.4561 8487.1348 -7854.4214 8485.9346 -7854.4214 8485.1748 c
-7854.4214 8484.3955 -7854.8857 8483.6982 -7855.3711 8483.2979 c
-7856.8896 8482.0322 -7856.8896 8481.6533 -7856.8896 8481.4209 c
-7856.8896 8481.1045 -7856.6992 8480.9795 -7856.4878 8480.9795 c
-7856.1514 8480.9795 -7855.9824 8481.126 -7855.9824 8481.7998 c
-7855.9824 8482.1377 -7855.6455 8482.4756 -7855.2026 8482.4756 c
-7854.7598 8482.4756 -7854.4434 8482.0967 -7854.4434 8481.4844 c
-7854.4434 8480.874 -7855.2871 8480.1348 -7856.4878 8480.1348 c
-7858.1338 8480.1348 -7858.6182 8481.2939 -7858.6182 8481.7793 c
-7858.6182 8482.1162 -7858.5127 8482.708 -7858.1958 8483.0654 c
-7857.8594 8483.4668 -7857.4595 8484.1631 -7857.1846 8484.8799 c
-7856.9521 8485.5332 -7856.4258 8485.8916 -7856.0879 8485.8916 c
-7856.0239 8485.8916 -7856.0039 8485.8701 -7856.0039 8485.8281 c
-7856.0039 8485.7227 -7856.2144 8485.3428 -7856.2144 8485.2588 c
-7856.2144 8484.8799 -7856.1094 8484.6689 -7855.8984 8484.6689 c
-7855.3711 8484.6689 -7855.2656 8485.3213 -7855.2656 8485.5537 c
-7855.2656 8486.04 -7855.6245 8486.6289 -7856.6782 8486.6289 c
-7858.0063 8486.6289 -7859.1245 8484.8799 -7859.1245 8484.8164 c
-7859.1245 8484.7939 -7859.0825 8484.2471 -7859.0825 8484.1406 c
-7859.0825 8482.2422 -7860.79 8480.9795 -7862.6255 8480.9795 c
-7864.1855 8480.9795 -7865.3447 8482.2021 -7865.5352 8482.4961 c
-7865.6401 8482.665 -7865.7666 8482.749 -7865.9146 8482.749 c
-7866.2729 8482.749 -7869.1191 8482.6875 -7869.1191 8482.2646 c
-7869.1191 8482.2227 -7868.9937 8481.7588 -7868.8242 8481.7588 c
-7868.7607 8481.7588 -7868.6982 8481.7998 -7868.6353 8481.8643 c
-7868.4438 8482.0967 -7868.0225 8482.2227 -7867.6431 8482.2227 c
-7867.0942 8482.2227 -7866.1895 8481.6318 -7866.1895 8480.8945 c
-7866.1895 8480.5986 -7866.5679 8480.1143 -7866.8838 8480.1143 c
-7867.1377 8480.1143 -7868.1914 8480.8311 -7868.4238 8480.8311 c
-7868.7402 8480.8311 -7868.8662 8480.6826 -7869.1606 8480.3457 c
-7869.3306 8480.1563 -7869.4575 8480.1348 -7869.6465 8480.1348 c
-7869.8154 8480.1348 -7869.9634 8480.2402 -7869.9634 8480.3877 c
-7869.9634 8480.5557 -7869.6465 8480.874 -7869.6265 8481.1475 c
-7869.6265 8481.2939 -7869.6055 8481.5254 -7869.6055 8481.7158 c
-7869.6055 8481.9697 -7869.6265 8482.3281 -7869.8994 8482.3281 c
-7870.7217 8482.3281 -7872.7681 8481.042 -7873.6538 8480.4502 c
-7874.1592 8480.1143 -7874.2432 8480.1143 -7874.3066 8480.1143 c
-7874.4336 8480.1143 -7874.5176 8480.1982 -7874.5176 8480.3457 c
-7874.5176 8480.4717 -7872.0713 8482.624 -7869.8994 8483.3604 c
-7869.5835 8483.4668 -7869.6055 8483.6143 -7869.5625 8483.7822 c
-7869.1406 8485.5332 -7867.5166 8487.7061 -7866.9263 8487.7061 c
-7866.7783 8487.7061 -7866.7158 8487.7061 -7866.7158 8487.8115 c
-7866.7158 8488.0205 -7866.6104 8488.2529 -7866.4634 8488.2529 c
-7866.4209 8488.2529 -7866.2524 8488.0205 -7866.21 8488.0205 c
-7866.1255 8488.0205 -7866.0615 8488.4854 -7866.0415 8488.5684 c
-7865.9995 8488.6748 -7865.9146 8488.7588 -7865.8506 8488.7588 c
-7865.7666 8488.7588 -7865.5986 8488.4219 -7865.5352 8488.4219 c
-7865.5137 8488.4219 -7865.4927 8488.4414 -7865.4927 8488.4854 c
-7865.5352 8488.8428 L
f
1 D
-7866.9058 8484.3311 m
-7867.0942 8484.7529 -7867.2002 8485.0059 -7867.2002 8485.3857 c
-7867.2002 8485.6387 -7866.7783 8486.8828 y
-7866.7783 8486.9463 -7866.7998 8486.9668 -7866.8633 8486.9668 c
-7867.2847 8486.9668 -7869.0352 8484.7314 -7869.0352 8483.8662 c
-7869.0352 8483.7617 -7868.9722 8483.6982 -7868.8662 8483.6982 c
-7868.8042 8483.6982 -7866.8633 8483.8877 -7866.8633 8484.1201 c
-7866.8633 8484.1836 -7866.8838 8484.2471 -7866.9058 8484.3311 c
f
-7858.8081 8495.2959 m
-7859.7568 8494.4102 -7860.6846 8493.5459 -7860.6846 8492.9971 c
-7860.6846 8492.6602 -7860.6226 8492.2588 -7860.6226 8491.8379 c
-7860.6226 8490.3828 -7861.9722 8489.0537 -7862.8774 8488.5908 c
-7863.3623 8488.3369 -7863.8481 8487.7686 -7863.8481 8487.4092 c
-7863.8481 8487.3037 -7863.8057 8487.2412 -7863.7422 8487.2412 c
-7863.6582 8487.2412 -7863.5942 8487.2617 -7863.5103 8487.2617 c
-7863.4473 8487.2617 -7863.2158 8487.1348 -7863.1519 8487.1348 c
-7863.0049 8487.1348 -7862.6035 8487.79 -7862.4561 8487.79 c
-7862.2446 8487.79 -7862.1826 8487.5791 -7862.1826 8487.4307 c
-7862.1826 8487.0723 -7862.7305 8485.7227 -7863.9951 8485.7227 c
-7864.7554 8485.7227 -7865.0498 8486.165 -7865.0498 8486.5029 c
-7865.0498 8487.1348 -7864.5225 8487.7471 -7864.3975 8487.917 c
-7864.3545 8487.958 -7864.3335 8488 -7864.3335 8488.042 c
-7864.3335 8488.085 -7864.3545 8488.1045 -7864.4175 8488.1045 c
-7864.6694 8488.1045 -7866.6519 8487.0723 -7866.6519 8485.3428 c
-7866.6519 8484.9219 -7866.4209 8484.1201 -7865.7666 8484.1201 c
-7863.2998 8484.1201 -7859.1675 8487.9795 -7859.1675 8492.4277 c
-7859.1675 8492.8076 -7859.3984 8493.3564 -7859.4614 8493.7354 c
-7859.4834 8493.7568 -7859.4834 8493.7988 -7859.4834 8493.8398 c
-7859.4834 8493.9668 -7859.4399 8494.1357 -7859.3145 8494.1357 c
-7859.0615 8494.1357 -7857.3955 8493.9463 -7857.0366 8493.9463 c
-7855.3926 8493.9463 -7854.9702 8493.9463 -7854.9702 8495.042 c
-7854.9702 8496.2656 -7856.1094 8496.583 -7856.5098 8496.583 c
-7856.8896 8496.583 -7857.2695 8496.2861 -7857.2695 8495.9277 c
-7857.2695 8495.8223 -7857.0791 8495.3799 -7857.0791 8495.2959 c
-7857.0791 8495.1484 -7857.2065 8495.0645 -7857.3325 8495.0645 c
-7857.4795 8495.0645 -7857.9858 8495.5693 -7858.1338 8495.5693 c
-7858.3862 8495.5693 -7858.6401 8495.4434 -7858.8081 8495.2959 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
0 Ap
0 O
0 0 0 1 k
-7858 8496.29 m
-7865.8379 8491.7646 L
-7865.8379 8494.8525 L
-7876 8494.8525 L
-7876 8497.7275 L
-7865.8379 8497.7275 L
-7865.8379 8500.8164 L
-7858 8496.29 L
f
0.15 1 0.9 0.1 k
-7862.2939 8494.6758 m
-7865.0879 8493.0645 L
-7865.0879 8495.5908 L
-7876 8495.5908 L
-7876 8496.9902 L
-7865.0879 8496.9902 L
-7865.0879 8499.5166 L
-7862.2939 8497.9033 L
-7859.5 8496.29 L
-7862.2939 8494.6758 L
f
0 1 1 0 k
-7864.1675 8495.3818 m
-7864.5586 8495.3818 -7864.8896 8495.6309 -7865.0176 8495.9766 C
-7876 8495.9766 L
-7876 8496.6025 L
-7865.0176 8496.6025 L
-7864.8896 8496.9502 -7864.5586 8497.1982 -7864.1675 8497.1982 c
-7863.6655 8497.1982 -7863.2588 8496.792 -7863.2588 8496.29 c
-7863.2588 8495.7891 -7863.6655 8495.3818 -7864.1675 8495.3818 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
(/ Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 1 1 0.54 (New Color Swatch 35) 0 0 Xk
(New Color Swatch 35)
Pc
0 0 0 0 (New Color Swatch 39) 0 0 Xk
(New Color Swatch 39)
Pc
0 0 0 1 (New Color Swatch 41) 0 0 Xk
(New Color Swatch 41)
Pc
0 0 0.2 0 (New Color Swatch 40) 0 0 Xk
(New Color Swatch 40)
Pc
0 1 1 0.72 (New Color Swatch 37) 0 0 Xk
(New Color Swatch 37)
Pc
0 0.14 0.34 0 (New Color Swatch 38) 0 0 Xk
(New Color Swatch 38)
Pc
0 0 1 0 (New Color Swatch 36) 0 0 Xk
(New Color Swatch 36)
Pc
0.2 0 0 0 (New Color Swatch 34) 0 0 Xk
(New Color Swatch 34)
Pc
0 0 0 0.35 (New Color Swatch 6) 0 0 Xk
(New Color Swatch 6)
Pc
0 0 0 0.3 (New Color Swatch 9) 0 0 Xk
(New Color Swatch 9)
Pc
0 0 0 0.7 (New Color Swatch 7) 0 0 Xk
(New Color Swatch 7)
Pc
0 0 0 1 (New Color Swatch) 0 0 Xk
(New Color Swatch)
Pc
0 0 0 0.2 (New Color Swatch 10) 0 0 Xk
(New Color Swatch 10)
Pc
0 0.6 0.8 0 (New Color Swatch 11) 0 0 Xk
(New Color Swatch 11)
Pc
0 0 0.6 0 (New Color Swatch 8) 0 0 Xk
(New Color Swatch 8)
Pc
0 0 0 0 (New Color Swatch 2) 0 0 Xk
(New Color Swatch 2)
Pc
0 1 1 0.53 (New Color Swatch 4) 0 0 Xk
(New Color Swatch 4)
Pc
0 0 0.2 0 (New Color Swatch 3) 0 0 Xk
(New Color Swatch 3)
Pc
0 1 1 0.71 (New Color Swatch 5) 0 0 Xk
(New Color Swatch 5)
Pc
0.2 0 0 0 (New Color Swatch 1) 0 0 Xk
(New Color Swatch 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
0 O
0 J 0 j 1 w 4 M []0 d1 XR
84.792 604.4312 m
537.3184 604.4312 L
572.1094 604.4312 600.5742 575.9658 600.5742 541.1748 C
600.5742 88.6475 L
600.5742 53.8555 572.1094 25.3906 537.3184 25.3906 C
84.792 25.3906 L
50.001 25.3906 21.5342 53.8555 21.5342 88.6475 C
21.5342 541.1748 L
21.5342 575.9658 50.001 604.4312 84.792 604.4312 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 413) 311.0542 314.9111 0 289.5203 1 0 0 1 0 0 Bg
289.5203 0 0 -289.5203 311.0542 314.9111 Bm
f
0 BB
84.792 595.8984 m
537.3184 595.8984 L
567.416 595.8984 592.043 571.2725 592.043 541.1743 C
592.043 88.6475 L
592.043 58.5488 567.416 33.9229 537.3184 33.9229 C
84.792 33.9229 L
54.6924 33.9229 30.0674 58.5488 30.0674 88.6475 C
30.0674 541.1743 L
30.0674 571.2725 54.6924 595.8984 84.792 595.8984 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 413) 282.0552 389.9106 0 496.416 1 0 0 1 0 0 Bg
496.416 0 0 -496.416 282.0552 389.9106 Bm
f
0 BB
*u
0 0 0 1 k
0 XR
91.3838 587.9331 m
530.7266 587.9331 L
530.7266 587.9331 L
530.7266 587.9326 L
545.3984 587.9321 558.7363 581.9302 568.4043 572.2612 C
578.0742 562.5928 584.0742 549.2554 584.0742 534.584 C
584.0762 534.584 L
584.0762 534.582 L
584.0762 95.2393 L
584.0762 95.2393 L
584.0742 95.2393 L
584.0742 80.5674 578.0742 67.2285 568.4043 57.5596 C
558.7363 47.8916 545.3984 41.8896 530.7266 41.8896 C
530.7266 41.8887 L
530.7266 41.8887 L
91.3838 41.8887 L
91.3838 41.8887 L
91.3838 41.8896 L
76.7119 41.8896 63.3721 47.8916 53.7041 57.5605 C
44.0361 67.2285 38.0342 80.5664 38.0342 95.2383 C
38.0322 95.2383 L
38.0322 95.2393 L
38.0322 534.582 L
38.0322 534.583 L
38.0342 534.583 L
38.0342 549.2549 44.0361 562.5928 53.7041 572.2617 C
63.374 581.9307 76.71 587.9321 91.3818 587.9326 C
91.3818 587.9331 L
91.3838 587.9331 L
91.3838 587.9331 L
f
1 D
530.7266 587.4907 m
530.7266 587.4907 L
91.3838 587.4907 L
91.3818 587.4907 L
91.3818 587.4912 L
76.833 587.4912 63.6064 581.5386 54.0186 571.9487 C
44.4268 562.3589 38.4736 549.1318 38.4736 534.583 C
38.4756 534.583 L
38.4756 534.582 L
38.4756 95.2393 L
38.4756 95.2383 L
38.4736 95.2383 L
38.4736 80.6895 44.4268 67.4639 54.0166 57.873 C
63.6064 48.2832 76.835 42.3301 91.3838 42.3291 C
91.3838 42.3301 L
91.3838 42.3301 L
530.7266 42.3301 L
530.7266 42.3301 L
530.7266 42.3291 L
545.2754 42.3301 558.5 48.2832 568.0918 57.8721 C
577.6816 67.4629 583.6348 80.6895 583.6348 95.2393 C
583.6348 95.2393 L
583.6348 95.2393 L
583.6348 534.582 L
583.6348 534.584 L
583.6348 534.584 L
583.6348 549.1323 577.6816 562.3584 568.0918 571.9482 C
558.502 581.5386 545.2754 587.4912 530.7266 587.4912 C
530.7266 587.4907 L
530.7266 587.4907 L
f
*U
U
*u
0 D
0 0 0 0 k
1 XR
395.0059 127.7529 m
394.3887 127.1621 393.8184 126.5693 393.2969 125.9717 C
392.1465 126.1367 391.0117 126.3018 389.9043 126.4512 C
390.5957 127.2412 391.3848 128.0479 392.252 128.8662 C
393.1348 128.4912 394.0449 128.125 395.0059 127.7529 C
395.0059 127.7529 L
f
402.9922 133.5 m
402.9922 133.5 L
400.9922 132.3066 399.0332 130.9775 397.2324 129.542 C
396.2598 129.9004 395.334 130.2637 394.4531 130.624 C
396.7461 132.4385 399.1914 134.0986 401.6504 135.5234 C
402.0645 134.8457 402.5176 134.1699 402.9922 133.5 C
402.9922 133.5 L
f
1 D
393.5898 130.9893 m
393.5898 130.9893 L
396.0391 132.9512 398.6406 134.7266 401.2676 136.2451 C
401.1074 136.5674 400.9609 136.8994 400.8242 137.2324 C
397.9883 135.585 395.1406 133.6357 392.4609 131.4795 C
392.8301 131.3125 393.2051 131.1563 393.5898 130.9893 C
393.5898 130.9893 L
f
391.3594 129.2461 m
391.3594 129.2461 L
390.9922 129.4102 390.6309 129.5732 390.293 129.7393 C
389.1699 128.7295 388.1992 127.7412 387.3496 126.7803 C
387.8066 126.7197 388.2695 126.6611 388.7422 126.5986 C
389.5391 127.4824 390.4219 128.3643 391.3594 129.2461 C
f
*U
u
0 D
0.48 0 0 0 k
334.4434 276.2676 m
331.5 288.4668 329.2773 305.4189 332.3945 325.9668 C
332.3594 325.9165 332.3281 325.8677 332.293 325.8174 C
332.2969 325.8379 332.3008 325.8574 332.3047 325.8779 C
319.8926 308.21 314.1509 293.874 311.6567 282.1279 C
311.6499 282.1006 311.6411 282.0732 311.6333 282.0459 c
289.0083 202.752 347.8477 186.2383 340.9082 248.2549 c
339.9199 257.0801 337.1836 264.9082 334.4434 276.2676 c
f
307.7173 203.4561 m
303.5869 222.9131 294.0713 246.6572 273.5146 275.9209 C
273.5225 275.8887 273.5273 275.8555 273.5352 275.8223 C
273.4775 275.9053 273.4219 275.9863 273.3643 276.0684 C
278.5283 242.0283 274.8486 213.9463 269.9707 193.7383 c
265.4297 174.9209 260.8989 161.9531 259.2627 147.334 c
247.7666 44.5996 345.2363 71.9551 307.7583 203.3096 c
307.7446 203.3584 307.731 203.4072 307.7173 203.4561 C
f
312.9878 286.1299 m
316.2949 297.7207 321.2402 312.3193 333.75 330.0508 C
330.6328 309.5029 332.8555 292.5508 335.7988 280.3516 C
338.5391 268.9922 341.2754 261.1641 342.2637 252.3389 C
349.2031 190.3223 290.3633 206.8359 312.9878 286.1299 C
Bb
0 0 0 0 Bh
1 (GradientFill 26) 309.8896 234.2119 0 101.3454 1 0 0 1 0 0 Bg
101.3454 0 0 -101.3454 309.8896 234.2119 Bm
f
0 BB
310.2271 254.6572 m
310.3149 264.3281 310.3755 273.6953 312.9829 286.0801 C
315.4604 297.8506 321.2012 312.2285 333.6602 329.9619 C
329.3535 310.8232 330.4063 293.7676 332.4727 280.8701 C
334.4551 268.5 336.6914 259.8174 336.9531 250.9912 C
337.9512 217.2969 309.8804 216.6777 310.2271 254.6572 C
Bb
0 0 0 0 Bh
1 (GradientFill 23) 322.2588 268.5928 0 63.106 1 0 0 1 0 0 Bg
63.106 0 0 -63.106 322.2588 268.5928 Bm
f
0 BB
0.48 0 0 0 k
324.2441 218.2354 m
311.5532 223.5205 308.481 239.8096 308.4517 260.6055 C
307.1392 239.4424 311.5024 221.7305 324.2441 218.2354 C
f
0 0 0 0 k
321.3145 302.668 m
311.9292 283.2031 310.5229 257.7168 313.0483 237.3594 C
314.6743 224.917 317.3301 227.3516 316.127 235.7197 C
314.0913 257.9678 315.4712 280.3252 321.3145 302.668 C
f
*u
0.000031 0.000031 0.000031 0.000031 k
334.3398 285.6133 m
336.2402 278.126 337.3047 271.5498 338.1816 267.7871 C
338.3359 267.0566 338.0723 266.9727 337.873 267.6826 C
336.8105 271.7344 335.4531 279.5039 334.3398 285.6133 C
334.3398 285.6133 L
f
341.2344 252.4688 m
341.2344 252.4688 L
344.9316 221.2588 328.9219 204.2793 315.7505 222.1846 C
328.9883 205.6396 344.0273 223.6465 340.668 252.2432 C
340.5215 253.5527 341.0645 253.71 341.2344 252.4688 C
f
*U
*u
1 D
0 0 0 0 k
336.4297 255.8408 m
339.2852 247.2588 L
337.6367 260.3398 L
336.4297 255.8408 L
336.4297 255.8408 L
f
0 D
335.5215 258.665 m
335.5215 258.665 L
331.4688 290.1621 L
336.8945 262.9258 L
335.5215 258.665 L
335.5215 258.665 L
f
1 D
337.3848 264.3877 m
337.3848 264.3877 L
338.0742 266.3428 L
331.9844 293.9443 L
337.3848 264.3877 L
337.3848 264.3877 L
f
0 D
337.9727 262.5732 m
337.9727 262.5732 L
338.791 264.5313 L
340.5781 250.5537 L
337.9727 262.5732 L
f
*U
307.1128 205.8926 m
301.6338 225.0957 293.4424 249.2793 272.7183 278.6514 C
277.8828 244.6113 274.2026 216.5293 269.3252 196.3213 C
264.7842 177.5039 260.2534 164.5361 258.6172 149.917 C
247.1211 47.1826 344.5918 74.5381 307.1128 205.8926 C
Bb
0 0 0 0 Bh
1 (GradientFill 26) 312.2451 119.8877 0 167.8783 1 0 0 1 0 0 Bg
167.8783 0 0 -167.8783 312.2451 119.8877 Bm
f
0 BB
311.687 153.7568 m
311.5405 169.7764 311.4399 185.2939 307.1216 205.8096 C
303.0171 225.3086 293.5063 249.126 272.8687 278.5039 C
280.0029 246.7998 278.2568 218.5449 274.8345 197.1816 C
271.5522 176.6895 267.8467 162.3047 267.4131 147.6836 C
265.7598 91.8691 312.2612 90.8418 311.687 153.7568 C
Bb
0 0 0 0 Bh
1 (GradientFill 23) 291.7559 176.8438 0 104.5403 1 0 0 1 0 0 Bg
104.5403 0 0 -104.5403 291.7559 176.8438 Bm
f
0 BB
0.48 0 0 0 k
288.4663 93.4238 m
309.4897 102.1768 314.5786 129.1631 314.6265 163.6113 C
316.8008 128.5537 309.5737 99.2119 288.4663 93.4238 C
f
0 0 0 0 k
294.7666 233.2891 m
309.4038 202.9375 311.5952 163.1963 307.6587 131.4531 C
305.1216 112.0508 300.9814 115.8477 302.8579 128.8955 C
306.0317 163.5869 303.8794 198.4512 294.7666 233.2891 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
271.7422 205.0371 m
268.5933 192.6328 266.8301 181.7402 265.376 175.5078 C
265.124 174.2979 265.5601 174.1592 265.8906 175.334 C
267.6499 182.0469 269.8994 194.916 271.7422 205.0371 C
271.7422 205.0371 L
f
260.3213 150.1318 m
260.3213 150.1318 L
254.1948 98.4307 280.7168 70.3037 302.5366 99.9639 C
280.6074 72.5566 255.6943 102.3848 261.2593 149.7588 C
261.5044 151.9277 260.6035 152.1875 260.3213 150.1318 C
f
*U
*u
0 D
0 0 0 0 k
268.2793 155.7188 m
263.5503 141.501 L
266.2813 163.1699 L
268.2793 155.7188 L
268.2793 155.7188 L
f
1 D
269.7842 160.3984 m
269.7842 160.3984 L
276.498 212.5732 L
267.5078 167.4531 L
269.7842 160.3984 L
269.7842 160.3984 L
f
0 D
266.6992 169.876 m
266.6992 169.876 L
265.5562 173.1152 L
275.6455 218.8389 L
266.6992 169.876 L
266.6992 169.876 L
f
1 D
265.7256 166.8721 m
265.7256 166.8721 L
264.3691 170.1143 L
261.4082 146.9609 L
265.7256 166.8721 L
f
*U
0 D
302.9302 199.5615 m
312.5718 187.7402 L
303.9839 200.8516 L
327.2246 199.0986 L
304.4165 202.2412 L
320.1895 219.0947 L
303.7583 203.5283 L
304.1763 213.6504 L
302.5103 203.7725 L
288.3516 224.4951 L
301.2915 202.667 L
277.0386 205.8008 L
301.186 201.6201 L
285.0034 184.8408 L
301.9087 200.793 L
298.9204 171.4248 L
302.9302 199.5615 L
f
307.0415 157.5391 m
318.6445 152.1846 L
307.3608 158.8975 L
325.5 166.1211 L
307.1753 160.1025 L
312.854 178.5879 L
306.2075 160.8301 L
302.8013 168.6045 L
305.1772 160.5557 L
286.9023 170.9512 L
304.6665 159.2754 L
285.2573 152.7197 L
304.9712 158.4482 L
298.9575 139.8682 L
305.8198 158.0908 L
314.3657 134.8857 L
307.0415 157.5391 L
f
U
u
0.48 0 0 0 k
523.2656 165.7764 m
525.1113 168.8125 526.1133 172.0029 526.1133 175.2979 c
526.1133 195.4102 489.4551 211.7197 444.2559 211.7197 c
399.0566 211.7197 362.4004 195.4102 362.4004 175.2979 c
362.4004 160.4326 382.4395 147.6523 411.1445 141.9922 C
406.4199 140.2129 401.5781 137.1436 396.9668 133.792 c
391.2324 129.626 385.7402 125.0322 383.7754 120.999 c
381.8105 116.9648 385.1992 114.3486 392.3613 112.5762 c
396.5703 111.5342 403.707 110.6494 410.9512 109.96 c
423.0039 108.8115 435.8809 106.6025 447.6758 113.5361 c
449.8027 114.7861 450.957 116.6084 451.2813 118.6777 C
462.4785 114.167 477.1934 111.4238 493.3184 111.4238 c
528.3633 111.4238 556.7871 124.3594 556.7871 140.3076 c
556.7871 151.3281 543.2129 160.9063 523.2656 165.7764 C
f
440.1094 139.8779 m
485.3086 139.8779 521.9668 156.1875 521.9668 176.2979 C
521.9668 196.4102 485.3086 212.7197 440.1094 212.7197 C
394.9102 212.7197 358.2539 196.4102 358.2539 176.2979 C
358.2539 156.1875 394.9102 139.8779 440.1094 139.8779 C
Bb
0 0 0 0 Bh
1 (GradientFill 25) 440.1104 179.2129 0 90.817 1 0 0 1 0 0 Bg
90.817 0 0 -90.817 440.1104 179.2129 Bm
f
0 BB
477.668 207.2822 m
549.3711 191.2617 495.6367 137.8828 424.7227 153.7158 C
386.4688 162.2568 372.5195 183.3174 393.0996 200.3496 C
405.1543 207.7822 441.5879 213.8633 477.668 207.2822 C
Bb
1 (GradientFill 15) 377.9346 190.666 352 93.4687 1 0 0 1 0 0 Bg
92.5591 -13.0083 -9.98134 -71.0209 382.6426 224.167 Xm
8180.8765 -1149.7471 -9.98134 -71.0209 -7798.2339 1373.9141 Bc
92.5591 -13.0083 -9.98134 -71.0209 382.6426 224.167 Bm
8180.8765 -1149.7471 -9.98134 -71.0209 475.2021 211.1582 Bc
f
0 BB
0.48 0 0 0 k
518.8438 168.4053 m
510.8789 151.8906 477.0664 140.6221 438.666 140.3203 C
479.4844 142.5859 518.2188 153.8701 520.5449 176.1504 C
520.6406 173.5938 520.0957 171.001 518.8438 168.4053 C
f
474.8926 206.1611 m
509.4844 198.0615 523.3633 179.5088 505.8867 164.7314 C
488.4082 149.9521 446.1836 144.5361 411.5918 152.6357 C
377 160.7344 363.1211 179.2871 380.5977 194.0654 C
398.0762 208.8438 440.3027 214.2598 474.8926 206.1611 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 440.4346 183.0605 0 72.5417 1 0 0 1 0 0 Bg
72.5417 0 0 -72.5417 440.4346 183.0605 Bm
f
0 BB
512.541 173.5156 m
511.4141 170.5156 509.2246 167.5547 505.8867 164.7314 C
488.4082 149.9521 446.1836 144.5361 411.5918 152.6357 C
403.8828 154.4404 397.207 156.7656 391.6719 159.4502 C
442.2676 155.7178 462.4336 205.3682 512.541 173.5156 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 415.8457 201.9141 0 110.2865 1 0 0 1 0 0 Bg
110.2865 0 0 -110.2865 415.8457 201.9141 Bm
f
0 BB
0 0 0 0 k
508.0527 180.6699 m
505.1133 195.082 473.5117 208.1328 440.0293 206.7471 C
422.748 206.0322 423.2598 200.6738 435.0547 201.2617 C
467.6406 200.7627 499.627 192.2705 508.0527 180.6699 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
394.0801 205.5879 m
385.2051 202.7783 377.6387 199.1494 371.918 194.9121 C
371.1777 194.1318 372.584 194.0215 373.5137 194.7705 C
378.7422 198.999 385.7637 202.6689 394.0801 205.5879 C
394.0801 205.5879 L
f
360.5332 178.3926 m
360.5332 178.3926 L
359.8809 172.8662 362.1484 167.2803 367.4629 162.1133 C
374.3711 155.3936 385.8965 149.9307 400.6035 146.4863 C
415.2891 143.0479 431.9805 141.9131 448.3164 143.1826 C
461.2773 144.1895 473.2129 146.625 483.2559 150.1533 C
473.8984 147.1895 463.0879 145.1328 451.4492 144.2285 C
435.1133 142.959 418.4238 144.0947 403.7363 147.5322 C
389.0293 150.9766 377.5059 156.4395 370.5977 163.1592 C
365.6777 167.9424 363.3672 173.085 363.5684 178.208 C
363.6543 179.6396 360.7578 179.7529 360.5332 178.3926 C
f
*U
*u
0 D
0 0 0 0 k
397.0723 184.5693 m
395.6367 183.3564 394.3301 182.1172 393.1836 180.8457 C
383.166 183.1914 L
384.5117 184.8916 386.1504 186.5732 388.0957 188.2246 C
397.0723 184.5693 L
397.0723 184.5693 L
f
1 D
402.8613 188.0137 m
402.8613 188.0137 L
405.5879 192.2471 405.6348 191.8047 414.1699 199.667 C
406.5117 197.5635 399.4902 194.833 393.5313 191.543 C
402.8613 188.0137 L
402.8613 188.0137 L
f
0 D
390.3008 192.7637 m
390.3008 192.7637 L
385.9688 194.4023 L
392.6973 198.252 400.8535 201.3633 409.8027 203.6377 C
412.3164 201.3506 L
404.1074 199.1768 396.5996 196.2861 390.3008 192.7637 C
390.3008 192.7637 L
f
1 D
384.9531 189.5039 m
384.9531 189.5039 L
380.8496 191.1738 L
378.5 189.1787 376.5977 187.1367 375.1211 185.0742 C
379.5664 184.0332 L
381.0391 185.9189 382.8574 187.7354 384.9531 189.5039 C
f
*U
0 D
0.48 0 0 0 k
515.502 168.7031 m
507.959 153.0674 475.9453 142.3975 439.5859 142.1123 C
478.2344 144.2568 514.9082 154.9414 517.1094 176.0361 C
517.2031 173.6152 516.6855 171.1602 515.502 168.7031 C
f
489.1719 112.4238 m
524.2168 112.4238 552.6406 125.3594 552.6406 141.3076 C
552.6406 157.2578 524.2168 170.1934 489.1719 170.1934 C
454.125 170.1934 425.7031 157.2578 425.7031 141.3076 C
425.7031 125.3594 454.125 112.4238 489.1719 112.4238 C
Bb
0 0 0 0 Bh
1 (GradientFill 16) 487.9023 143.6191 0 71.8621 1 0 0 1 0 0 Bg
71.8621 0 0 -71.8621 487.9023 143.6191 Bm
f
0 BB
518.291 166.127 m
578.4922 150.0771 534.6367 109.0127 477.2402 123.4492 C
448.0684 130.7852 436.7637 147.4336 452.7207 161.2344 C
462.0684 167.2559 490.3164 171.459 518.291 166.127 C
Bb
1 (GradientFill 15) 441.1396 153.5811 351 72.1561 1 0 0 1 0 0 Bg
71.2677 -11.2877 -9.18962 -58.021 445.418 180.5947 Xm
8221.0244 -1302.0814 -9.18962 -58.021 -7775.6064 1482.6763 Bc
71.2677 -11.2877 -9.18962 -58.021 445.418 180.5947 Bm
8221.0244 -1302.0814 -9.18962 -58.021 516.6855 169.3066 Bc
f
0 BB
0.48 0 0 0 k
550.2207 135.0488 m
544.043 121.9512 517.8262 113.0146 488.0508 112.7764 C
519.7012 114.5732 549.7344 123.5215 551.5371 141.1914 C
551.6133 139.1641 551.1914 137.1074 550.2207 135.0488 C
f
516.1406 164.9922 m
542.9629 158.5684 553.7227 143.8555 540.1719 132.1348 C
526.6211 120.415 493.8789 116.1191 467.0586 122.542 C
440.2383 128.9658 429.4785 143.6787 443.0293 155.3994 C
456.5801 167.1191 489.3203 171.415 516.1406 164.9922 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 489.4238 146.6709 0 56.4784 1 0 0 1 0 0 Bg
56.4784 0 0 -56.4784 489.4238 146.6709 Bm
f
0 BB
545.332 139.1016 m
544.459 136.7236 542.7598 134.374 540.1719 132.1348 C
526.6211 120.415 493.8789 116.1191 467.0586 122.542 C
461.082 123.9736 455.9063 125.8184 451.6152 127.9473 C
490.8438 124.9873 506.4805 164.3633 545.332 139.1016 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 470.3594 161.623 0 85.966 1 0 0 1 0 0 Bg
85.966 0 0 -85.966 470.3594 161.623 Bm
f
0 BB
0 0 0 0 k
541.8516 144.7764 m
539.5723 156.2061 515.0703 166.5557 489.1074 165.457 C
475.709 164.8896 476.1055 160.6406 485.25 161.1074 C
510.5176 160.7109 535.3203 153.9756 541.8516 144.7764 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
453.4805 164.5381 m
446.5996 162.3086 440.7324 159.4316 436.2969 156.0703 C
435.7246 155.4531 436.8145 155.3643 437.5352 155.959 C
441.5898 159.3115 447.0332 162.2227 453.4805 164.5381 C
453.4805 164.5381 L
f
427.4707 142.9697 m
427.4707 142.9697 L
426.9629 138.5869 428.7246 134.1563 432.8418 130.0586 C
438.1992 124.7305 447.1367 120.3975 458.5391 117.666 C
469.9258 114.9395 482.8672 114.0391 495.5352 115.0449 C
505.584 115.8447 514.8379 117.7764 522.623 120.5732 C
515.3691 118.2227 506.9883 116.5918 497.9648 115.875 C
485.2969 114.8682 472.3555 115.7676 460.9688 118.4951 C
449.5664 121.2266 440.6289 125.5586 435.2734 130.8887 C
431.459 134.6816 429.668 138.7607 429.8242 142.8242 C
429.8906 143.958 427.6445 144.0479 427.4707 142.9697 C
f
*U
*u
0 D
0 0 0 0 k
455.8027 147.8682 m
454.6895 146.9063 453.6758 145.9238 452.7852 144.915 C
445.0176 146.7744 L
446.0625 148.124 447.332 149.458 448.8418 150.7666 C
455.8027 147.8682 L
455.8027 147.8682 L
f
1 D
460.2891 150.5996 m
460.2891 150.5996 L
462.4023 153.9561 462.4414 153.6064 469.0586 159.8418 C
463.1211 158.1738 457.6758 156.0088 453.0547 153.3994 C
460.2891 150.5996 L
460.2891 150.5996 L
f
0 D
450.5508 154.3672 m
450.5508 154.3672 L
447.1934 155.667 L
452.4102 158.7188 458.7344 161.1875 465.6719 162.9912 C
467.6211 161.1768 L
461.2559 159.4521 455.4355 157.1602 450.5508 154.3672 C
450.5508 154.3672 L
f
1 D
446.4043 151.7822 m
446.4043 151.7822 L
443.2227 153.1064 L
441.4023 151.5244 439.9258 149.9053 438.7813 148.2695 C
442.2285 147.4434 L
443.3691 148.9385 444.7813 150.3789 446.4043 151.7822 C
f
*U
0 D
0.48 0 0 0 k
547.627 135.2852 m
541.7793 122.8848 516.957 114.4229 488.7656 114.1973 C
518.7305 115.8975 547.168 124.3711 548.875 141.1006 C
548.9473 139.1807 548.5469 137.2334 547.627 135.2852 C
f
443.5293 114.5361 m
448.8379 117.6563 448.1797 124.3105 443.332 129.583 C
438.4844 134.8535 431.8125 138.6328 425.7188 141.5459 C
420.5508 144.0156 415.373 145.3652 409.7852 143.9053 C
404.1992 142.4434 398.3438 138.8057 392.8203 134.792 C
387.0859 130.626 381.5938 126.0322 379.6289 121.999 C
377.6641 117.9648 381.0527 115.3486 388.2148 113.5762 C
392.4238 112.5342 399.5605 111.6494 406.8047 110.96 C
418.8574 109.8115 431.7344 107.6025 443.5293 114.5361 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 407.0273 125.0127 0 43.7986 1 0 0 1 0 0 Bg
43.7986 0 0 -43.7986 407.0273 125.0127 Bm
f
0 BB
414.8379 141.6787 m
424.5098 139.3359 431.6602 130.8418 431.0898 123.7988 C
430.5332 116.9277 419.1309 112.7881 403.168 115.9219 C
395.2637 117.4727 390.0293 119.6533 388.793 122.7939 C
387.6348 125.7383 389.8613 129.834 394.0469 134.0742 C
396.1758 136.0898 399.6191 138.2969 403.2578 139.9238 C
406.8359 141.5244 410.8125 142.4678 414.8379 141.6787 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 412.3623 132.207 0 29.5101 1 0 0 1 0 0 Bg
29.5101 0 0 -29.5101 412.3623 132.207 Bm
f
0 BB
418.584 141.5957 m
423.6934 140.4541 429.2207 137.5195 433.8027 134.1934 C
438.8066 130.5605 442.3457 126.3867 441.8984 122.0537 C
440.6563 117.8623 435.1777 114.8145 427.6152 113.7314 C
419.8984 112.624 410.4941 113.1309 401.5547 114.7705 C
393.1621 116.0938 387.4922 118.0654 385.834 120.8232 C
384.3633 123.2656 386.291 126.8262 390.4707 130.4961 C
394.4023 134.3242 399.4434 137.5498 404.2559 139.7334 C
408.9258 141.8496 413.4707 142.7363 418.584 141.5957 C
Bb
0 0 0 0 Bh
1 (GradientFill 21) 385.3457 136.0146 0 61.038 1 0 0 1 0 0 Bg
61.038 0 0 -61.038 385.3457 136.0146 Bm
f
0 BB
440.5449 128.3174 m
445.5156 120.1631 437.6836 114.833 425.6934 113.7773 C
413.4883 112.7031 398.6367 114.5381 390.5313 117.8115 C
402.4297 117.6182 409.4531 122.749 415.1641 127.5293 C
420.3711 131.8867 424.9863 135.498 440.5449 128.3174 C
Bb
0 0 0 0 Bh
1 (GradientFill 20) 413.2031 133.5342 0 35.146 1 0 0 1 0 0 Bg
35.146 0 0 -35.146 413.2031 133.5342 Bm
f
0 BB
0 0 0 0 k
436.207 130.8818 m
432.7539 134.542 427.541 137.4697 422.6289 139.4814 C
418.3066 141.251 413.7891 142.0098 409.3477 140.626 C
404.6523 139.208 404.3691 136.5293 407.8105 137.4893 C
412.5 138.2686 417.4297 137.9355 422.1074 136.8193 C
427.2383 135.5928 432.3574 133.6299 436.207 130.8818 C
f
*u
1 D
0.71 0 0 0 k
396.209 136.1738 m
393.3184 134.3389 390.5078 132.2529 387.9766 130.0566 C
387.5898 129.6768 387.9805 129.709 388.4141 130.0908 C
390.7793 132.25 393.4414 134.3232 396.209 136.1738 C
396.209 136.1738 L
f
380.9648 122.5771 m
380.9648 122.5771 L
379.7344 120.4238 379.7285 118.4033 381.4297 117.0313 C
384.1094 114.8721 389.7617 113.4766 397.1816 112.373 C
401.1738 111.7803 405.3398 111.2725 409.2891 110.9736 C
413.4082 110.6602 417.1094 110.5508 420.3438 110.7275 C
425.8926 111.0313 430.627 112.1455 434.377 113.9316 C
430.7988 112.4199 426.3633 111.4482 421.3535 111.1543 C
417.8672 110.9502 414.1094 111.0645 410.1699 111.3672 C
406.2246 111.668 402.1699 112.1777 398.2871 112.7813 C
391.0039 113.9131 385.4355 115.3682 382.7832 117.5742 C
381.1797 118.9092 381.0801 120.7627 382.0078 122.7217 C
382.2813 123.2813 381.2949 123.1152 380.9648 122.5771 C
f
*U
0 D
0.48 0 0 0 k
421.3887 110.5742 m
430.2617 110.7949 454.7051 115.8701 441.2734 129.4512 C
454.5527 116.5557 433.2793 110.3965 421.3887 110.5742 C
f
0.35 0 0 0 k
382.6797 120.9355 m
382.9043 123.0137 386.3008 127.6729 390.5156 131.3486 C
394.6074 134.9189 399.4219 138.584 404.3477 141.2207 C
399.1191 137.9961 393.7988 133.9443 389.4219 129.96 C
384.9609 125.8984 382.0234 121.9648 383.5508 118.2676 C
382.9746 119.0723 382.457 118.8584 382.6797 120.9355 C
f
0.000031 0.000031 0.000031 0.000031 k
418.4004 113.0703 m
412.3359 112.3291 404.2559 112.9502 396.6895 114.0996 C
389.791 115.1484 384.3711 116.6299 382.7656 118.8369 C
381.7129 121.1436 386.0117 122.4531 386.7363 120.7598 C
389.0547 118.6533 393.6426 116.8838 399.3496 115.5107 C
405.5723 114.0137 412.4922 112.9814 418.4004 113.0703 C
f
0.48 0 0 0 k
418.6445 110.3281 m
429.377 109.873 456.5098 114.4961 442.4961 129.7764 C
456.5508 114.918 432.0391 109.2061 418.6445 110.3281 C
f
0 0 0 0 k
489.7539 193.7207 m
499.3965 181.8994 L
490.8086 195.0098 L
514.0488 193.2568 L
491.2402 196.3984 L
507.0137 213.2539 L
490.584 197.6855 L
491.002 207.8086 L
489.3359 197.9316 L
475.1777 218.6533 L
488.1152 196.8262 L
463.8633 199.96 L
488.0098 195.7783 L
471.8281 179 L
488.7344 194.9512 L
485.7461 165.583 L
489.7539 193.7207 L
f
394.5977 129.7998 m
404.2383 117.9785 L
395.6504 131.0889 L
418.8926 129.3369 L
396.084 132.4785 L
411.8555 149.333 L
395.4258 133.7656 L
395.8438 143.8896 L
394.1777 134.0117 L
380.0195 154.7344 L
392.959 132.9063 L
368.7051 136.0391 L
392.8535 131.8594 L
376.6719 115.0791 L
393.5762 131.0313 L
390.5879 101.6631 L
394.5977 129.7998 L
f
528.1387 152.9326 m
537.7813 141.1113 L
529.1934 154.2227 L
552.4336 152.4697 L
529.627 155.6113 L
545.3984 172.4658 L
528.9688 156.8994 L
529.3867 167.0215 L
527.7207 157.1445 L
513.5625 177.8662 L
526.502 156.0381 L
502.248 159.1719 L
526.3945 154.9912 L
510.2129 138.2129 L
527.1172 154.1641 L
524.1309 124.7959 L
528.1387 152.9326 L
f
U
u
0.48 0 0 0 k
99.3965 187.5195 m
99.5786 179.2441 101.502 170.9111 105.6104 163.6787 c
108.9937 157.3359 120.2271 143.4111 122.6631 158.3584 c
124.0547 166.8975 121.5303 176.0293 122.6494 184.8037 c
123.8506 194.2236 126.6714 203.5186 131.2544 211.8535 c
139.522 226.8906 154.146 238.0059 171.9448 236.6475 C
134.3125 256.2539 98.5317 227.0264 99.3965 187.5195 c
99.4014 187.2979 99.3804 188.2559 99.3965 187.5195 c
f
107.9883 163.1348 m
87.4893 199.1445 119.3496 264.7783 174.2993 236.1475 C
139.7358 238.7861 120.4678 197.7051 125.02 164.3477 C
126.8965 150.6006 117.3101 143.4004 107.9883 163.1348 C
Bb
0 0 0 0 Bh
1 (GradientFill 23) 135.8462 200.75 0 45.2768 1 0 0 1 0 0 Bg
45.2768 0 0 -45.2768 135.8462 200.75 Bm
f
0 BB
107.9878 163.1348 m
93.7622 188.125 104.7583 227.373 131.1841 239.4912 C
113.4063 223.0439 106.9136 192.7354 114.4966 165.8652 C
116.9888 160.3887 114.9702 156.7813 111.543 156.8584 C
110.3696 158.541 109.1772 160.6172 107.9878 163.1348 C
Bb
0 0 0 0 Bh
1 (GradientFill 23) 114.6968 196.5225 0 46.0235 1 0 0 1 0 0 Bg
46.0235 0 0 -46.0235 114.6968 196.5225 Bm
f
0 BB
0 0 0 0 k
164.6724 238.5879 m
155.3564 241.959 138.9058 237.2129 128.6401 221.9229 C
123.1089 213.7783 128.5991 213.1094 132.6709 218.9473 C
143.8164 232.8135 153.5718 238.3418 164.6724 238.5879 C
f
0.000031 0.000031 0.000031 0.000031 k
161.1592 235.4404 m
134.3584 229.6191 120.0352 194.8096 123.978 165.915 C
124.9873 158.5225 122.6084 153.0693 118.7485 152.8545 C
121.9243 153.9766 123.75 159.0518 122.8447 165.6885 C
118.8462 194.9873 133.6304 230.3672 161.1592 235.4404 C
f
0 0 0 0 k
131.043 218.7207 m
142.646 213.3662 L
131.3613 220.0791 L
149.502 227.3027 L
131.1772 221.2842 L
136.855 239.7695 L
130.209 222.0117 L
126.8027 229.7852 L
129.1792 221.7373 L
110.9038 232.1318 L
128.6675 220.4561 L
109.2583 213.9004 L
128.9731 219.6289 L
122.959 201.0498 L
129.8218 219.2725 L
138.3672 196.0654 L
131.043 218.7207 L
f
U
u
0.48 0 0 0 k
164.4351 100.084 m
144.1162 106.8477 111.8301 106.6025 92.3389 99.5381 c
72.8467 92.4727 73.5161 81.2568 93.835 74.4932 c
114.1509 67.7295 146.4365 67.9756 165.9282 75.04 c
185.4204 82.1055 184.7505 93.3203 164.4351 100.084 c
f
166.6162 79.54 m
186.1084 86.6055 185.4385 97.8203 165.123 104.584 C
144.8042 111.3477 112.5181 111.1025 93.0269 104.0381 C
73.5347 96.9727 74.2041 85.7568 94.5229 78.9932 C
114.8389 72.2295 147.1245 72.4756 166.6162 79.54 C
Bb
0 0 0 0 Bh
1 (GradientFill 16) 126.7632 92.4971 0 52.5195 1 0 0 1 0 0 Bg
52.5195 0 0 -52.5195 126.7632 92.4971 Bm
f
0 BB
113.481 108.4912 m
160.9395 114.1953 192.8608 87.4551 145.938 81.8105 C
120.6255 78.7656 92.8726 83.8203 84.1675 92.8906 C
81.6948 97.3271 91.1304 105.1113 113.481 108.4912 C
Bb
1 (GradientFill 15) 84.2715 87.0811 10 56.6574 1 0 0 1 0 0 Bg
55.7966 9.83846 6.78154 -38.46 81.0479 105.3643 Xm
7843.0381 1382.9395 6.78154 -38.46 -7761.9902 -1277.5752 Bc
55.7966 9.83846 6.78154 -38.46 81.0479 105.3643 Bm
7843.0381 1382.9395 6.78154 -38.46 136.8447 115.2031 Bc
f
0 BB
0.48 0 0 0 k
171.75 101.4414 m
184.999 94.6426 181.8027 85.5684 165.5459 79.4639 C
180.8604 86.6055 186.1646 96.4561 164.6587 104.3125 C
167.2837 103.4668 169.668 102.5107 171.75 101.4414 C
f
114.6533 107.2686 m
137.7529 109.9521 162.481 105.8828 169.874 98.1807 C
177.2666 90.4785 164.5288 82.0566 141.4297 79.373 C
118.3301 76.6895 93.6021 80.7588 86.209 88.4609 C
78.8164 96.1631 91.5547 104.5859 114.6533 107.2686 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 126.2847 95.0938 0 43.7332 1 0 0 1 0 0 Bg
43.7332 0 0 -43.7332 126.2847 95.0938 Bm
f
0 BB
163.8687 102.1748 m
166.4141 100.9902 168.4614 99.6523 169.874 98.1807 C
177.2666 90.4785 164.5288 82.0566 141.4297 79.373 C
136.2822 78.7754 131.0537 78.5137 125.9541 78.5518 C
151.5439 85.2041 110.0811 105.0547 163.8687 102.1748 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 102.9438 97.4355 0 67.2733 1 0 0 1 0 0 Bg
67.2733 0 0 -67.2733 102.9438 97.4355 Bm
f
0 BB
0 0 0 0 k
154.7061 103.8799 m
138.8774 108.2666 112.0654 107.7158 99.0254 102.0156 C
92.2954 99.0742 97.9302 97.3525 102.4219 99.3936 C
116.979 104.3193 139.3525 106.4629 154.7061 103.8799 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
80.3809 94.4443 m
79.3936 92.1113 79.7954 89.708 81.6099 87.3887 C
82.0786 87.0107 82.7969 87.1943 82.4424 87.5908 C
80.4248 89.8301 79.7451 92.1611 80.3809 94.4443 C
80.3809 94.4443 L
f
93.3892 80.0547 m
93.3892 80.0547 L
98.6914 78.0928 105.3125 76.5693 112.8237 75.6621 C
122.5918 74.4824 133.0815 74.4473 142.9023 75.5879 C
152.7095 76.7266 161.0547 78.9541 166.8169 81.9346 C
171.3882 84.2998 174.0752 86.9844 174.8428 89.7402 C
173.8018 87.2813 171.2168 84.8994 167.1118 82.7764 C
161.3491 79.7959 153.0044 77.5684 143.1973 76.4287 C
133.376 75.2881 122.8867 75.3242 113.1191 76.5039 C
106.1646 77.3438 99.9727 78.7119 94.8848 80.4668 C
93.4756 80.9619 92.1123 80.5469 93.3892 80.0547 C
f
*U
*u
0 D
0 0 0 0 k
102.9067 87.8428 m
103.5137 87.2109 104.2007 86.5898 104.9912 85.9824 C
98.3018 85.2051 L
97.1646 85.9873 96.1719 86.8096 95.3433 87.6689 C
102.9067 87.8428 L
102.9067 87.8428 L
f
101.9238 89.9053 m
101.9238 89.9053 L
94.334 89.6348 L
93.5796 91.6719 93.8491 93.6885 95.0278 95.5928 C
99.29 91.6143 98.8223 91.7559 101.9238 89.9053 C
101.9238 89.9053 L
f
91.7085 89.54 m
91.7085 89.54 L
88.1846 89.4141 L
87.1973 91.7598 87.5708 94.082 89.1323 96.2451 C
92.5264 95.8691 L
91.1841 93.8545 90.8657 91.71 91.7085 89.54 C
91.7085 89.54 L
f
1 D
92.6958 87.6074 m
92.6958 87.6074 L
89.2383 87.5283 L
90.2407 86.4902 91.4819 85.5059 92.9292 84.5811 C
95.8989 84.9258 L
94.6294 85.79 93.5781 86.6855 92.6958 87.6074 C
f
*U
0 D
0.48 0 0 0 k
170.0078 101.0195 m
182.5513 94.582 179.5254 85.9893 164.1333 80.2109 C
178.6328 86.9727 183.6553 96.2988 163.293 103.7373 C
165.7783 102.9375 168.0361 102.0313 170.0078 101.0195 C
f
0 0 0 0 k
102.0703 98.2148 m
113.6733 92.8604 L
102.3896 99.5723 L
120.5298 106.7969 L
102.2046 100.7783 L
107.8823 119.2637 L
101.2363 101.5049 L
97.8306 109.2803 L
100.2065 101.2314 L
81.9312 111.627 L
99.6953 99.9502 L
80.2861 93.3955 L
100.0005 99.123 L
93.9863 80.543 L
100.8491 98.7656 L
109.3945 75.5605 L
102.0703 98.2148 L
f
U
u
0.48 0 0 0 k
177.5908 362.7373 m
164.6743 368.4648 151.7344 371.5957 137.7725 368.2065 c
123.811 364.8179 109.1753 356.3823 95.3711 347.0752 c
81.0405 337.4131 67.3149 326.7603 62.4043 317.4063 c
57.4941 308.0518 65.9619 301.9834 83.8647 297.8721 c
94.3838 295.458 112.2158 293.4053 130.3218 291.8047 c
160.4434 289.1416 192.6284 284.0195 222.1069 300.0986 c
235.3721 307.334 233.728 322.7666 221.6118 334.9922 c
209.4951 347.2178 192.8228 355.9829 177.5908 362.7373 c
f
218.2114 303.7646 m
231.4766 311 229.8325 326.4326 217.7163 338.6582 C
205.5996 350.8838 188.9272 359.6489 173.6953 366.4033 C
160.7788 372.1309 147.8389 375.2617 133.877 371.8726 C
119.9155 368.4839 105.2798 360.0483 91.4756 350.7412 C
77.145 341.0791 63.4194 330.4263 58.5088 321.0723 C
53.5986 311.7178 62.0664 305.6494 79.9692 301.5381 C
90.4883 299.124 108.3203 297.0713 126.4263 295.4707 C
156.5479 292.8076 188.7329 287.6855 218.2114 303.7646 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 126.981 328.0635 0 108.0081 1 0 0 1 0 0 Bg
108.0081 0 0 -108.0081 126.981 328.0635 Bm
f
0 BB
146.4995 366.7109 m
170.6758 361.2793 188.5454 341.5771 187.1201 325.2441 C
185.73 309.3135 157.2334 299.7109 117.3364 306.9775 C
97.5859 310.5752 84.5005 315.6309 81.4126 322.9141 C
78.5176 329.7432 84.0815 339.2432 94.5449 349.0767 C
99.8643 353.752 108.4658 358.8687 117.563 362.6436 C
126.5063 366.3535 136.4424 368.543 146.4995 366.7109 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 140.3174 344.7441 0 71.9575 1 0 0 1 0 0 Bg
71.9575 0 0 -71.9575 140.3174 344.7441 Bm
f
0 BB
155.8628 366.52 m
168.6353 363.8735 182.4468 357.0669 193.9019 349.3511 C
206.4097 340.9253 215.2515 331.248 214.1377 321.1982 C
211.0293 311.4785 197.3389 304.4121 178.437 301.8975 C
159.1499 299.3311 135.6455 300.5068 113.3066 304.3076 C
92.3291 307.377 78.1631 311.9482 74.0142 318.3447 C
70.3398 324.0098 75.1553 332.2671 85.6035 340.7798 C
95.4302 349.6558 108.0308 357.1372 120.0591 362.1997 C
131.7266 367.1089 143.0898 369.166 155.8628 366.52 C
Bb
0 0 0 0 Bh
1 (GradientFill 21) 72.792 353.5781 0 151.0604 1 0 0 1 0 0 Bg
151.0604 0 0 -151.0604 72.792 353.5781 Bm
f
0 BB
210.75 335.7246 m
223.1758 316.8154 203.6025 304.4541 173.6338 302.0059 C
143.1309 299.5137 106.0156 303.7695 85.7563 311.3623 C
115.4932 310.9111 133.0439 322.8125 147.3188 333.8989 C
160.3291 344.0044 171.8687 352.3784 210.75 335.7246 C
Bb
0 0 0 0 Bh
1 (GradientFill 20) 142.4194 347.8252 0 85.8266 1 0 0 1 0 0 Bg
85.8266 0 0 -85.8266 142.4194 347.8252 Bm
f
0 BB
0 0 0 0 k
199.9106 341.6733 m
191.2773 350.1602 178.252 356.9521 165.9751 361.6162 C
155.1729 365.7192 143.8853 367.4795 132.7817 364.27 C
121.0454 360.9824 120.3423 354.7705 128.9414 356.9966 C
140.6616 358.8027 152.9824 358.0322 164.6709 355.4409 C
177.4966 352.5962 190.2905 348.0459 199.9106 341.6733 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
99.9443 353.9443 m
92.7217 349.6909 85.6973 344.8535 79.374 339.7573 C
78.4028 338.8789 79.3813 338.9531 80.4644 339.8379 C
86.376 344.8442 93.0317 349.6538 99.9443 353.9443 C
99.9443 353.9443 L
f
61.8462 322.4111 m
61.8462 322.4111 L
58.7705 317.4199 58.7559 312.7363 63.0122 309.5518 C
69.708 304.543 83.8306 301.3076 102.3779 298.75 C
112.3535 297.374 122.7646 296.1973 132.6338 295.502 C
142.9297 294.7764 152.1782 294.5225 160.2642 294.9326 C
174.1348 295.6367 185.9624 298.2217 195.3369 302.3643 C
186.3911 298.8564 175.3091 296.6035 162.7886 295.9229 C
154.0762 295.4492 144.6841 295.7148 134.8384 296.4141 C
124.9751 297.1143 114.8428 298.2959 105.1392 299.6953 C
86.9375 302.3184 73.0205 305.6943 66.3921 310.8105 C
62.3818 313.9053 62.1338 318.2051 64.4541 322.748 C
65.1353 324.0459 62.6709 323.6621 61.8462 322.4111 C
f
*U
*u
0 D
0 0 0 0 k
96.9385 334.4165 m
95.396 333.0454 93.9727 331.6724 92.6709 330.2847 C
89.7944 330.6685 86.958 331.0508 84.1899 331.3965 C
85.916 333.229 87.8896 335.1011 90.0542 336.9971 C
92.2593 336.1294 94.5376 335.2793 96.9385 334.4165 C
96.9385 334.4165 L
f
116.8965 347.7437 m
116.8965 347.7437 L
111.9028 344.978 107.0059 341.8936 102.5049 338.563 C
100.0718 339.3975 97.7559 340.2373 95.5586 341.0752 C
101.2881 345.2832 107.4004 349.1338 113.5464 352.4355 C
114.5791 350.8652 115.71 349.2979 116.8965 347.7437 C
116.8965 347.7437 L
f
1 D
93.3994 341.9224 m
93.3994 341.9224 L
99.5195 346.4707 106.021 350.5879 112.5884 354.1089 C
112.1885 354.8589 111.8247 355.6274 111.479 356.3999 C
104.3921 352.5806 97.2788 348.0586 90.5776 343.0576 C
91.5005 342.6714 92.437 342.3096 93.3994 341.9224 C
93.3994 341.9224 L
f
87.8267 337.8813 m
87.8267 337.8813 L
86.9063 338.2573 86.0049 338.6387 85.1616 339.0225 C
82.3545 336.6812 79.9297 334.3901 77.8066 332.1606 C
78.9463 332.02 80.104 331.8833 81.2837 331.7407 C
83.2739 333.7881 85.4814 335.834 87.8267 337.8813 C
f
*U
0 D
0.48 0 0 0 k
159.9111 297.9561 m
183.125 298.2314 247.084 309.8281 211.9375 343.1992 C
246.6807 311.498 191.0239 297.1719 159.9111 297.9561 C
f
0.35 0 0 0 k
120.2876 365.6499 m
109.3662 359.4004 58.2969 329.1548 65.5562 312.8525 C
54.2412 327.5244 110.5864 360.8311 120.2876 365.6499 C
f
0.12 0 0 0 k
155.4082 300.3662 m
140.25 298.6455 120.0586 300.0879 101.1475 302.7539 C
83.9043 305.1846 70.3599 308.6221 66.3506 313.7383 C
63.7188 319.0889 74.457 322.125 76.271 318.1973 C
82.0635 313.3125 93.5288 309.209 107.7964 306.0244 C
123.3433 302.5537 140.6416 300.1602 155.4082 300.3662 C
f
0.48 0 0 0 k
156.0142 294.0068 m
182.8374 292.9521 250.6519 303.6738 215.6313 339.1084 C
250.7549 304.6494 189.4937 291.4053 156.0142 294.0068 C
f
0 0 0 0 k
202.1538 339.4858 m
217.0723 332.6016 L
202.5635 341.2319 L
225.8862 350.519 L
202.3262 342.7808 L
209.6265 366.5474 L
201.0815 343.7163 L
196.7021 353.7114 L
199.7578 343.3643 L
176.2617 356.729 L
199.1001 341.7173 L
174.1465 333.2891 L
199.4927 340.6543 L
191.7603 316.7666 L
200.584 340.1948 L
211.5703 310.3594 L
202.1538 339.4858 L
f
104.8164 340.3271 m
119.7354 333.4429 L
105.2266 342.0732 L
128.5488 351.3599 L
104.9893 343.6221 L
112.2896 367.3882 L
103.7446 344.5581 L
99.3652 354.5532 L
102.4204 344.2051 L
78.9243 357.5703 L
101.7632 342.5591 L
76.8091 334.1304 L
102.1553 341.4956 L
94.4229 317.6074 L
103.2466 341.0366 L
114.2334 311.2012 L
104.8164 340.3271 L
f
U
u
0.48 0 0 0 k
326.1445 384.064 m
333.334 387.6235 340.9395 394.6104 344.7246 399.2314 c
350.9883 406.8672 355.3242 416.0308 357.2344 425.7207 c
359.6094 437.7446 358.3594 450.4561 354.1191 461.9209 c
349.8242 473.605 343.1504 484.4243 337.0332 495.2075 c
323.2012 519.5923 310.0854 544.3203 298.0405 569.6401 C
288.8003 544.5811 276.7739 520.8745 263.2251 497.8975 c
254.3164 482.7891 243.5713 467.4214 239.2988 450.1689 c
227.1426 401.0864 282.3735 360.9722 326.1445 384.064 c
326.1523 384.0649 317.748 379.6348 326.1445 384.064 C
f
299.2285 381.2827 m
332.5488 381.2827 359.5723 408.3037 359.5723 441.624 C
359.5723 474.9443 341.8184 484.3569 299.2285 573.8066 C
272.3965 501.0425 238.8848 474.9443 238.8848 441.624 C
238.8848 408.3037 265.9082 381.2827 299.2285 381.2827 C
Bb
0 0 0 0 Bh
1 (GradientFill 24) 299.2285 485.2456 0 120.2064 1 0 0 1 0 0 Bg
120.2064 0 0 -120.2064 299.2285 485.2456 Bm
f
0 BB
327.3555 388.2329 m
346.5117 398.3467 359.5723 418.4619 359.5723 441.624 C
359.5723 474.9072 341.8555 484.3398 299.3711 573.5088 C
282.7993 501.6172 254.7866 471.75 259.3428 439.5503 C
264.001 406.6211 294.4365 383.6787 327.3555 388.2329 C
Bb
0 0 0 0 Bh
1 (GradientFill 23) 306.1948 480.583 0 107.1603 1 0 0 1 0 0 Bg
107.1603 0 0 -107.1603 306.1948 480.583 Bm
f
0 BB
0.48 0 0 0 k
357.2695 428.5483 m
351.3984 401.186 326.4727 382.5161 298.1636 382.0171 C
328.2539 385.7705 356.8105 404.4658 358.5254 441.3809 C
358.5957 437.1445 358.1953 432.8486 357.2695 428.5483 C
f
355.1836 432.4365 m
349.5586 398.7129 311.6655 371.4395 274.4209 391.0381 C
268.0078 394.4131 262.4531 398.7607 257.8496 403.7827 C
299.9424 396.8022 313.4966 491.9941 355.1836 432.4365 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 277.3169 485.9624 0 120.2372 1 0 0 1 0 0 Bg
120.2372 0 0 -120.2372 277.3169 485.9624 Bm
f
0 BB
0 0 0 0 k
316.4453 515.4941 m
335.0664 493.1929 356.0898 457.416 348.4238 422.6235 C
344.4688 404.667 335.3848 407.8623 338.2578 420.0679 C
342.5586 454.8452 330.3145 485.0635 316.4453 515.4941 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
265.0415 501.3877 m
257.8628 489.625 251.9897 478.9854 248.8706 472.5039 C
248.332 471.2266 249.3584 471.0449 250.0366 472.272 C
253.8516 479.2065 259.5601 492.4941 265.0415 501.3877 C
265.0415 501.3877 L
f
240.5645 445.415 m
240.5645 445.415 L
240.0884 436.3511 241.7441 427.1924 245.6201 418.7188 C
250.6616 407.6997 259.0708 398.7407 269.8013 393.0938 C
280.5176 387.4546 292.6953 385.5928 304.6157 387.6748 C
314.0718 389.3267 322.7813 393.3198 330.1074 399.1045 C
323.2813 394.2441 315.3931 390.8726 306.9019 389.3896 C
294.9814 387.3076 282.8037 389.1699 272.0879 394.8086 C
261.3569 400.4551 252.9482 409.4146 247.9067 420.4336 C
244.3179 428.2788 242.6323 436.7119 242.7793 445.1123 C
242.8428 447.4604 240.7285 447.6445 240.5645 445.415 C
f
*U
*u
0 D
0 0 0 0 k
260.3936 445.3354 m
259.5327 441.9102 258.7485 438.4502 258.061 434.936 C
252.0542 438.8413 L
252.8608 443.4985 253.8438 448.1709 255.0107 452.8276 C
260.3936 445.3354 L
260.3936 445.3354 L
f
263.8647 455.4165 m
263.8647 455.4165 L
258.269 462.5122 L
261.8428 472.2363 266.0532 480.7451 270.6455 487.7764 C
267.311 471.0981 265.6055 469.7598 263.8647 455.4165 C
263.8647 455.4165 L
f
1 D
256.3335 464.9668 m
256.3335 464.9668 L
260.1099 475.3584 264.6113 484.3799 269.5342 491.7148 C
268.0264 497.0586 L
262.6611 489.3149 257.7695 479.5825 253.7354 468.2612 C
256.3335 464.9668 L
256.3335 464.9668 L
f
253.127 455.4497 m
253.127 455.4497 L
250.6655 458.875 L
249.2573 453.2485 248.1157 447.5947 247.2305 441.9785 C
249.8965 440.2441 L
250.7798 445.4043 251.8706 450.4609 253.127 455.4497 C
f
*U
0 D
0.48 0 0 0 k
353.8926 426.9268 m
348.7051 402.7622 326.6914 386.2729 301.6899 385.8325 C
328.2656 389.1475 353.4844 405.6587 354.998 438.2603 C
355.0625 434.519 354.707 430.7246 353.8926 426.9268 C
f
0 0 0 0 k
342.3145 411.0859 m
358.6992 403.5244 L
342.7637 413.0039 L
368.3809 423.2041 L
342.5039 414.7051 L
350.5215 440.8086 L
341.1367 415.7324 L
336.3262 426.71 L
339.6816 415.3457 L
313.8755 430.0244 L
338.959 413.5371 L
311.5522 404.2798 L
339.3906 412.3687 L
330.8984 386.1328 L
340.5898 411.8643 L
352.6563 379.0952 L
342.3145 411.0859 L
f
U
u
0.48 0 0 0 k
428.6152 437.9663 m
436.5859 434.3008 450.0977 431.1841 463.8164 428.7549 c
486.6406 424.7129 511.0273 416.936 533.3633 441.3452 c
543.4141 452.3296 542.168 475.7563 532.9883 494.3149 c
523.8086 512.8745 511.1738 526.1812 499.6328 536.4341 c
489.8457 545.1284 480.041 549.8813 469.4629 544.7368 c
458.8828 539.5923 447.793 526.7871 437.334 512.6587 c
426.4766 497.9912 416.0762 481.8198 412.3555 467.6191 c
408.6348 453.418 415.0508 444.2056 428.6152 437.9663 c
f
529.7188 442.1787 m
539.7695 453.1631 538.5234 476.5898 529.3438 495.1484 C
520.1641 513.708 507.5293 527.0146 495.9883 537.2676 C
486.2012 545.9619 476.3965 550.7148 465.8184 545.5703 C
455.2383 540.4258 444.1484 527.6206 433.6895 513.4922 C
422.832 498.8247 412.4316 482.6533 408.7109 468.4526 C
404.9902 454.2515 411.4063 445.0391 424.9707 438.7998 C
432.9414 435.1343 446.4531 432.0176 460.1719 429.5884 C
482.9961 425.5464 507.3828 417.7695 529.7188 442.1787 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 460.5918 479.0654 0 100.4706 1 0 0 1 0 0 Bg
100.4706 0 0 -100.4706 460.5918 479.0654 Bm
f
0 BB
475.3828 537.7339 m
493.6992 529.4888 507.2402 499.5801 506.1602 474.7861 C
505.1055 450.6025 483.5156 436.0234 453.2852 447.0571 C
438.3203 452.5186 428.4043 460.1924 426.0645 471.249 C
423.8711 481.6162 428.0879 496.0361 436.0156 510.9648 C
440.0449 518.0625 446.5625 525.8296 453.4551 531.5596 C
460.2324 537.1924 467.7617 540.5156 475.3828 537.7339 C
Bb
0 0 0 0 Bh
1 (GradientFill 22) 470.6973 504.3877 0 75.9766 1 0 0 1 0 0 Bg
75.9766 0 0 -75.9766 470.6973 504.3877 Bm
f
0 BB
482.4766 537.4448 m
492.1543 533.4272 502.6191 523.0942 511.2988 511.3809 C
520.7773 498.5908 527.4746 483.8994 526.6309 468.6445 C
524.2754 453.8896 513.9023 443.1621 499.5801 439.3442 C
484.9668 435.4482 467.1582 437.2344 450.2324 443.0029 C
434.3359 447.6631 423.6035 454.6025 420.459 464.3125 C
417.6758 472.9121 421.3242 485.4473 429.2402 498.3696 C
436.6855 511.8438 446.2324 523.2012 455.3477 530.8862 C
464.1875 538.3389 472.7988 541.4619 482.4766 537.4448 C
Bb
0 0 0 0 Bh
1 (GradientFill 21) 419.5322 517.7983 0 134.0526 1 0 0 1 0 0 Bg
134.0526 0 0 -134.0526 419.5322 517.7983 Bm
f
0 BB
524.0645 490.6958 m
533.4805 461.9917 518.6504 443.2261 495.9414 439.5098 C
472.8281 435.7256 444.707 442.1865 429.3574 453.7124 C
451.8887 453.0278 465.1875 471.0942 476.002 487.9243 C
485.8613 503.2646 494.6035 515.9775 524.0645 490.6958 C
Bb
0 0 0 0 Bh
1 (GradientFill 20) 472.291 509.0659 0 89.3066 1 0 0 1 0 0 Bg
89.3066 0 0 -89.3066 472.291 509.0659 Bm
f
0 BB
0.16 0 0 0 k
515.8516 499.7261 m
509.3105 512.6094 499.4414 522.9204 490.1387 530.0005 C
481.9531 536.2295 473.4023 538.9009 464.9883 534.0288 C
456.0938 529.0381 455.5625 519.6089 462.0762 522.9883 C
470.959 525.73 480.2949 524.5601 489.1504 520.626 C
498.8691 516.3081 508.5625 509.4004 515.8516 499.7261 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
440.1074 518.354 m
434.6348 511.8975 429.3105 504.5532 424.5195 496.8174 C
423.7852 495.4839 424.5254 495.5967 425.3457 496.9404 C
429.8262 504.5405 434.8672 511.8413 440.1074 518.354 C
440.1074 518.354 L
f
411.2402 470.4849 m
411.2402 470.4849 L
408.9082 462.9082 408.8965 455.7974 412.1211 450.9639 C
417.1973 443.3594 427.8965 438.4492 441.9512 434.5659 C
449.5098 432.4775 457.3965 430.6914 464.875 429.6353 C
472.6777 428.5337 479.6855 428.1484 485.8105 428.772 C
496.3203 429.8418 505.2832 433.7642 512.3867 440.0532 C
505.6074 434.7275 497.2109 431.3076 487.7246 430.2749 C
481.1211 429.5562 474.0059 429.959 466.5469 431.0205 C
459.0723 432.0845 451.3965 433.8779 444.041 436.0015 C
430.252 439.9844 419.7051 445.1094 414.6836 452.875 C
411.6445 457.5732 411.457 464.1006 413.2148 470.9971 C
413.7305 472.9673 411.8633 472.3848 411.2402 470.4849 C
f
*U
*u
0 D
0 0 0 0 k
437.8281 488.7095 m
436.6602 486.6289 435.582 484.5435 434.5957 482.438 C
432.416 483.0205 430.2676 483.6011 428.1699 484.126 C
429.4785 486.9082 430.9727 489.749 432.6133 492.6284 C
434.2832 491.3101 436.0098 490.02 437.8281 488.7095 C
437.8281 488.7095 L
f
452.9512 508.9409 m
452.9512 508.9409 L
449.168 504.7432 445.457 500.061 442.0469 495.0044 C
440.2031 496.2705 438.4473 497.5469 436.7832 498.8184 C
441.125 505.2061 445.7559 511.0513 450.4121 516.064 C
451.1953 513.6802 452.0527 511.3003 452.9512 508.9409 C
452.9512 508.9409 L
f
1 D
435.1465 500.1035 m
435.1465 500.1035 L
439.7852 507.0093 444.7109 513.2583 449.6855 518.6045 C
449.3848 519.7422 449.1074 520.9087 448.8457 522.0825 C
443.4766 516.2842 438.0859 509.4194 433.0098 501.8281 C
433.707 501.2417 434.418 500.6924 435.1465 500.1035 C
435.1465 500.1035 L
f
430.9258 493.9697 m
430.9258 493.9697 L
430.2285 494.541 429.5449 495.1191 428.9043 495.7031 C
426.7793 492.1479 424.9414 488.6699 423.332 485.2856 C
424.1953 485.0713 425.0742 484.8643 425.9668 484.6484 C
427.4746 487.7554 429.1484 490.8618 430.9258 493.9697 C
f
*U
0 D
0.48 0 0 0 k
487.7891 428.2319 m
504.5898 429.0112 550.8809 446.875 525.4434 494.6875 C
550.5898 449.2886 510.3066 427.605 487.7891 428.2319 C
f
0.35 0 0 0 k
414.4883 464.7095 m
414.9141 472.0249 421.3457 488.4282 429.3262 501.3701 C
437.0762 513.9365 446.1914 526.8398 455.5215 536.1245 C
445.6191 524.7729 435.543 510.5039 427.2559 496.478 C
418.8066 482.1802 413.2422 468.3306 416.1348 455.3154 C
415.043 458.1504 414.0645 457.394 414.4883 464.7095 C
f
0 0 0 0 k
487.25 437.3975 m
475.7637 434.7876 460.4648 436.9741 446.1348 441.0225 C
433.0703 444.7134 422.8086 449.9312 419.7695 457.6982 C
417.7754 465.8198 425.9121 470.4297 427.2871 464.4678 C
431.6758 457.0522 440.3633 450.8223 451.1738 445.9878 C
462.9531 440.7202 476.0605 437.0859 487.25 437.3975 C
f
0.48 0 0 0 k
482.5898 427.3647 m
502.916 425.7642 554.2988 442.041 527.7617 495.8325 C
554.377 443.5225 507.959 423.416 482.5898 427.3647 C
f
0 0 0 0 k
519.7051 496.895 m
536.0918 489.3335 L
520.1563 498.8125 L
545.7734 509.0132 L
519.8965 500.5142 L
527.9141 526.6177 L
518.5293 501.5415 L
513.7188 512.5195 L
517.0742 501.1543 L
491.2676 515.8335 L
516.3516 499.3467 L
488.9453 490.0884 L
516.7832 498.1777 L
508.291 471.9414 L
517.9824 497.6738 L
530.0488 464.9043 L
519.7051 496.895 L
f
U
u
0.48 0 0 0 k
134.0059 415.731 m
167.3262 415.731 194.3496 442.7539 194.3496 476.0723 c
194.3496 509.3945 167.3262 536.418 134.0059 536.418 c
100.6855 536.418 73.6621 509.3945 73.6621 476.0723 c
73.6621 442.7539 100.6855 415.731 134.0059 415.731 c
f
131.9438 417.731 m
165.2642 417.731 192.2876 444.7539 192.2876 478.0723 C
192.2876 511.3945 165.2642 538.418 131.9438 538.418 C
98.6235 538.418 71.6001 511.3945 71.6001 478.0723 C
71.6001 444.7539 98.6235 417.731 131.9438 417.731 C
Bb
0 0 0 0 Bh
1 (GradientFill 16) 130.7368 482.9014 0 89.642 1 0 0 1 0 0 Bg
89.642 0 0 -89.642 130.7368 482.9014 Bm
f
0 BB
159.6313 531.436 m
212.4912 504.3159 172.8779 413.9619 120.6011 440.7617 C
92.4004 455.2183 82.1172 490.8682 97.2891 519.7002 C
106.1753 532.2793 133.0337 542.5728 159.6313 531.436 C
Bb
1 (GradientFill 15) 84.9312 502.7334 343 71.7285 1 0 0 1 0 0 Bg
68.5943 -20.9714 -33.7227 -110.3019 100.7666 554.5293 Xm
7615.2017 -2328.2012 -33.7227 -110.3019 -7514.4351 2882.7305 Bc
68.5943 -20.9714 -33.7227 -110.3019 100.7666 554.5293 Bm
7615.2017 -2328.2012 -33.7227 -110.3019 169.3608 533.5581 Bc
f
0 BB
0.48 0 0 0 k
189.9863 464.9956 m
184.1138 437.6343 159.189 418.9634 130.8784 418.4648 C
160.9702 422.2183 189.5254 440.9136 191.2397 477.8286 C
191.311 473.5923 190.9092 469.2959 189.9863 464.9956 C
f
157.5864 527.5508 m
183.0869 514.1318 193.3184 483.3936 180.4336 458.9087 C
167.5493 434.4238 136.4209 425.4492 110.9204 438.8682 C
85.4199 452.2861 75.1885 483.0254 88.0732 507.5098 C
100.9575 531.9946 132.0864 540.9692 157.5864 527.5508 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 132.1836 489.2773 0 70.3126 1 0 0 1 0 0 Bg
70.3126 0 0 -70.3126 132.1836 489.2773 Bm
f
0 BB
185.3389 473.4629 m
184.5103 468.4932 182.895 463.5859 180.4336 458.9087 C
167.5493 434.4238 136.4209 425.4492 110.9204 438.8682 C
105.2378 441.8584 100.3159 445.7104 96.2368 450.1602 C
133.5347 443.9751 148.4009 526.2373 185.3389 473.4629 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 114.0576 520.5142 0 113.1509 1 0 0 1 0 0 Bg
113.1509 0 0 -113.1509 114.0576 520.5142 Bm
f
0 BB
0 0 0 0 k
182.0308 485.3164 m
179.8638 509.1953 156.5669 530.8174 131.8838 528.5225 C
119.145 527.3374 119.522 518.459 128.2163 519.4346 C
152.2393 518.6074 175.8193 504.5361 182.0308 485.3164 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
98.0107 526.603 m
91.4683 521.9453 85.8906 515.9346 81.6724 508.9126 C
81.1289 507.6216 82.1655 507.4385 82.8506 508.6782 C
86.7046 515.6841 91.8799 521.7637 98.0107 526.603 C
98.0107 526.603 L
f
73.2803 481.5439 m
73.2803 481.5439 L
72.7993 472.3862 74.4722 463.1328 78.3892 454.5713 C
83.4824 443.4385 91.978 434.3867 102.8198 428.6816 C
113.6465 422.9844 125.9507 421.103 137.9937 423.2065 C
147.5483 424.875 156.3467 428.9106 163.7505 434.7539 C
156.8525 429.8438 148.8828 426.4375 140.3037 424.939 C
128.2607 422.835 115.9565 424.7168 105.1299 430.4141 C
94.2881 436.1187 85.792 445.1709 80.6987 456.3037 C
77.0728 464.2295 75.3696 472.75 75.5186 481.2378 C
75.5825 483.6099 73.4463 483.7959 73.2803 481.5439 C
f
*U
*u
0 D
0 0 0 0 k
100.2178 491.7778 m
99.1592 489.7666 98.1958 487.7153 97.3501 485.6074 C
89.9648 489.4937 L
90.957 492.311 92.165 495.0977 93.5996 497.8325 C
100.2178 491.7778 L
100.2178 491.7778 L
f
1 D
104.4849 497.4834 m
104.4849 497.4834 L
106.4937 504.4971 106.5288 503.7637 112.8223 516.791 C
107.1753 513.3066 101.9995 508.7832 97.606 503.3311 C
104.4849 497.4834 L
104.4849 497.4834 L
f
0 D
95.2261 505.3535 m
95.2261 505.3535 L
92.0317 508.0688 L
96.9917 514.4453 103.0049 519.6021 109.6021 523.3696 C
111.4551 519.582 L
105.4033 515.9775 99.8687 511.1895 95.2261 505.3535 C
95.2261 505.3535 L
f
1 D
91.2837 499.9517 m
91.2837 499.9517 L
88.2573 502.7197 L
86.5259 499.4146 85.123 496.0317 84.0342 492.6143 C
87.3125 490.8892 L
88.3979 494.0132 89.7393 497.0234 91.2837 499.9517 C
f
*U
0 D
0.48 0 0 0 k
187.5215 465.4893 m
181.9614 439.583 158.3623 421.9058 131.5581 421.4331 C
160.0483 424.9868 187.0845 442.6885 188.7085 477.6396 C
188.7759 473.6279 188.395 469.5605 187.5215 465.4893 C
f
0 0 0 0 k
176.1387 498.0249 m
190.2598 484.9487 L
177.2285 499.8208 L
206.5723 501.7109 L
177.5254 501.6328 L
194.272 525.458 L
176.4785 503.1255 L
175.2231 515.8462 L
174.876 503.2134 L
153.5493 526.6172 L
173.5464 501.6177 L
142.6968 501.2754 L
173.5981 500.291 L
156.3262 476.4873 L
174.647 499.3838 L
176.0684 462.1689 L
176.1387 498.0249 L
f
87.9248 495.459 m
99.1504 485.0635 L
88.791 496.8867 L
112.1191 498.3892 L
89.0269 498.3271 L
102.3403 517.2681 L
88.1943 499.5137 L
87.1973 509.626 L
86.9209 499.5835 L
69.9668 518.189 L
85.8638 498.3149 L
61.3389 498.043 L
85.9048 497.2603 L
72.1738 478.3369 L
86.7388 496.5396 L
87.8691 466.9541 L
87.9248 495.459 L
f
U
u
478.4668 347.6851 m
498.377 347.8467 517.0645 344.4702 531.5938 338.7627 C
546.4902 332.9102 557.2715 324.6797 560.2734 314.6758 C
563.2734 304.6719 557.2578 294.7002 544.5469 287.2705 C
531.4258 279.6006 511.5508 274.5557 488.2695 274.2383 C
464.9902 273.9199 443.5176 278.4346 428.1914 285.7881 C
413.2813 292.9434 404.4492 302.8613 404.7988 313.0166 C
405.1465 323.1719 413.8711 331.6763 427.4063 337.8374 C
440.5508 343.8218 458.5566 347.5225 478.4668 347.6851 C
Bb
0 0 0 0 Bh
1 (GradientFill 19) 486.0352 314.6289 0 90.7356 1 0 0 1 0 0 Bg
90.7356 0 0 -90.7356 486.0352 314.6289 Bm
f
0 BB
507.9902 281.8477 m
536.9629 290.8613 536.416 308.5586 522.6895 321.1953 C
509.6641 333.1851 484.1973 341.0928 457.5781 333.9961 C
442.8047 330.0581 432.6719 323.2217 428.2285 315.2227 C
407.0098 277.0254 483.9863 275.751 507.9902 281.8477 C
Bb
1 (GradientFill 18) 414.7031 289.6787 15 85.2323 1 0 0 1 0 0 Bg
82.3281 22.0597 17.4545 -65.1411 405.9727 322.2598 Xm
8021.4434 2149.3394 17.4545 -65.1411 -7615.4707 -1827.0791 Bc
82.3281 22.0597 17.4545 -65.1411 405.9727 322.2598 Bm
8021.4434 2149.3394 17.4545 -65.1411 488.3008 344.3193 Bc
f
0 BB
0.68 0 0 0 k
477.2188 346.4893 m
504.1445 345.2603 548.9102 339.189 558.877 313.9961 C
552.3105 339.2432 502.334 346.4985 477.2188 346.4893 C
f
521.1309 283.8711 m
537.4785 288.5889 547.3848 295.8398 550.6895 303.6807 C
553.8887 311.2744 550.7637 319.3643 540.8613 326.2295 C
531.2227 332.9087 516.8398 337.2876 501.2813 339.0781 C
485.8281 340.8569 468.8379 340.1294 453.7109 336.4146 C
438.2773 332.6362 427.3105 326.4268 422.1641 319.2734 C
416.8496 311.8857 417.6523 303.4668 426.2246 295.8467 C
435.0586 287.9805 450.2988 282.5693 467.7285 280.3369 C
485.2793 278.0889 504.7813 279.1543 521.1309 283.8711 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 425) 482.7002 307.7822 0 74.8042 1 0 0 1 0 0 Bg
74.8042 0 0 -74.8042 482.7002 307.7822 Bm
f
0 BB
550.623 317.3369 m
548.7559 320.251 548.9082 321.0166 542.125 325.7598 C
535.3438 330.5015 517.834 337.0649 502.125 338.895 C
486.5234 340.7119 465.2207 338.9272 454.1426 336.1753 C
443.0625 333.4233 441.2461 332.2656 436.2578 329.7163 C
459.3984 331.6777 476.9258 320.9404 494.6387 313.2471 C
512.918 305.3076 530.9063 300.8379 550.623 317.3369 C
Bb
0 0 0 0 Bh
1 (GradientFill 17) 459.1309 298.7559 0 100.2082 1 0 0 1 0 0 Bg
100.2082 0 0 -100.2082 459.1309 298.7559 Bm
f
0 BB
0.22 0 0 0 k
556.5996 308.0547 m
557.1973 300.6084 550.6797 293.1992 539.6914 287.71 C
528.416 282.0771 512.5859 278.54 495.4707 279.1074 C
477.8086 279.7061 477.7305 285.7666 489.6543 285.2646 C
505.9551 285.7529 521.6211 288.4521 533.7676 292.5869 C
545.7012 296.6504 554.1641 302.0449 556.5996 308.0547 C
f
*u
439.9844 281.917 m
430.9453 284.9707 423.3223 288.8984 417.6348 293.459 C
416.9219 294.2871 418.3086 294.4277 419.2148 293.6387 C
424.416 289.0791 431.5098 285.1006 439.9844 281.917 C
439.9844 281.917 L
f
406.9141 310.5791 m
406.9141 310.5791 L
406.4531 316.0645 408.7344 321.5234 413.7441 326.4658 C
420.1094 332.7441 430.4277 337.7544 443.416 340.915 C
449.8223 342.4741 456.668 343.5269 463.6895 344.0645 C
470.6953 344.6011 477.9395 344.6299 485.1641 344.1426 C
496.6543 343.3677 507.5254 341.3447 517.0254 338.3218 C
508.2305 340.8599 498.3789 342.563 488.0488 343.2612 C
480.793 343.7524 473.5488 343.7144 466.5449 343.1816 C
459.5117 342.646 452.6563 341.5913 446.248 340.0239 C
433.2676 336.8496 422.9473 331.814 416.6191 325.5107 C
412.002 320.9121 409.7168 315.8877 409.8105 310.8018 C
409.8535 309.3516 407.0879 309.2109 406.9141 310.5791 C
f
*U
*u
1 D
442.3672 304.9414 m
440.9063 306.1865 439.5938 307.4561 438.4277 308.749 C
435.2324 307.9082 432.0098 307.0674 428.7793 306.2178 C
430.123 304.4678 431.7617 302.7148 433.7168 300.9883 C
436.6094 302.3213 439.5039 303.6318 442.3672 304.9414 C
442.3672 304.9414 L
f
0 D
465.1348 294.2646 m
465.1348 294.2646 L
463.5059 292.4834 461.8984 290.6875 460.2813 288.8701 C
452.4395 291.0996 445.2539 294.0127 439.1934 297.5098 C
442.209 298.8164 445.207 300.0986 448.1914 301.3799 C
453.2109 298.6084 458.9375 296.2227 465.1348 294.2646 C
465.1348 294.2646 L
f
1 D
436.0371 296.1514 m
436.0371 296.1514 L
434.6191 295.543 433.1973 294.9277 431.7734 294.3193 C
438.6367 290.167 447.0078 286.8057 456.2109 284.3428 C
456.9902 285.2227 457.7852 286.0957 458.5742 286.96 C
450.1328 289.2861 442.457 292.3916 436.0371 296.1514 C
436.0371 296.1514 L
f
0 D
430.6641 299.6006 m
430.6641 299.6006 L
429.3145 298.9932 427.9766 298.3721 426.6367 297.75 C
424.293 299.8643 422.418 302.0146 420.9688 304.1699 C
422.4082 304.5566 423.832 304.9346 425.2832 305.3057 C
426.7461 303.3516 428.5547 301.4512 430.6641 299.6006 C
f
*U
478.4668 295.6396 m
498.377 295.4766 517.0645 298.8545 531.5938 304.5625 C
546.4902 310.415 557.2715 318.6445 560.2734 328.6484 C
563.2734 338.6519 557.2578 348.625 544.5469 356.0542 C
531.4258 363.7241 511.5508 368.7686 488.2695 369.0869 C
464.9902 369.4048 443.5176 364.8906 428.1914 357.5361 C
413.2813 350.3813 404.4492 340.4629 404.7988 330.3076 C
405.1465 320.1523 413.8711 311.6475 427.4063 305.4873 C
440.5508 299.5029 458.5566 295.8027 478.4668 295.6396 C
Bb
0 0 0 0 Bh
1 (GradientFill 16) 486.0352 328.6953 0 90.7364 1 0 0 1 0 0 Bg
90.7364 0 0 -90.7364 486.0352 328.6953 Bm
f
0 BB
507.9902 361.4761 m
536.9629 352.4639 536.416 334.7661 522.6895 322.1299 C
509.6641 310.1387 484.1973 302.2314 457.5781 309.3281 C
442.8047 313.2666 432.6719 320.1035 428.2285 328.1016 C
407.0098 366.2993 483.9863 367.5732 507.9902 361.4761 C
Bb
1 (GradientFill 15) 414.4834 354.9785 344 85.2317 1 0 0 1 0 0 Bg
81.93 -23.493 -18.8286 -65.6633 423.8604 387.6807 Xm
7982.1147 -2288.8315 -18.8286 -65.6633 -7558.2544 2676.5122 Bc
81.93 -23.493 -18.8286 -65.6633 423.8604 387.6807 Bm
7982.1147 -2288.8315 -18.8286 -65.6633 505.79 364.1875 Bc
f
0 BB
0.48 0 0 0 k
477.2188 296.835 m
504.1445 298.0645 548.9102 304.1357 558.877 329.3281 C
552.3105 304.0811 502.334 296.8262 477.2188 296.835 C
f
521.1309 359.4531 m
537.4785 354.7354 547.3848 347.4849 550.6895 339.6445 C
553.8887 332.0503 550.7637 323.96 540.8613 317.0947 C
531.2227 310.416 516.8398 306.0371 501.2813 304.2461 C
485.8281 302.4668 468.8379 303.1953 453.7109 306.9092 C
438.2773 310.6885 427.3105 316.8975 422.1641 324.0508 C
416.8496 331.4385 417.6523 339.8579 426.2246 347.478 C
435.0586 355.3438 450.2988 360.7554 467.7285 362.9873 C
485.2793 365.2354 504.7813 364.1704 521.1309 359.4531 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 482.7002 335.542 0 74.804 1 0 0 1 0 0 Bg
74.804 0 0 -74.804 482.7002 335.542 Bm
f
0 BB
550.623 325.9883 m
548.7559 323.0732 548.9082 322.3076 542.125 317.5654 C
535.3438 312.8223 517.834 306.2588 502.125 304.4297 C
486.5234 302.6123 465.2207 304.3975 454.1426 307.1494 C
443.0625 309.9004 441.2461 311.0586 436.2578 313.6074 C
459.3984 311.6465 476.9258 322.3838 494.6387 330.0771 C
512.918 338.0171 530.9063 342.4863 550.623 325.9883 C
Bb
0 0 0 0 Bh
1 (GradientFill 1) 459.1309 344.5684 0 100.2082 1 0 0 1 0 0 Bg
100.2082 0 0 -100.2082 459.1309 344.5684 Bm
f
0 BB
0 0 0 0 k
556.5996 335.2695 m
557.4688 352.5957 511.584 365.4609 495.4707 364.2163 C
477.8086 363.6187 477.7305 357.5571 489.6543 358.0601 C
507.5859 357.5229 549.4473 352.9258 556.5996 335.2695 C
f
*u
1 D
0.000031 0.000031 0.000031 0.000031 k
439.9844 361.4077 m
430.9453 358.3535 423.3223 354.4263 417.6348 349.8662 C
416.9219 349.0371 418.3086 348.896 419.2148 349.686 C
424.416 354.2451 431.5098 358.2227 439.9844 361.4077 C
439.9844 361.4077 L
f
406.9141 332.7446 m
406.9141 332.7446 L
406.4531 327.2598 408.7344 321.8018 413.7441 316.8584 C
420.1094 310.5801 430.4277 305.5693 443.416 302.4102 C
449.8223 300.8506 456.668 299.7979 463.6895 299.2598 C
470.6953 298.7227 477.9395 298.6943 485.1641 299.1816 C
496.6543 299.957 507.5254 301.9795 517.0254 305.002 C
508.2305 302.4648 498.3789 300.7617 488.0488 300.0625 C
480.793 299.5723 473.5488 299.6094 466.5449 300.1426 C
459.5117 300.6777 452.6563 301.7334 446.248 303.2998 C
433.2676 306.4746 422.9473 311.5107 416.6191 317.8135 C
412.002 322.4131 409.7168 327.4365 409.8105 332.5229 C
409.8535 333.9727 407.0879 334.1128 406.9141 332.7446 C
f
*U
*u
0 D
0 0 0 0 k
442.3672 338.3828 m
440.9063 337.1377 439.5938 335.8687 438.4277 334.5757 C
435.2324 335.416 432.0098 336.2573 428.7793 337.1064 C
430.123 338.8569 431.7617 340.6094 433.7168 342.3364 C
436.6094 341.0029 439.5039 339.6929 442.3672 338.3828 C
442.3672 338.3828 L
f
1 D
465.1348 349.0596 m
465.1348 349.0596 L
463.5059 350.8403 461.8984 352.6367 460.2813 354.4551 C
452.4395 352.2241 445.2539 349.312 439.1934 345.8149 C
442.209 344.5093 445.207 343.2266 448.1914 341.9438 C
453.2109 344.7168 458.9375 347.1021 465.1348 349.0596 C
465.1348 349.0596 L
f
0 D
436.0371 347.1738 m
436.0371 347.1738 L
434.6191 347.7817 433.1973 348.397 431.7734 349.0049 C
438.6367 353.1577 447.0078 356.5195 456.2109 358.9819 C
456.9902 358.1016 457.7852 357.2295 458.5742 356.3643 C
450.1328 354.0386 442.457 350.9331 436.0371 347.1738 C
436.0371 347.1738 L
f
1 D
430.6641 343.7241 m
430.6641 343.7241 L
429.3145 344.3311 427.9766 344.9526 426.6367 345.5742 C
424.293 343.46 422.418 341.3101 420.9688 339.1543 C
422.4082 338.7681 423.832 338.3901 425.2832 338.0181 C
426.7461 339.9736 428.5547 341.873 430.6641 343.7241 C
f
*U
0 D
0.48 0 0 0 k
477.3145 297.5176 m
504.1875 299.6357 548.7266 307.1865 557.8535 332.6958 C
552.125 307.2451 502.416 298.3398 477.3145 297.5176 C
f
0 0 0 0 k
425.4707 339.1235 m
441.8555 331.5615 L
425.9219 341.041 L
451.5371 351.2417 L
425.6602 342.7422 L
433.6777 368.8462 L
424.293 343.77 L
419.4844 354.7476 L
422.8379 343.3833 L
397.0313 358.0615 L
422.1172 341.5747 L
394.709 332.3169 L
422.5488 340.4063 L
414.0547 314.1699 L
423.7461 339.9023 L
435.8125 307.1328 L
425.4707 339.1235 L
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
